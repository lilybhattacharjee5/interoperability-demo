var index =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./data/data.json":
/*!************************!*\
  !*** ./data/data.json ***!
  \************************/
/*! exports provided: default */
/***/ (function(module) {

module.exports = JSON.parse("\"{\\\"NOR->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9988846045081479, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"COL->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9986194764786314, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"LTU->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9982555255992049, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"ROU->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9980551624373719, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"FRA->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9977124779685324, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"FRA->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.997616825294983, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"ESP->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9975198448284195, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"NLD->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9974954798176169, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"LUX->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9974867810597485, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"NLD->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9974386562604588, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"BEL->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9974225625051865, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"SWE->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9973379400810233, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"SWE->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.997240499479047, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"CAN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9970042513228696, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"LTU->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9969828980553138, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"ESP->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9967582849700672, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"FRA->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9966146438613203, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"COL->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.9964333860115995, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"NZL->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9964272879006656, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"KEN->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9963876210454088, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"JPN->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9963693906534666, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"USA->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9963373025816877, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"AUS->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.996243730551952, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"USA->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.9961003582963696, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"CAN->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9960923645056242, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"ROU->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9960475645383636, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"HUN->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9960137852123638, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"SWE->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9959864863885852, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"SWE->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9958157909946365, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"LUX->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9958118357601957, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"FRA->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9957311017350127, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"LTU->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.9955301286252722, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"LUX->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9954452918651109, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"KEN->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9954343921838732, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"SWE->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9954230368746819, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"USA->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9953071183217651, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"FRA->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9952991612944395, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"ROU->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9952249058948487, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"COL->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9951908266273437, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"AUS->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9950200506565583, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"USA->NLD\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"NL\\\", \\\"Overall_Similarity\\\": 0.9949652201278921, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"NLD\\\"}, \\\"HUN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9949578523851028, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"DNK->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9948522189995634, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"COL->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.9945269207266115, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"NLD->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.9944925027152106, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"KEN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9944844314362064, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"JPN->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9944169913767525, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"JPN->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.9943033304513759, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"JPN->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9942856795528867, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"NZL->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.994264159024549, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"KEN->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.994262534406248, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"ROU->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9942441047245967, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"SWE->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9940954428347029, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"AUS->JPN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"JP\\\", \\\"Overall_Similarity\\\": 0.9940949174590707, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"JPN\\\"}, \\\"LTU->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9940676242082077, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"USA->JPN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"JP\\\", \\\"Overall_Similarity\\\": 0.9939590506684383, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"JPN\\\"}, \\\"NLD->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9939417240406536, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"AUS->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9938920047393933, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"ESP->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9938254119002509, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"LUX->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9938138478754182, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"JPN->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.9937993175473384, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"USA->AUS\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"AU\\\", \\\"Overall_Similarity\\\": 0.9936831196804038, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"AUS\\\"}, \\\"LTU->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9936686786544566, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"USA->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9935599706598021, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"LTU->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9935567947971199, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"PER->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9935049413252067, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"NLD->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9934372010700624, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"NOR->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9934134417017991, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"COL->USA\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"US\\\", \\\"Overall_Similarity\\\": 0.9933844968104159, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"USA\\\"}, \\\"USA->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9932691622990043, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"PER->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9932449136564618, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"COL->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9932385840454525, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"USA->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.9931764435056406, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"USA->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9931568371459091, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"NLD->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9930873383964314, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"NLD->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.9929747630270477, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"MEX->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9929652867610412, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"CAN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9929546887559938, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"FRA->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9929240539671901, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"ROU->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9928417917354336, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"KEN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9928077607899548, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"PER->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9927633018222541, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"AUS->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.9925954333952534, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"KEN->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9925729750574722, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"COL->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9925289907611873, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"JPN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9924439886044605, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"MEX->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9924299666201346, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"ISL->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9923919278431093, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"JPN->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9923900625905051, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"ROU->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9923710075257299, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"NOR->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9922983461629878, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"NLD->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9922347482823409, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"USA->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9922045322314847, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"HUN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9921681172445189, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"MEX->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.99213205764827, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"NZL->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9919889752560435, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"JPN->NLD\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"NL\\\", \\\"Overall_Similarity\\\": 0.9918916099534114, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"NLD\\\"}, \\\"NLD->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9918492458701028, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"ROU->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9918420029512972, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"AUS->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9918110494012777, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"AUS->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9918047972996297, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"KEN->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9917957985171951, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"LTU->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9916430400380692, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"JPN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9915642383840562, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"MEX->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9914685549270944, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"HUN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9914456125499991, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"MDA->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9913519994302821, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"NOR->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9912743873479429, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"AUS->NLD\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"NL\\\", \\\"Overall_Similarity\\\": 0.991221726103335, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"NLD\\\"}, \\\"LTU->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9911894643754318, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"COL->JPN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"JP\\\", \\\"Overall_Similarity\\\": 0.9911295512833991, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"JPN\\\"}, \\\"SYC->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"SC\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9909513036688254, \\\"country_code_alpha3_A\\\": \\\"SYC\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"BRA->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"BR\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9909411672125518, \\\"country_code_alpha3_A\\\": \\\"BRA\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"LTU->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9908826299084393, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"LUX->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9907852943394293, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"NLD->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9906131626523702, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"LTU->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9905874754169647, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"NZL->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9905451257315456, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"NZL->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.990469846612436, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"PER->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9903307334052549, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"AUS->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.990304924590547, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"USA->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9902728171489324, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"MDA->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9902018538439259, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"JPN->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9901100327222652, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"ESP->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9900924163414347, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"KEN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.990016150281631, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"COL->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9899459120436901, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"SWE->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9899436861818187, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"LTU->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9899231914412271, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"BEL->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9898475772937246, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"USA->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9898274727469643, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"COL->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.989618289431484, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"NZL->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9894388635674148, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"NLD->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9893943890347985, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"AUS->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9892025409595716, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"NLD->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9891822879225718, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"KEN->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9891499813271855, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"ISL->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9891312632746504, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"KEN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9889521635817448, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"ROU->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9887904018997339, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"AUS->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9887354521245927, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"HUN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9887314477893743, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"USA->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9886140103548676, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"JPN->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9884527903371862, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"PER->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9883953985924674, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"NZL->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9883812973465915, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"COL->NLD\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"NL\\\", \\\"Overall_Similarity\\\": 0.9883787288560899, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"NLD\\\"}, \\\"HUN->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9880944038289611, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"ESP->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9880227827591679, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"AUS->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9879648914796726, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"HUN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9878663975368112, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"MEX->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9877698724925343, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"NOR->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9876734999774949, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"SWE->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9874017142134983, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"JPN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9873980041688862, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"SWE->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9872744967523145, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"PER->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9872037010579044, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"AUS->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9871700121467234, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"LTU->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9870947968620799, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"KEN->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9870443394976016, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"ISL->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9869962669603669, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"MDA->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9869765176949162, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"COL->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9868045977056297, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"AUS->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.9867269029706355, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"ESP->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9867156449240247, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"HUN->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9867117741497973, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"AUS->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9864810689574038, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"LUX->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9864771663293139, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"NLD->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9864186967932945, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"USA->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9863282996286379, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"DNK->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9861252479919865, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"NLD->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9860920799022838, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"COL->AUS\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"AU\\\", \\\"Overall_Similarity\\\": 0.9860218428314027, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"AUS\\\"}, \\\"PER->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.985647580215995, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"HUN->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9856326383366749, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"NLD->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9856276222093167, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"COL->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9856237948998999, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"MEX->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.985484751622209, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"ESP->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9851623857444258, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"AUS->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9851072879330113, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"MEX->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9850636833036274, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"AUS->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9849528710206662, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"ESP->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.984944292273605, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"AUS->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9846583161656559, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"NLD->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9846065858275735, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"CAN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9845645157914368, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"AUS->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.984223626612431, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"NLD->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9839947036525729, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"AUS->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9837410611727969, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"JPN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9836623605975212, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"ISR->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9836462165594371, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"NLD->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9835212307657492, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"USA->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9832562728148673, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"COL->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9830909037238309, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ESP->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9830335347265998, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"USA->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.983025280645158, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"CAN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.982974637337892, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"COL->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9828594781171628, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"MEX->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9828096004601634, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"LTU->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9826583106760239, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"ESP->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9825715524038182, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"MEX->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9824415353941, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"NLD->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9823968421304997, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ROU->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9823874407400671, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"HUN->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.982087880537637, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"ZAF->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9819814914446949, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"COL->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.981925625277657, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"ESP->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9819228085180721, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"FRA->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9819072568678371, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"JPN->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9818299658010923, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"MDA->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.981807289824245, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"FRA->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9817663958371098, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"MDA->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9817483175468866, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"SWE->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9815544531763801, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"COL->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9814162444558229, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"PRT->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9813743595217242, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"AUS->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9812120392312059, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"BRA->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"BR\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9809244040211191, \\\"country_code_alpha3_A\\\": \\\"BRA\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ESP->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9806405341856302, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"SVK->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9805334797210578, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"KEN->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9803255072876527, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"USA->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.980232935059984, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"NZL->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9800731469365453, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"NLD->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9799567135115456, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"KEN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9798823926120936, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"ROU->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9797603518790361, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"AUT->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"AT\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9796512047956418, \\\"country_code_alpha3_A\\\": \\\"AUT\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ISR->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9795623266675516, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"CAN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9795534742531243, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"ISL->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9795332920891691, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"MDA->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9795254608815571, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"DNK->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9794429684607814, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"USA->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9793735531071128, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"SVK->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9793671278235805, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"ROU->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9793333494582172, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"NZL->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9792988600711316, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"AUS->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9792776374336413, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"JPN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9792672153429492, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"DNK->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9791786191862891, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"USA->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9790612556105213, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"USA->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9790457375807275, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"PER->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.978918122127676, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"ISR->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9787919917015341, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"NLD->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.9787717547218241, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"USA->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9786490446590682, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"SWE->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9786061818158452, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"ROU->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9785942533506907, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"MDA->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9785500625250332, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"PER->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.978007699370619, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"LTU->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9778947228383579, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ISL->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9777028427151375, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"NOR->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.977634923717763, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"FRA->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9776222544274779, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"ESP->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9775999201629596, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"AUS->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9774608818658588, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"CZE->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9773583377400684, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"LUX->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9773427780515003, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"ESP->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9773311686374826, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"SWE->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9773306370075694, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"ESP->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9772642986074245, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"JPN->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9772056712011763, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"JPN->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9769658452766647, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"MDA->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9768202388609107, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"LTU->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9768090315970924, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"BRA->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"BR\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9767893995377523, \\\"country_code_alpha3_A\\\": \\\"BRA\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"KEN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9767852787921066, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"MEX->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9766422206404288, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"ESP->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9765134862808922, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"MEX->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9765031630172575, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"HUN->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9764964255255234, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"NLD->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9764665050085222, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"LTU->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9763951788845318, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"MEX->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9763348702994282, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"MEX->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9763168852087879, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"LTU->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9763163666831757, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"SWE->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9762738449616877, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"ROU->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9762147237496924, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"FRA->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9760837652161557, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"DNK->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9759524188226691, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"ROU->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9759150769102035, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"NZL->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9758202762915528, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"NLD->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.975741683856368, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"NOR->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9756875096491799, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"HUN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9756774594169345, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"AUS->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9755720137301636, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"LTU->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9755624988104091, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"AUS->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9754608258513496, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"CAN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9753257231337304, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"NZL->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9753061374834389, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"LTU->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9752172810679608, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"HUN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9751333611361144, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"BEL->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9750385328584368, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"ISL->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9748500573011024, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"JPN->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9748223498060851, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"SVK->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9748178145684913, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"NOR->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9748027847435708, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"KEN->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9747782867967554, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"SVK->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9746427173990445, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"ISR->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9745661772139654, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"BEL->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.974516920815138, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"JPN->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9744397677819807, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"CAN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9743701856667543, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"JPN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9742887475638136, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ISL->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.974250483214685, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"PER->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9742007849336994, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"LUX->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9741377880310093, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"FRA->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9740595010064222, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"COL->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9740245674849698, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"SYC->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"SC\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9739190020840093, \\\"country_code_alpha3_A\\\": \\\"SYC\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"HUN->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9738506318932582, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"NZL->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.973801336460382, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"AUS->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9737099060773295, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"DNK->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9736418971373543, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"ISR->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9736287142287512, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"LUX->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9735914648590966, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"POL->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"PL\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.973412171224792, \\\"country_code_alpha3_A\\\": \\\"POL\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"USA->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9734116515601458, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"USA->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.973380499281873, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"SWE->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9733705239803571, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"ISR->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9730987765790499, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"KEN->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9730069936575249, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"COL->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9728861012535434, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"NLD->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9727167426141857, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"MEX->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9723969419874744, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"PER->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9723658577272781, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"MEX->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9723364458162407, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"JPN->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.9723102269061067, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"KEN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9722638352202713, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"USA->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.972234467164955, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"KEN->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9721912613555717, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"NZL->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9720253532955084, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"SVK->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9719544690077018, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"USA->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9719195707949287, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"NOR->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9717623355923894, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"HUN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9715897791768163, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"MDA->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.97150336095446, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"NZL->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9713908248686747, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"SVK->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9712315083934518, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"ESP->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9712190588477122, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"JPN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9711918153369665, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"COL->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9711349826856784, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"NLD->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9708573321021555, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"AUS->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9708073814009163, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"LTU->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.9707525275204261, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"FRA->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9707362685126965, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"USA->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9706247521457056, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"LTU->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9706145660568251, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"NLD->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9704932824729992, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"FIN->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9703985557074792, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"AUT->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"AT\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9703293442097849, \\\"country_code_alpha3_A\\\": \\\"AUT\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"POL->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"PL\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9702429897835506, \\\"country_code_alpha3_A\\\": \\\"POL\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"ESP->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9700584357162166, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"MEX->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9697879120329446, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"JPN->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9696031583808432, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"LTU->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9694139582730853, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"ZAF->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9693913173469494, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"SVK->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9692742269173522, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"ESP->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9692091071970016, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"SVK->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9687532653122948, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"PRT->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9687432973958883, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"ROU->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9686994331360848, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"HUN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9686884237992098, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"LTU->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9685571186186399, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"MDA->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9685006956692875, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"NLD->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9684893029839662, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"DNK->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9684844509043035, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"MEX->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9684466196930749, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"JPN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9683985358979695, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"CZE->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9682814949532476, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"LUX->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9681907385144125, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"FIN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9680136568672236, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"JPN->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9676263199283722, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"ROU->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.9675074050452401, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"MYS->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.967437395865991, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"SWE->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9673665343386918, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"PER->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9671518501966904, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"ROU->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.9671242178535114, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"HUN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.967115831879471, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"COL->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9670169934915761, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"MEX->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.966937617746226, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"LTU->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9668592838229063, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"KEN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9668041095421713, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"AUS->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9666194848824842, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"NOR->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9664241247166103, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"KEN->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9663420427590921, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"CZE->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9663349864134477, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"NZL->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9661587837307191, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"BEL->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9661474931624906, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"NZL->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9661006366083763, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"MEX->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9659588351250308, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"KEN->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.965869032119715, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"MDA->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9658189023088248, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ROU->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.9656971042493717, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"BEL->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9656379718042156, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"ESP->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9653036341301418, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ESP->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9652910090719115, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"ESP->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9652265458670594, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"NZL->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9652237305316687, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"MDA->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9648490051059151, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"ROU->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9648336201952367, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"USA->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9646864024332005, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"ESP->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.964650263129438, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"FIN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9645753902022262, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"NLD->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9644694499607096, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"ROU->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9644011674223849, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"CAN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9643426357115725, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"KEN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9642252386622084, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"DNK->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9642251520865108, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"SWE->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9639983854477232, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"SVK->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9639318418271684, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"SWE->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9639223357673848, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"PER->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.9637998578391778, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"SYC->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"SC\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9635779414978106, \\\"country_code_alpha3_A\\\": \\\"SYC\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"USA->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.963522837505985, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"SWE->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9633722306922866, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"FRA->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9632488664634581, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"DZA->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"DZ\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9631381189074576, \\\"country_code_alpha3_A\\\": \\\"DZA\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"CZE->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9631264921350895, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"NOR->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.963074311048618, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"SVK->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9630041426580725, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"USA->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9628033161476823, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"COL->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.962743665048392, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"FRA->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9626991075432436, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"COL->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9625781212527135, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"FIN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9623994558288842, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"ROU->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9622810958000154, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"POL->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"PL\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.962136561977367, \\\"country_code_alpha3_A\\\": \\\"POL\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"LUX->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.962088070863286, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"MDA->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9617615405548214, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"MDA->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9613688129440597, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"LUX->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9611719090048936, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"COL->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9610844825050113, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"HUN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9610382122803233, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"LTU->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9607786844163109, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"AUS->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9607744314145796, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"CAN->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9606235327332001, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"LTU->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9604410020119779, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"NLD->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9600989578059697, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ESP->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9600749791987858, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"MEX->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9600622326176501, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"COL->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9599730767101265, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"LTU->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9598287923190336, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"FIN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9597889334457136, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"HUN->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9596498759610785, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"ZAF->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.959318715135435, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"POL->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"PL\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9591386617836493, \\\"country_code_alpha3_A\\\": \\\"POL\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"JPN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9590624942853381, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"JPN->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9590277322511539, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"MEX->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9589329562404235, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"KEN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9589099799440927, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"NZL->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9586430662427721, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"PER->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9586135974911206, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"CHL->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.958557233871603, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"SVK->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9585286729524922, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"BEL->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9584874215702088, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"PER->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9584327529607781, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"PRT->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9582075277496266, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"ESP->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9581385799498203, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"JPN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9580055734622354, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"FRA->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9579481081744178, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"USA->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9578423242006799, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"SVK->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9576050903729812, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"NOR->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.957508888005738, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"PER->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9574626169100278, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"COL->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.9574208851174483, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"PER->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9573202255422688, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"ISL->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9572579257421923, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"KEN->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9572495719162808, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"ISL->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9572464005405886, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"ZAF->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9570136321506135, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"JPN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9569238913997503, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"MEX->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9568143453023047, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"MEX->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9564688909234387, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"SRB->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.956409990281808, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"KEN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9561845065672071, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"NOR->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9561467891814075, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"NZL->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.956136274344521, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"POL->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"PL\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9556818703498426, \\\"country_code_alpha3_A\\\": \\\"POL\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"DZA->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"DZ\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9554997407185918, \\\"country_code_alpha3_A\\\": \\\"DZA\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"COL->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9553395325161064, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"MEX->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9553262030464701, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"NZL->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9552331932413772, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"SVK->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9550273488773142, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"COL->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9548982444029115, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"ROU->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.9545068258590172, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"LUX->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9543356327427869, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"FRA->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9543041091183743, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"LTU->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9541410455218615, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"NZL->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9537559466168277, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"MDA->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9532336367105185, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"CZE->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9520331692640648, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"MDA->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.951894583409881, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"SVK->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9517799879278895, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ROU->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9517025880563245, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"PER->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9516482379660127, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"USA->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.951413932744606, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"ISL->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9509038724315144, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"MEX->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9508088138243499, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"PER->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9506555603900133, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"DZA->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"DZ\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9505910796414644, \\\"country_code_alpha3_A\\\": \\\"DZA\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"COL->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9496017121432281, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"PRT->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9484247312048534, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"NZL->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9478780260852485, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"COL->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9475401567499411, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"SVK->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9475366493135631, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ISR->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.947377247395101, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"COL->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.947325142263878, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"SWE->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9471252720920764, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"JPN->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9465870457208831, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"MYS->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9463617100676329, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"CHL->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9461062311537988, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"PER->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9458784529041397, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"SWE->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.94579239909468, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"LUX->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9456826282932631, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"KEN->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9455207180184029, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"DZA->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"DZ\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9455172518327591, \\\"country_code_alpha3_A\\\": \\\"DZA\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"MYS->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9454987370510766, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"SVK->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9453313614019466, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"PRT->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9451460817599308, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"BEL->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9449943022952498, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"LUX->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9448035417748047, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"LTU->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9446169212182522, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"BRA->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"BR\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9445748103491688, \\\"country_code_alpha3_A\\\": \\\"BRA\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"CZE->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9442294311922468, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"BEL->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9439756309583289, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"ISL->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9439244174070888, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"AUS->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9434920170390787, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"PRT->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9431111583104683, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"PER->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9428108326825737, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"NZL->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9427376755276884, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"PER->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9426843241769209, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"AUS->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.942495692822421, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"CAN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9422774215667999, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"CHL->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9419878315109974, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"CHL->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9418853376157417, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ESP->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9418848460233641, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"CZE->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9413618840354072, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"COL->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.941249525544164, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"PER->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9410602887916244, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"FIN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9408013005622322, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"FIN->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9400767440912411, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"MYS->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9400583967529728, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"LTU->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9397903114584744, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"KEN->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9392646641457152, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"NLD->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9388830250185298, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"CHL->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9381145974291057, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"SVK->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9378449626176051, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"FIN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9374451173805244, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"NLD->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9372239066390733, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"ZAF->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9371558448956513, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"MEX->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9370558686463124, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"NOR->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9369023869528945, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"HUN->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9366567792248268, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"ZAF->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9364890254773908, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"COL->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9362409042037326, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"USA->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9350214501643695, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"FRA->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9350171346675189, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"CHL->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.934943235011038, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"NLD->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9346827293440572, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"ZAF->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9338097663376681, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"JPN->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9337743355192679, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"ROU->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9336674436158449, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"CAN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.93354943731913, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"USA->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9332377465296063, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"MEX->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9328949437403131, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"DNK->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9325867194718839, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"PER->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9319498060621495, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"KEN->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9315464933950568, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"VNM->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.9308851855128201, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"JPN->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9308777988700411, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"FRA->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9306004006517907, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"ZAF->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9299779914328355, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"ESP->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9289774869077414, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"COL->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9281380189246937, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"SWE->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9277433525268567, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"POL->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"PL\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9275637151286419, \\\"country_code_alpha3_A\\\": \\\"POL\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"FIN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9274077956727947, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"IDN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.9272957738021771, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"NZL->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9272418440532195, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"MYS->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9266587896148176, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"PRT->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9265358984310849, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"HUN->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9265327028003663, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"PER->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9264698066062386, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"PRT->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.92608970782902, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"FIN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9260677618733574, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"SWE->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.92601299532611, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"CHL->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.925923474909835, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"CAN->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9255411734873432, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"BEL->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9250486296129852, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"PRT->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9250187000387884, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"BLZ->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9250067367619763, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"LTU->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9248490164219946, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"ZAF->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9248358793952067, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"NOR->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9247521988375687, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"LUX->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9247502580649041, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"ZAF->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9246362210551222, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"FIN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9243444347069202, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"ROU->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9243019839092508, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"ROU->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9242189651860832, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"IDN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.924079877403474, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"ESP->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.923952444659434, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"CHL->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9238234610208311, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"BLZ->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.9234130370758008, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"CZE->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9226531833384377, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"AUS->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9219274277820843, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"VNM->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9217592700123627, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"SRB->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9209125454489114, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"SRB->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9206135142560065, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"CHL->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9205489458040338, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"CHL->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.9203528753710376, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"BLZ->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.9201958456161493, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"NOR->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.920063303705531, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"FRA->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9193950888711079, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"SVK->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.9192395208322888, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"CAN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9188960884102176, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"FIN->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.9184352036644832, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"USA->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9182144025910115, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"BLZ->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9181645573915254, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"ZAF->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.917739719030419, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"AUS->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.9169666795415471, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"BLZ->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9167949557339831, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"BLZ->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.9166129162506333, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"TWN->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9162568475921672, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"ESP->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.9157235541196646, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"ZAF->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9155719291317591, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"JPN->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9150088684222931, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"ZAF->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.9148589362817485, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"CHL->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.9143670873529509, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"KEN->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9142549916532177, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"SRB->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.9138144134190078, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"LUX->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.912928466821165, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"CHL->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.9124144460900087, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"FRA->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9123324429630401, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"ZAF->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9122569428723183, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"MDA->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9119654400484956, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"ZAF->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9118869212017059, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"ROU->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9112870119384772, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"ESP->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.9107044689663234, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"ROU->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.9105464285791813, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"DZA->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"DZ\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9105055135909759, \\\"country_code_alpha3_A\\\": \\\"DZA\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"SRB->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9102468976080083, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"BLZ->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.9098474096801593, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"TWN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9097532132364654, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"GRC->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"GR\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9096317298477672, \\\"country_code_alpha3_A\\\": \\\"GRC\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"BLZ->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.9095767173439454, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"LUX->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9094184618512684, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"BLZ->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.9089235868773384, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"SWE->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.908819472058835, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"MEX->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.9087929910756225, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"AUS->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9087846871153388, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"MYS->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.9086836170980636, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"JPN->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.9083661247228679, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"SWE->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9077430078049641, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"SVK->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.9076664992829487, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"CHL->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9074786302589934, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"COL->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9071406825224043, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"BLZ->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.9071139237682946, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"MYS->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9068678958659857, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"BLZ->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.9066154089918869, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"AUS->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.9059977044501455, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"FIN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9054120898814961, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"CHL->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9052671379949272, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"BLZ->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9050617379396247, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"CHL->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.9046765743627808, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"BEL->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.9045280449186474, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"FIN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.9045012102175862, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"CHL->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.9039779170443967, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"KOR->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.9037043475055334, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"PER->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.9036643102725788, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"BLZ->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.9033761505451626, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"SWE->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.9031484292359314, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"BLZ->AUS\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"AU\\\", \\\"Overall_Similarity\\\": 0.9030186195936561, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"AUS\\\"}, \\\"IDN->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.902878516245144, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"HKG->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.9025856762922875, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"SRB->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.9022989675962088, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"FRA->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.9020326849238264, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"HUN->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.901457746377039, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"CHL->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9013102238614145, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"MYS->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.9003825418101544, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"BEL->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.9003789883479197, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"TWN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.9000800688419872, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"MYS->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.899703204679564, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"NZL->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8994721561629786, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"TWN->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.8994514533886729, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"MYS->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.8992368195670426, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"NZL->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8990014738996209, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"HUN->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8986598833169784, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"ZAF->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.8983395261703425, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"LTU->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8976709639127399, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"SVK->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8973707540288265, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"KEN->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8971204112972018, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"CAN->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.8970199478655981, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"FRA->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.896924831858773, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"SVK->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.8967145417597586, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"BLZ->NLD\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"NL\\\", \\\"Overall_Similarity\\\": 0.8966439166454232, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"NLD\\\"}, \\\"LUX->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8964344014347403, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"TWN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.8964336782348754, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"IDN->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.8962865851597529, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"BLZ->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.8962170440178926, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"BLZ->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.8961230673164083, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"PRT->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.8960321942319059, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"NLD->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8959574418470823, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"NLD->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8954743583766406, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"ZAF->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.8952358947078296, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"IDN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.8951853960579468, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ROU->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.8949800698402218, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"MEX->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8945015960836331, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"BLZ->JPN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"JP\\\", \\\"Overall_Similarity\\\": 0.8944206539071625, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"JPN\\\"}, \\\"CHL->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.893576305536827, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"SRB->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.8920456108350265, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"ZAF->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.8917625751701047, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"FRA->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.8914384726611436, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"LTU->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8906298713969855, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"ROU->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.8905873534129795, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"MDA->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8902074080270654, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"NOR->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8900032538366689, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"IDN->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8895697618430655, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"BLZ->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.8895387918688448, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"SWE->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.8893580953869483, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"USA->BLZ\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"BZ\\\", \\\"Overall_Similarity\\\": 0.8889477450773713, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"BLZ\\\"}, \\\"ZAF->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.8888904498201586, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"TWN->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.8884878079769363, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"ZAF->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8875370184359102, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"BLZ->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.8874883089079254, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"SRB->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.8872628495522478, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"IDN->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.8872060590231189, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"MYS->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.8870712334330326, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"IDN->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.8860499962946117, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"TWN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.8859967229327579, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"TWN->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.8847340537739826, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"BLZ->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.8846018961639386, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"ZAF->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.8842430130237297, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"TWN->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.8840691701037102, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"TWN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.882966567656488, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"BLZ->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8826472304943893, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"LUX->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.882098099082833, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"USA->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8818123410629598, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"BLZ->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.8812123041759348, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"BLZ->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.8808777723268336, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"ROU->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.8804195408466692, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"SWE->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8802247622213573, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"MYS->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.8801193131497776, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"CHL->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.8797246996525363, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"USA->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8787903679390943, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"AUS->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8784697791869094, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"JPN->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.877534304939037, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"FRA->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.8769503183653116, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"BLZ->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.8762702235698098, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"TWN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.876217260089855, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"KEN->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8755794021422231, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"VNM->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.8754188275528683, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"BLZ->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.8753627119141132, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"COL->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8746832087654964, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"IDN->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.8742793275768794, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"TWN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.8735761835618273, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"BLZ->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.873412160256401, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"VNM->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.873264023250346, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"VNM->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.8717092602395503, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"TWN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.8715169167059826, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"TWN->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.8707309733607089, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"BLZ->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.8705510334654154, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"BLZ->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.8700384780789358, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"CHL->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.8695700807178465, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"BLZ->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.8676552038063617, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"PER->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8668175319959909, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"COL->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8658352198499314, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"ZAF->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.8655920867729754, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"ZAF->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.8641306069634007, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"SRB->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.8636400135068396, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"MYS->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.8619825523016278, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"BLZ->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.8615736088094593, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"SRB->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.8614176533387655, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"FRA->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.860481181241857, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"PER->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8596567566870155, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"BLZ->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.8592052280811999, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"ROU->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8564838856561189, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"CAN->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8542593046675891, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"NZL->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8532667785212685, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"BLZ->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.8514462190597082, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"SRB->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.8509187677315864, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"BLZ->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.8503984033625204, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"MEX->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8493313624997352, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"COL->BLZ\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"BZ\\\", \\\"Overall_Similarity\\\": 0.8487200059285501, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"BLZ\\\"}, \\\"TWN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.8482328396142823, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"SRB->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.8481595032503956, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"SRB->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.8463189709139403, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"BLZ->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.8461826881731582, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"VNM->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8451939699910203, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"AND->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8450734321464918, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"BLZ->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.8449839922446328, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"TWN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.8432959843972596, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"LTU->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8406024532593763, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"BLZ->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.8405379869118764, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"HKG->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.8402258527363866, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"SVK->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8382354099974447, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"NLD->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8377547235725735, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"COL->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.83730887607047, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"VNM->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.8372637421591484, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"CHL->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8371889974562022, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"IDN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.8371495785445019, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"KEN->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8360445210065366, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"HKG->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.8360421889714059, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"TWN->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.8358011015441501, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"SGP->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8356965371611146, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"PER->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8354495476243148, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"TWN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.835360670063541, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ESP->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8335560201951564, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"IDN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.8330797175500692, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"COL->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.8325862643620534, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"HKG->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.8323005234443496, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"JPN->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8316571612237137, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"SRB->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.8305487118800878, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"USA->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.8296145940143853, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"SRB->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.8293614377627009, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"HKG->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.8283401569695297, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"IDN->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.8275396660698638, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"ZAF->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.8274233229121927, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"HKG->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.8273155027063299, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"BLZ->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.8272826004702318, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"VNM->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.8254517789839868, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"PRT->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.8250115333737731, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"AND->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.8243517731238188, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"IDN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.8219800500239308, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"VNM->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.8207801991167237, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ZAF->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.8204307766568804, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"BGR->JPN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"JP\\\", \\\"Overall_Similarity\\\": 0.8198735632186849, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"JPN\\\"}, \\\"HKG->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.8181888873979217, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"TWN->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.8180855521133731, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"IDN->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.8180521325267205, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"ESP->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.8174797483670949, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"VNM->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.8173029626165745, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"JPN->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.8155097949573843, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"USA->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.8126853949716281, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"SGP->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.8126795061273022, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"VNM->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.8123640087286369, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"HKG->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.8109575113354576, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"NLD->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.8097297151317021, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"HKG->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.8074885666854441, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"HKG->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.8066848501337958, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"BGR->AUS\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"AU\\\", \\\"Overall_Similarity\\\": 0.8048055639673793, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"AUS\\\"}, \\\"VNM->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.8045395424733655, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"HKG->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.8045079433240119, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"IDN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.8029308242880214, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"HKG->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.8017792219745389, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"NLD->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.7999712125226806, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"BLZ->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.7993096275656574, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"HKG->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.7992406305846367, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"VNM->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.7987013106649357, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"IDN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.7971734886472656, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"BGR->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.7961341054730656, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"VNM->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.7959261358597722, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"HKG->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.7954936999075186, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"LTU->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.7951503536540265, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"AUS->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.7938453105854674, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"IDN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.7933451373392505, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"VNM->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7930278439118297, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"BGR->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.7924207976875745, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"BGR->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.7920221572170432, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"VNM->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.791896900958699, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"IDN->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7914637873807535, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"VNM->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.790359055747371, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"HKG->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.7894569654841352, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"BGR->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.7883163961469524, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"JPN->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.7881617070022175, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"HKG->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.7880791977129256, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"VNM->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.7875454425316094, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"BGR->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.7871003361436266, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"HKG->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.7870931996709184, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"VNM->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.7869289816855173, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"CZE->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7859473277252623, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"BGR->NLD\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"NL\\\", \\\"Overall_Similarity\\\": 0.7847544250223841, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"NLD\\\"}, \\\"CHL->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7844346082723475, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"IDN->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.7841956051525502, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"BGR->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.7834150885614646, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"USA->BGR\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"BG\\\", \\\"Overall_Similarity\\\": 0.7827970311825905, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"BGR\\\"}, \\\"TUR->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.7818789643447432, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"BGR->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.7812668884776405, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"IDN->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.7810727606467811, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"UKR->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.7810188867435315, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"UKR->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.7807435130540622, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"VNM->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.7804138323610147, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"BGR->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.7799946727866384, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"BGR->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.7797016282512873, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"VNM->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.779465531497973, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"AUS->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.779456429450214, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"USA->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.7791362555827437, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"BGR->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.7790377094267761, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"BGR->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.7790255047655157, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"BGR->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.7786921372253389, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"IDN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.7785254526071375, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"UKR->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.7780263242388562, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"BGR->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.7778145045362438, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"AUS->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.777324256653085, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"BGR->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.7771629634408318, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"HKG->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.7770468027852772, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"COL->BGR\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"BG\\\", \\\"Overall_Similarity\\\": 0.7769538321316626, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"BGR\\\"}, \\\"VNM->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.7761536493792512, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"UKR->COL\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"CO\\\", \\\"Overall_Similarity\\\": 0.7753816008236353, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"COL\\\"}, \\\"BGR->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.7752299686363026, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"BGR->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.7748162744109919, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"UKR->USA\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"US\\\", \\\"Overall_Similarity\\\": 0.774247312983611, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"USA\\\"}, \\\"UKR->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.7741637686572709, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"BGR->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.7739148164052707, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"ISL->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7731183327660909, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"BGR->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.7725217266924274, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"KEN->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.7723952934553419, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"UKR->JPN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"JP\\\", \\\"Overall_Similarity\\\": 0.7723436452122127, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"JPN\\\"}, \\\"HKG->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.7722035899546491, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"VNM->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7717767111886389, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"UKR->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.7717065522061584, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"HKG->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.7716443422767741, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"BGR->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.7715763283517547, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"BGR->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.7714970593252864, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"BGR->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.7713688926723744, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"HKG->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.7707175153199476, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"UKR->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.7700935986204622, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"UKR->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.7698651068478498, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"UKR->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.769445209272852, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"BGR->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.768433920829175, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"KOR->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.7682279136463253, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"UKR->NLD\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"NL\\\", \\\"Overall_Similarity\\\": 0.7681556355323058, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"NLD\\\"}, \\\"SGP->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.766521499607363, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"BGR->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.7659956589464361, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"UKR->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.7648337282106606, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"UKR->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.7645859196021844, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"UKR->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.7640749718364932, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"UKR->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.7638836890793351, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"UKR->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.7630260455175873, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"BGR->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.7628138983780333, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"UKR->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.7624434991071725, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"BGR->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.762398584986343, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"SGP->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.7623948617956757, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"ROU->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.761846107416578, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"BGR->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.7616334270838663, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"SWE->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.7615196438278938, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"VNM->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.7602177037179555, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"SGP->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7595937841024214, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"BLZ->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.7594833597062991, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"COL->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.7586209121476137, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"IDN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.7584360483628871, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"UKR->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.7571984840668183, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"HKG->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.7568069205734049, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"UKR->AUS\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"AU\\\", \\\"Overall_Similarity\\\": 0.7565404982705058, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"AUS\\\"}, \\\"SGP->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.7562660119314701, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"HKG->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7557707694399985, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"BGR->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.7553200440206743, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"VNM->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.7550418406766218, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"HKG->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.7549577979974494, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"BLZ->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7549499745619788, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"UKR->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.7547220924675881, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"IDN->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.7542320404191991, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"UKR->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.7538358269167844, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"ESP->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7528159501569734, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"LUX->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7514657709898089, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"ESP->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7508053107784312, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"SGP->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.7506301607545011, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"NOR->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7502585628476603, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"BGR->BLZ\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"BZ\\\", \\\"Overall_Similarity\\\": 0.7502367729314244, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"BLZ\\\"}, \\\"VNM->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.7500091997978166, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"UKR->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.7493837449555384, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"CHL->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7492074073349224, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"BGR->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.7479512162716725, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"VNM->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.7466314076718402, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"VNM->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.745667420090579, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"CHL->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7441043442742322, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"HKG->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.7431382739227705, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"SGP->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.7430897762946433, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"PER->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7430628209787707, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"HKG->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.7424705988477708, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"VNM->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.7420959418856833, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"SWE->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7412340007606849, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"CRI->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"CR\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7410952658303924, \\\"country_code_alpha3_A\\\": \\\"CRI\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"VNM->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.7406258445680123, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"MYS->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7405675887915691, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"VNM->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.7403951026966867, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"HKG->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.7403208611000685, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"HKG->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.7396914739551467, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"BGR->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.7393743536535101, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"UKR->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.7391417585854313, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"UKR->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.7390075982543365, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"COL->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7384805289071686, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"NZL->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7383115821284358, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"BGR->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.7383104137194316, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"IDN->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.7380503547654407, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"UKR->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.7379719943624505, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"HKG->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.7378789252922939, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"HKG->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.737303759403711, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"UKR->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.7367286368674711, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"HKG->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.7356674190963468, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"UKR->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.7354621277855548, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"IDN->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.7351330281395797, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"MEX->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7344081199499328, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"AND->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.733884178495366, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"AND->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.7335872743016615, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"NZL->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7334969297819737, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"LTU->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7332840719069774, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"NLD->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.73296451213199, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"HUN->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7325937370895012, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"HKG->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.7301028127717415, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"UKR->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.7300445640160091, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"USA->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7298010888796541, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"BGR->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.7289010258240853, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"FRA->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.7286993766397478, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"FIN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7282198921787034, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"AND->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.7277594043222722, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"UKR->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.727132751096475, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"KEN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7269573016659429, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"BGR->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.726729757800277, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"HKG->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.7261574255321422, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"FRA->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7255386078923437, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"ROU->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.7254883788166352, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"HKG->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.7253332243983084, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"SGP->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.7252258539698555, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"SGP->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.7252239398316822, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"BRA->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"BR\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7249686414256542, \\\"country_code_alpha3_A\\\": \\\"BRA\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"UKR->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.7246734804911649, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"UKR->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.7240655582792036, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"UKR->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.7238814164932857, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"ZAF->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7233952419983317, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"SGP->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.7232096684231472, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"SVK->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7220640322428865, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"MDA->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.721761855492615, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"UKR->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.721542673988191, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"JPN->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7208863191056567, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"UKR->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.720321271470842, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"AUS->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7201888113246926, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"LTU->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.719642131677799, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"VNM->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.7195414384529185, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"SGP->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.7194512300119873, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"AND->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.717985347050956, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"HUN->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7170916237686751, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"UKR->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.7168495436413893, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"ROU->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7164232213376027, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"VNM->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.7153543066178333, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"LUX->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7142341948281837, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"UKR->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.7141461634253782, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"NLD->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7138642980428094, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"UKR->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.7129271377235263, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"BGR->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.7122625762237679, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"AND->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.7110539567232208, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"PER->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.709896265503187, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"KEN->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7092591153119265, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"SWE->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7090829735541597, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"COL->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.7085857926522372, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"IDN->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.7074060521119931, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"JPN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.707039135927332, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"AUS->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7064060298217393, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"SRB->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7057816455008691, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"AND->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.7053120039077396, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"SGP->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.7051067988040758, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"CHN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7044913722744236, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"NLD->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7040176132880447, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"TWN->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.7037590255108194, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"USA->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.7036011049195582, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"SGP->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.7032942902362266, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"AND->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.7000330836307106, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"USA->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.6992167418417067, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"MEX->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.6990016851064903, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"SYC->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"SC\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6983015692816833, \\\"country_code_alpha3_A\\\": \\\"SYC\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"HKG->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.6976648220793973, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"SGP->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.6961143881159901, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"ISR->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6957654577172929, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"LTU->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.6944664231675389, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"IDN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.6943114505215012, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"AND->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.692612125775748, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"AND->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.6924169974300505, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"NZL->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.6920740213722149, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"UKR->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.6910980166486473, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"JPN->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.6905853037819475, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"BGR->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.6902720318471288, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"HUN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6887817649101774, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"SGP->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.6876343929585209, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"ROU->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.6876328878078184, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"FRA->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.6872797738828218, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"MEX->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.6864992626391708, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"SGP->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.6863049952621809, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"AND->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.6851890684241719, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"ESP->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.685118626957983, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"UKR->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.6841930048039376, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"AUT->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"AT\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6828049951565617, \\\"country_code_alpha3_A\\\": \\\"AUT\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"HKG->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.6821610975209745, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"SGP->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.6806819524136588, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"RUS->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.6790118297322356, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"IDN->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.676457161643844, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"MDA->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6755658216654646, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"AND->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.6741998624632423, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"SGP->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.6731461895991614, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"AND->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.6719475960194427, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"SVK->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6682745267447053, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"VNM->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6671990825784555, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"KEN->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.6659466737700979, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"SGP->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.6530182220609443, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"AUS->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6498709144709719, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"AND->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.6468246888845351, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"UKR->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.6454525985577455, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"BGR->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.6409093715845567, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"BGR->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.6401707126307224, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"SVK->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.639371367550128, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"COL->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.6392839771863597, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"SGP->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.6388001447240137, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"UKR->BLZ\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"BZ\\\", \\\"Overall_Similarity\\\": 0.6381658893744657, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"BLZ\\\"}, \\\"DNK->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6369738207231151, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"PER->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.636820464862101, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"SGP->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6360650354941463, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"AND->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.630915636621272, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"UKR->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6302650279667398, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"BGR->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.6238686286242439, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"AND->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.6227085654194976, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"DZA->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"DZ\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6194140833507265, \\\"country_code_alpha3_A\\\": \\\"DZA\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"POL->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"PL\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6145589177952383, \\\"country_code_alpha3_A\\\": \\\"POL\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"ZAF->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.6143467327456533, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"NOR->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.6082358463362092, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"UKR->BGR\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"BG\\\", \\\"Overall_Similarity\\\": 0.59950658837601, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"BGR\\\"}, \\\"BLZ->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.5950535197396991, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"CHN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.5867805709767586, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"SWE->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5844272506786719, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"CAN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5800174507766541, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"LUX->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5789397809515494, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"TWN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5682635908521004, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"UKR->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.5681700902225155, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"IDN->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5674309694665025, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"BGR->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.5635104463950237, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"HKG->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.5623210299074695, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"CHN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.5610175897008418, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"PER->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.557389380698909, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.5548196595618032, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ROU->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5547951596780112, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"FRA->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5546740462582158, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"CHN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.5468765858547271, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"UKR->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.5456949577544993, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"COL->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5452979983400768, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"BGR->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5449290977234184, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"BGR->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.5442731036930635, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"CHN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.5439887412445632, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"ZAF->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5422299671749208, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"HKG->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.5404184420692911, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"UKR->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5383752001480557, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"GRC->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"GR\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5360201681382465, \\\"country_code_alpha3_A\\\": \\\"GRC\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"KEN->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5346108037039484, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"BEL->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5317461662003902, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"CHN->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.5312597445495697, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"RUS->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.5291997720606494, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"CHN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.5265817595323806, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"BLZ->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.5172099217694158, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"JPN->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5150709171869527, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"MEX->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5147855226363465, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"USA->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5107230402507701, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"SVK->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5105347164267795, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"NLD->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5093078298489765, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"HKG->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.5075968545412917, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"NZL->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.5051644000737754, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.4990433443567689, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"LTU->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.49574239719478785, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.4802674401910505, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"UKR->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.4788561856005906, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"HUN->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.47550889072834346, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHN->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.47239264534499514, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"HKG->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.47049852019424154, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"ESP->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.46049230394717533, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.4584049800410206, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"CHN->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.4568777042122829, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"AUS->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.45318116971102684, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHL->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.45261367589103174, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.4517310185962087, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"CHN->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.44287884861846216, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"TUR->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.43416658158512456, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"UKR->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.4284306655861061, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"CHN->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.4269583344870318, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"CHN->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.42287853556588584, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"CHN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.4217826444617303, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"CHN->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.40600849871415534, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"SWE->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.4056563353552811, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"HKG->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.4017606088935748, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"CHN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.4000666806996188, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"AND->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.39752319599996266, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"IND->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.3973482676318656, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"FRA->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.39647975420554893, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"ROU->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.39444923289770073, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHL->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.3920895665137272, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"KOR->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.3831183471508919, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"CHN->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.382255875339478, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"CHN->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.37804741954789534, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"UKR->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.37137912611449897, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"BGR->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.36940820095995064, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"IND->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.35065106293355464, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"BGR->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.34964875729360434, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"TUR->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.34742636051573494, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"IDN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.34708939053609056, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"PER->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.3447774837844275, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"CZE->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.33383923226741885, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"COL->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.33312722872921585, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"TUR->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.33105981320964295, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"JPN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.32914588597666206, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"KEN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.32284147997905643, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"PRT->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.3217805195928879, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"MYS->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.32161975111192054, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"ZAF->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.3203822849967959, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"SVK->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.3202289141132111, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"HKG->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.31867295715614397, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"TUR->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.31836120935183276, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"MYS->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.31774058553826, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"ISL->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.316805164643423, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"CHN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.3146484942990959, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"UKR->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.3138545550343782, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"NZL->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.3128200891982149, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"USA->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.31159792607698433, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"MEX->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.3074378995540896, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"NLD->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.3071832194556947, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"TUR->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.3045199007099071, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"HKG->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.3029307305808273, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"LTU->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.30213456549389694, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"RUS->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.29998750866088764, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"HUN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.29210495722410745, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"TUR->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.29150073655176634, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"SVK->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.29112686353667794, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"IND->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.289735074610901, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"HKG->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.28635929722248643, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"POL->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"PL\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2853721477527782, \\\"country_code_alpha3_A\\\": \\\"POL\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"MDA->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.2845851459496387, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"CHN->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.28389006502115155, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"AUS->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.2835779512280201, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"IDN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2833042995190236, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"ISR->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.28306124616456807, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"CHN->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.2822212132632438, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"CHN->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.2820475363825554, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"IND->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.28090876239036144, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"ESP->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.2784381707326977, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"SVK->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.2780323459530669, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"SAU->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"SA\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.27768794454194046, \\\"country_code_alpha3_A\\\": \\\"SAU\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"CHL->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.27629687783043444, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"PER->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.27589510551734286, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"SGP->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.27529504838205165, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"JPN->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.269830095323509, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"BGR->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.2694472140767654, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"COL->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.2683366957297406, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"DNK->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.2664499965626492, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"CZE->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"CZ\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2663933884503591, \\\"country_code_alpha3_A\\\": \\\"CZE\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"FIN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.2657883968558543, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"BLZ->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.26348058338018565, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"IND->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.2630924526237661, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"CHN->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.2601741244829796, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"PRT->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"PT\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2601551192027014, \\\"country_code_alpha3_A\\\": \\\"PRT\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"KEN->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.26005672179555306, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"CHL->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.25948785156507337, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"PER->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.25771141161936595, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"IND->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.2572060057864187, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"IND->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.25703214140532005, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"ISL->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2554941736843407, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"FIN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2552976599442901, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"ZAF->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.2542860507883673, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"USA->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.25419100150486695, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"COL->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.25366752677018456, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"NZL->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.25360658308255424, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"UKR->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2531471956269895, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"JPN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2529868956015806, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"NLD->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2524084120240373, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"LTU->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.2516433138873544, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"NZL->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.25134866856800453, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"NOR->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.25060504670107187, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"CAN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.2501714196175442, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"SVK->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.24937347005213462, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"BRA->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"BR\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.24917199438129845, \\\"country_code_alpha3_A\\\": \\\"BRA\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"KEN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2480603011769673, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"USA->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2477209296060754, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"MEX->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.2474136540466123, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"SAU->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"SA\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.24716870557437898, \\\"country_code_alpha3_A\\\": \\\"SAU\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"AUS->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.24665160587382973, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"KOR->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.2459524740580208, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"SWE->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.24552214967607744, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"TUR->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.2451549841588364, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"LTU->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2429417092107471, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"ZAF->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.24243536833758306, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"HUN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2423554438360671, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"IND->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.24192556176120072, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"KOR->HKG\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"HK\\\", \\\"Overall_Similarity\\\": 0.24117096788394798, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"HKG\\\"}, \\\"ISR->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"IL\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.24112856520237613, \\\"country_code_alpha3_A\\\": \\\"ISR\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"RUS->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.23999531238815375, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"IND->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.2396751649134805, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"SAU->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"SA\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.23931248469726385, \\\"country_code_alpha3_A\\\": \\\"SAU\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"KOR->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.23856627434291422, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"SYC->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"SC\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.23818686601298322, \\\"country_code_alpha3_A\\\": \\\"SYC\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"HUN->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.237881927097363, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"IND->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.23785343965072803, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"ESP->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.23734378411580737, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"AUS->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2369197292846672, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"DNK->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"DK\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.23676112255921922, \\\"country_code_alpha3_A\\\": \\\"DNK\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"FRA->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.23613730937557953, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"IND->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.23583366615632484, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"NLD->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.23551685953788426, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"LUX->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.23529142649116763, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"TUR->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"TR\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.23485963286175615, \\\"country_code_alpha3_A\\\": \\\"TUR\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"IDN->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.23443326376141194, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"MEX->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2343140916453179, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"ROU->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.2331910196413668, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"ESP->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.23267019134937694, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"MDA->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.23212544339913888, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"IDN->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.23208122428878075, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"JPN->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.23078477870488934, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"NOR->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.23002506798062827, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"PER->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.2296216598530083, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"VNM->CHN\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"CN\\\", \\\"Overall_Similarity\\\": 0.22911651550202816, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"CHN\\\"}, \\\"CHL->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.22840176228992815, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"COL->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.22527342777199977, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"BEL->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.22478062415513456, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"DZA->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"DZ\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.22468459678082908, \\\"country_code_alpha3_A\\\": \\\"DZA\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"RUS->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.22425491980252277, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"RUS->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.22398799146547765, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"SWE->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.22352227003396985, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"TWN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.22254913484065875, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"LUX->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.22222166647184893, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"NZL->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.22209061759919924, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"RUS->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.22136908659322163, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"RUS->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.22119738619265816, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"IND->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.2208652916386029, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"KEN->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.22022029504872986, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"IND->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.21963026251989937, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"BGR->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.21912148134556597, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"RUS->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.21884917122098635, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"RUS->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.21689364184585624, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"CAN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2168820266276852, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"USA->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.21685317227528034, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"NLD->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.21609512946790577, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"FRA->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.21594567696188793, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"RUS->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.21391790565753444, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"IND->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.21296333910039544, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"LTU->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.2119722220187069, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"ZAF->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.21182850154223465, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"MEX->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.21180332906548704, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"SWE->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.2111576474065292, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"ROU->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.21113739308730972, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"BEL->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.21061262380854018, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"TWN->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.2093553362209024, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"IND->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.20884154047326442, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"MDA->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.20816519431403868, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"SAU->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"SA\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.20776887979879888, \\\"country_code_alpha3_A\\\": \\\"SAU\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"RUS->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.20720017198009322, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"HUN->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.20707423740165254, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"RUS->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.20698595141400944, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"AUS->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.20582322307115175, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"ESP->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.20505325272598807, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"IND->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.20272062259494739, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"TWN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.2024990016946826, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"ROU->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.20067623933085876, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"RUS->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.19915309483575516, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"SRB->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.19871061681011848, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"VNM->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.19841342849047428, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"IND->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.1978510567420918, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"FRA->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.19774434362555682, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"IND->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.19766075355830726, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"IND->MYS\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"MY\\\", \\\"Overall_Similarity\\\": 0.19732821143090384, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"MYS\\\"}, \\\"IND->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.19714071698923963, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"RUS->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.19586727802260417, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"BLZ->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.19520693324393845, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"RUS->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.1949542433937641, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"IND->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.19357462241319023, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"IND->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.1930273698584789, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"SWE->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.19271170901932444, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"KOR->PER\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"PE\\\", \\\"Overall_Similarity\\\": 0.19265909215163046, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"PER\\\"}, \\\"KOR->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.19257704175001, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"COL->KOR\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"KR\\\", \\\"Overall_Similarity\\\": 0.19016289257210972, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"KOR\\\"}, \\\"LUX->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.18944827162636735, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"NOR->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.18891702887074346, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"RUS->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.18669417602668226, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"KOR->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.18486380379074407, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"BGR->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.18460799203685518, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"ROU->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.18389611490351576, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"KOR->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.18351022108791515, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"LUX->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.18291000098757826, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"KOR->JPN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"JP\\\", \\\"Overall_Similarity\\\": 0.1818704634746071, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"JPN\\\"}, \\\"FRA->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.1817115582511627, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"KOR->USA\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"US\\\", \\\"Overall_Similarity\\\": 0.17860664108297986, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"USA\\\"}, \\\"KOR->KEN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"KE\\\", \\\"Overall_Similarity\\\": 0.17789389454833016, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"KEN\\\"}, \\\"KOR->SVK\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"SK\\\", \\\"Overall_Similarity\\\": 0.17776123924411302, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"SVK\\\"}, \\\"KOR->NZL\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"NZ\\\", \\\"Overall_Similarity\\\": 0.1771323581455837, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"NZL\\\"}, \\\"RUS->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.17630950709910853, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"KOR->NLD\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"NL\\\", \\\"Overall_Similarity\\\": 0.17580819960961447, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"NLD\\\"}, \\\"RUS->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.17575753304537478, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"KOR->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.17553666966744752, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"KOR->ZAF\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"ZA\\\", \\\"Overall_Similarity\\\": 0.1745663155333983, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"ZAF\\\"}, \\\"KOR->IDN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"ID\\\", \\\"Overall_Similarity\\\": 0.17413551885603096, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"IDN\\\"}, \\\"KOR->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.17372489478061437, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"KOR->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.17292283180246515, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"KOR->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.1719164811712165, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"KOR->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.17170461585176178, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"UKR->KOR\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"KR\\\", \\\"Overall_Similarity\\\": 0.17030109410024918, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"KOR\\\"}, \\\"KOR->ISL\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"IS\\\", \\\"Overall_Similarity\\\": 0.1694406505680538, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"ISL\\\"}, \\\"BLZ->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.16904619443625357, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"KOR->HUN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"HU\\\", \\\"Overall_Similarity\\\": 0.16900734828121233, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"HUN\\\"}, \\\"KOR->LTU\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"LT\\\", \\\"Overall_Similarity\\\": 0.16852404531323584, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"LTU\\\"}, \\\"KOR->AUS\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"AU\\\", \\\"Overall_Similarity\\\": 0.16708358534384682, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"AUS\\\"}, \\\"KOR->MEX\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"MX\\\", \\\"Overall_Similarity\\\": 0.1669403901828148, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"MEX\\\"}, \\\"AND->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.1641641894914071, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"BLZ->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.1636535130061193, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"KOR->MDA\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"MD\\\", \\\"Overall_Similarity\\\": 0.16325217018791105, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"MDA\\\"}, \\\"KOR->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.16051639330065426, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"KOR->ESP\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"ES\\\", \\\"Overall_Similarity\\\": 0.16035008559822095, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"ESP\\\"}, \\\"SGP->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.16033993104157718, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"KOR->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.15877981801446384, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"IND->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.1551576255827013, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"KOR->CHL\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"CL\\\", \\\"Overall_Similarity\\\": 0.1549178647519689, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"CHL\\\"}, \\\"KOR->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.15218369443233015, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"KOR->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.15087226640329188, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"KOR->SWE\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"SE\\\", \\\"Overall_Similarity\\\": 0.150133548674659, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"SWE\\\"}, \\\"RUS->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.14952460454127536, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"RUS->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.1492622412426975, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"KOR->CAN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"CA\\\", \\\"Overall_Similarity\\\": 0.14798645041373204, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"CAN\\\"}, \\\"KOR->FIN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"FI\\\", \\\"Overall_Similarity\\\": 0.1479722559571207, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"FIN\\\"}, \\\"SGP->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.14776766789643236, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"KOR->TWN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"TW\\\", \\\"Overall_Similarity\\\": 0.1475095566837108, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"TWN\\\"}, \\\"VNM->RUS\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"RU\\\", \\\"Overall_Similarity\\\": 0.14691211282049665, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"RUS\\\"}, \\\"KOR->NOR\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"NO\\\", \\\"Overall_Similarity\\\": 0.14620122550324333, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"NOR\\\"}, \\\"SRB->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.14587547686796998, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"KOR->ROU\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"RO\\\", \\\"Overall_Similarity\\\": 0.14579865503943945, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"ROU\\\"}, \\\"KOR->LUX\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"LU\\\", \\\"Overall_Similarity\\\": 0.14387563658039793, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"LUX\\\"}, \\\"KOR->BGR\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"BG\\\", \\\"Overall_Similarity\\\": 0.14353017739462492, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"BGR\\\"}, \\\"KOR->FRA\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"FR\\\", \\\"Overall_Similarity\\\": 0.1434056247130302, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"FRA\\\"}, \\\"VNM->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.14178757199121717, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"KOR->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.14023556468339637, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"IND->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.13877871274148124, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"BLZ->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.1380129705602089, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"KOR->BEL\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"BE\\\", \\\"Overall_Similarity\\\": 0.13789367980903477, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"BEL\\\"}, \\\"TWN->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"TW\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.1367972915141974, \\\"country_code_alpha3_A\\\": \\\"TWN\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"KOR->VNM\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"VN\\\", \\\"Overall_Similarity\\\": 0.12316718095910706, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"VNM\\\"}, \\\"CHN->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.11693733657917749, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"IND->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.11545523710648897, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"VNM->IND\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"IN\\\", \\\"Overall_Similarity\\\": 0.11348995123266992, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"IND\\\"}, \\\"BLZ->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"BZ\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.10923270776487459, \\\"country_code_alpha3_A\\\": \\\"BLZ\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"KOR->BLZ\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"BZ\\\", \\\"Overall_Similarity\\\": 0.10586766959286109, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"BLZ\\\"}, \\\"KOR->SRB\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"RS\\\", \\\"Overall_Similarity\\\": 0.10170804622781526, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"SRB\\\"}, \\\"RUS->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"RU\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.09806597248567428, \\\"country_code_alpha3_A\\\": \\\"RUS\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"KOR->SGP\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"SG\\\", \\\"Overall_Similarity\\\": 0.09150105197958103, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"SGP\\\"}, \\\"IDN->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"ID\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.06767912728236103, \\\"country_code_alpha3_A\\\": \\\"IDN\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VNM->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"VN\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.06624187983841046, \\\"country_code_alpha3_A\\\": \\\"VNM\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"JPN->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"JP\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.05895325067237267, \\\"country_code_alpha3_A\\\": \\\"JPN\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"KOR->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.05140402351591644, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"AND->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.05021879075139668, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"IND->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.044995713553676264, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"NZL->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"NZ\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.039031561680607174, \\\"country_code_alpha3_A\\\": \\\"NZL\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"COL->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"CO\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.03686295206747581, \\\"country_code_alpha3_A\\\": \\\"COL\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"SWE->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"SE\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.03672941216472514, \\\"country_code_alpha3_A\\\": \\\"SWE\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"MDA->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"MD\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.03462718841460466, \\\"country_code_alpha3_A\\\": \\\"MDA\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"KOR->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"KR\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.03343700664490468, \\\"country_code_alpha3_A\\\": \\\"KOR\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"AUS->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"AU\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.03136400033745923, \\\"country_code_alpha3_A\\\": \\\"AUS\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"IND->AND\\\": {\\\"country_code_alpha2_A\\\": \\\"IN\\\", \\\"country_code_alpha2_B\\\": \\\"AD\\\", \\\"Overall_Similarity\\\": 0.027812307683991677, \\\"country_code_alpha3_A\\\": \\\"IND\\\", \\\"country_code_alpha3_B\\\": \\\"AND\\\"}, \\\"VEN->ISR\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"IL\\\", \\\"Overall_Similarity\\\": 0.02721560013512303, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"ISR\\\"}, \\\"KEN->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"KE\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.027114382828706596, \\\"country_code_alpha3_A\\\": \\\"KEN\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->PRT\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"PT\\\", \\\"Overall_Similarity\\\": 0.02639674827091021, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"PRT\\\"}, \\\"VEN->BRA\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"BR\\\", \\\"Overall_Similarity\\\": 0.023472661431629516, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"BRA\\\"}, \\\"CHL->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"CL\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.020153379841959973, \\\"country_code_alpha3_A\\\": \\\"CHL\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"ISL->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"IS\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.01943080009573339, \\\"country_code_alpha3_A\\\": \\\"ISL\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->SAU\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"SA\\\", \\\"Overall_Similarity\\\": 0.018912087555853496, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"SAU\\\"}, \\\"USA->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"US\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.018381133553945994, \\\"country_code_alpha3_A\\\": \\\"USA\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"ROU->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"RO\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.01663171042185696, \\\"country_code_alpha3_A\\\": \\\"ROU\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"SVK->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"SK\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.01566485373711679, \\\"country_code_alpha3_A\\\": \\\"SVK\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"HKG->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"HK\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.015080868339304443, \\\"country_code_alpha3_A\\\": \\\"HKG\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"BEL->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"BE\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.014228103114394819, \\\"country_code_alpha3_A\\\": \\\"BEL\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"PER->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"PE\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.013253114434167879, \\\"country_code_alpha3_A\\\": \\\"PER\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"HUN->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"HU\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.012880189958438981, \\\"country_code_alpha3_A\\\": \\\"HUN\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"NLD->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"NL\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.012534050389774731, \\\"country_code_alpha3_A\\\": \\\"NLD\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->CZE\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"CZ\\\", \\\"Overall_Similarity\\\": 0.011761006114624606, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"CZE\\\"}, \\\"ESP->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"ES\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.01116450906838784, \\\"country_code_alpha3_A\\\": \\\"ESP\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"CHN->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"CN\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.011118682643101452, \\\"country_code_alpha3_A\\\": \\\"CHN\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"MEX->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"MX\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.009381889574104907, \\\"country_code_alpha3_A\\\": \\\"MEX\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->POL\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"PL\\\", \\\"Overall_Similarity\\\": 0.008500888722120625, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"POL\\\"}, \\\"VEN->AUT\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"AT\\\", \\\"Overall_Similarity\\\": 0.008235262868164117, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"AUT\\\"}, \\\"FRA->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"FR\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.006665385526320455, \\\"country_code_alpha3_A\\\": \\\"FRA\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"MYS->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"MY\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.006241105523077328, \\\"country_code_alpha3_A\\\": \\\"MYS\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"CAN->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"CA\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.005001931962849038, \\\"country_code_alpha3_A\\\": \\\"CAN\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"BGR->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"BG\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.004722887914109353, \\\"country_code_alpha3_A\\\": \\\"BGR\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->SYC\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"SC\\\", \\\"Overall_Similarity\\\": 0.004110031684534721, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"SYC\\\"}, \\\"LTU->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"LT\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.0039842000161097735, \\\"country_code_alpha3_A\\\": \\\"LTU\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->DNK\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"DK\\\", \\\"Overall_Similarity\\\": 0.003804681035885271, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"DNK\\\"}, \\\"NOR->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"NO\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.003115994511142639, \\\"country_code_alpha3_A\\\": \\\"NOR\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"UKR->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"UA\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.002876680372948859, \\\"country_code_alpha3_A\\\": \\\"UKR\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->TUR\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"TR\\\", \\\"Overall_Similarity\\\": 0.0028407770718295033, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"TUR\\\"}, \\\"LUX->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"LU\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.0020145836738780787, \\\"country_code_alpha3_A\\\": \\\"LUX\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"FIN->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"FI\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"FIN\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"SRB->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"RS\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"SRB\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"SGP->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"SG\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"SGP\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->CRI\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"CR\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"CRI\\\"}, \\\"VEN->DZA\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"DZ\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"DZA\\\"}, \\\"VEN->GRC\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"GR\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"GRC\\\"}, \\\"AND->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"AD\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"AND\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}, \\\"VEN->LIE\\\": {\\\"country_code_alpha2_A\\\": \\\"VE\\\", \\\"country_code_alpha2_B\\\": \\\"LI\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"VEN\\\", \\\"country_code_alpha3_B\\\": \\\"LIE\\\"}, \\\"ZAF->VEN\\\": {\\\"country_code_alpha2_A\\\": \\\"ZA\\\", \\\"country_code_alpha2_B\\\": \\\"VE\\\", \\\"Overall_Similarity\\\": 0.0, \\\"country_code_alpha3_A\\\": \\\"ZAF\\\", \\\"country_code_alpha3_B\\\": \\\"VEN\\\"}}\"");

/***/ }),

/***/ "./js/force_directed_graph.js":
/*!************************************!*\
  !*** ./js/force_directed_graph.js ***!
  \************************************/
/*! exports provided: generateForceDirected */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateForceDirected", function() { return generateForceDirected; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./js/index.js");
/* harmony import */ var _geomap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./geomap.js */ "./js/geomap.js");


// const data = JSON.parse(require('../data/data.json'));

/* Separate node and link data from global INPUT_DATA variable */
function getNodesAndLinks (inputData) {
  var countryCodes = {}
  // construct a dict with the country code of every country as its key
  for (var [countryPair, similarityScore] of Object.entries(inputData)) {
    var [countryA, countryB] = countryPair.split('->');
    countryCodes[countryA] = null;
    countryCodes[countryB] = null;
  }
  // marshall that into the d3-force shape
  // [{"id": "nodeName", ...}]
  var nodes = [];
  // simultaneously, associate alpha codes to node index
  var alphaToIndex = {}
  var i = 0
  for (var alpha3 of Object.keys(countryCodes)) {
    nodes.push({"id": alpha3});
    alphaToIndex[alpha3] = i;
    i+=1;
  }

  // now we produce links
  var links = []
  for (var [countryPair, metrics] of Object.entries(inputData)) {
    // TODO why do we need to *100? hidden constants?
    var similarityScore = metrics.Overall_Similarity*100;
    var [countryA, countryB] = countryPair.split('->');
    if (100 - similarityScore >= 0 && similarityScore > 0) {
      links.push({
        source: alphaToIndex[countryA],
        target: alphaToIndex[countryB],
        similarity: similarityScore,
        weight: 100 - similarityScore,
      });
    }
  }

  return [nodes, links];
}

/* Calculate the average similarity value in the dataset to determine which edges will
have high (low similarity, almost transparent) vs. low opacity (high similarity) */
function calculateMeanSimilarity (links) {
  var count = 0;
  var similaritySum = 0;
  for (var link of links) {
    similaritySum += link.similarity;
    count++;
  }
  return similaritySum / count;
}

/* Generate the SVG image holding the visualization */
function generateSvg (width, height, marginLeft, marginTop) {
  return d3.select("#basic_chloropleth")
      .append("svg")
      .attr({"width": width, "height": height})
      .append("g")
}

/* Calculate the height of the force visualization as the max edge length * 2 
(in case there are 2 such edge lengths that end up spanning the height after rebalancing) */
function calculateHeight (links) {
  var maxLength = -Infinity;
  var currLength;
  for (var link of links) {
    currLength = link.weight * 7;
    if (currLength > maxLength) {
      maxLength = currLength;
    }
  }
  return maxLength * 2;
}

/* Uses the global INPUT_DATA variable to generate a force graph with undirected edges
  between countries with corresponding edge lengths based on pairwise similarity */
function generateForceDirected() {
  /* Initial force graph settings */
  var radius = 6; // node size
  var padding = 100; // pads graph from edges of visualization
  var width = $('#basic_chloropleth').width();
  var height = $('#basic_chloropleth').height();
  // the constant by which the similarity score is multiplied
  // toggled based on whether or not a country node is selected
  var multiplier = 7;
  
  // extract data from dataset
  var [nodes, links] = getNodesAndLinks(_index_js__WEBPACK_IMPORTED_MODULE_0__["data"]);
  // vary visualization height based on maximum edge length
  height = calculateHeight(links, multiplier);
  document.getElementById("basic_chloropleth").style.height = height;

  // create an SVG element and append it to the DOM
  var svgElement = generateSvg(width, height, 50, 20);

  // calculate average similarity of all visible nodes to find edge weight threshhold
  var meanSimilarity = calculateMeanSimilarity(links);
  
  // create force layout
  var force = d3.layout.force()
    .size([width, height])
    .nodes(nodes)
    .links(links)
    .gravity(0) // no attraction between nodes
    .charge(-3000) // repulse nodes so text is more visible & to prevent overlapping
    .linkDistance(d => d.weight * multiplier); // set edge length based on multiplier

  // add links to SVG
  var link = svgElement.selectAll(".link")
    .data(links)
    .enter()
    .append("line")
    .attr("stroke", d => {
      return Object(_geomap_js__WEBPACK_IMPORTED_MODULE_1__["similarityToLegendColor"])(d.similarity / 100, 0, 1, _index_js__WEBPACK_IMPORTED_MODULE_0__["NUM_INCREMENTS"])
    })
    .attr("stroke-width", 1)
    .attr("class", "link");
  
  // Increase node size & decrease opacity on node mouseover
  function mouseover(d) {
    d3.select(this).transition()
      .duration(100)
      .attr("r", radius * 2)
      .attr("background-color", "#FFFBCC")
      .attr("opacity", 0.5);
  }

  // Reverse the effects of mouseover on the node
  function mouseout(d) {
    d3.select(this).transition()
      .duration(100)
      .attr("r", radius)
      .attr("color", "black")
      .attr("opacity", 1);
  }

  // add nodes to SVG
  var node = svgElement.selectAll(".node")
    .data(nodes)
    .enter()
    .append("g")
    .attr("class", "node")
    .call(force.drag);
  
  // add labels to each node
  var label = node.append("text")
    .attr("dx", 12)
    .attr("dy", "0.35em")
    .attr("font-size", 14)
    .text(d => d.id);
  
  // add circles to each node & attach mouseover, mouseout functions
  var circle = node.append("circle")
    .attr("r", d => radius)
    .on("mouseover", mouseover)
    .on("mouseout", mouseout);

  var flag = false; // reload all nodes if flag is set
  var clickedNode; // keep track of selected node in the scope of the function

  // reload force graph data when a node is selected
  function selectCircle(d) {
    force.stop();
    var thisNode = d.id;

    // only include links connected to selected node
    links = oldLinks.filter(function(l) {
      var source = l.source;
      var target = l.target;
      if (typeof source != "number") {
        source = l.source.index;
      }
      if (typeof target != "number") {
        target = l.target.index;
      }
      var sourceName = nodes[source].id;
      var targetName = nodes[target].id;

      return (sourceName === thisNode) || (targetName === thisNode);
    });
    link.remove();
    link = svgElement.selectAll('.link')
      .data(links)
      .enter().append('line')
      .attr("class", "link")
      .attr("stroke", d => {
        return Object(_geomap_js__WEBPACK_IMPORTED_MODULE_1__["similarityToLegendColor"])(d.similarity / 100, 0, 1, _index_js__WEBPACK_IMPORTED_MODULE_0__["NUM_INCREMENTS"])
      })
      .attr("stroke-width", 1);
    // toggle multiplier to a lower value to resize visualization proportionally
    multiplier = 5;
    height = calculateHeight(links, multiplier);
    document.getElementById("basic_chloropleth").style.height = height;
    
    flag = true;
    clickedNode = d;

    // redefine visualization settings & start force to rebalance graph with new links
    force.links(links);
    force.nodes(nodes);
    force.charge(-100)
    force.linkDistance(d => d.weight * multiplier)
    force.start()
  }

  // This function will be executed for every tick of force layout
  force.on("tick", function(){
    // set node positions (x, y)
    node
      .attr("cx", d => {
        if (clickedNode && d.id === clickedNode.id) {
          d.x = d.x + Math.round(width / 2 - d.x);
        } else {
          d.x = Math.max(radius + padding, Math.min(width - radius - padding, d.x));
        }
      })
      .attr("cy", d => {
        if (clickedNode && d.id === clickedNode.id) {
          d.y = d.y + Math.round(height / 2 - d.y);
        } else {
          d.y = Math.max(radius + padding, Math.min(height - radius - padding, d.y));
        }
      });
    
    // set link positions (x, y)
    if (flag) {
      link.attr("x1", d => nodes[d.source.index].x)
        .attr("y1", d => nodes[d.source.index].y)
        .attr("x2", d => nodes[d.target.index].x)
        .attr("y2", d => nodes[d.target.index].y)
        // .attr("opacity", function(d) { 
        //   if (d.similarity > meanSimilarity) {
        //     return 1;
        //   }
        //   return 0.1;
        // })
        .attr("stroke", d => {
          return Object(_geomap_js__WEBPACK_IMPORTED_MODULE_1__["similarityToLegendColor"])(d.similarity / 100, 0, 1, _index_js__WEBPACK_IMPORTED_MODULE_0__["NUM_INCREMENTS"])
        });
    } else {
      link.attr("x1", d => d.source.x);
      link.attr("y1", d => d.source.y);
      link.attr("x2", d => d.target.x);
      link.attr("y2", d => d.target.y);
    }

    // shift node a little for rebalancing
    node.attr("transform", function(d) {
      return "translate(" + d.x + "," + d.y + ")";
    });
  });

  // track removed & original set of links
  var removedLinks;
  var oldLinks = jQuery.extend(true, [], links);

  // when reset button is pressed, restore all of the links in the original dataset
  d3.select("#resetButton").on("click", function() {
    links = oldLinks
    link.remove();
    node.remove()
    link = svgElement.selectAll('.link')
    .data(links)
    .enter().append('line')
        .attr("class", "link")
        .attr("stroke", d => {
          return Object(_geomap_js__WEBPACK_IMPORTED_MODULE_1__["similarityToLegendColor"])(d.similarity / 100, 0, 1, _index_js__WEBPACK_IMPORTED_MODULE_0__["NUM_INCREMENTS"])
        })
        .attr("stroke-width", 1)
    node = svgElement.selectAll(".node")
      .data(nodes)
      .enter()
      .append("g")
      .attr("class", "node")
      .call(force.drag);
    label = node.append("text")
      .attr("dx", 12)
      .attr("dy", "0.35em")
      .attr("font-size", 14)
      .text(d => d.id);
    circle = node.append("circle")
      .attr("r", d => radius)
      .on("mouseover", mouseover)
      .on("mouseout", mouseout);
    circle.on("click", selectCircle);
    height = calculateHeight(links) * 1.5;
    document.getElementById("basic_chloropleth").style.height = height;
    flag = false
    force.links(links);
    force.nodes(nodes);
    force.charge(-3000)
    force.linkDistance(d => d.weight * 7)
    force.start()
  })

  // call the selectCircle function whenever a circle is clicked
  circle.on("click", selectCircle);

  // start the force layout calculation
  force.start();
}


/***/ }),

/***/ "./js/geomap.js":
/*!**********************!*\
  !*** ./js/geomap.js ***!
  \**********************/
/*! exports provided: similarityToLegendColor, populateMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "similarityToLegendColor", function() { return similarityToLegendColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "populateMap", function() { return populateMap; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./js/index.js");


var legendCreated = false; // prevents legend from reloading every time a country is selected

const d3 = __webpack_require__(/*! d3 */ "./node_modules/d3/d3.js");
const topojson = __webpack_require__(/*! topojson */ "./node_modules/topojson/index.js");
const d3Color = __webpack_require__(/*! d3-scale-chromatic */ "./node_modules/d3-scale-chromatic/src/index.js");
const Datamap = __webpack_require__(/*! ../libraries/datamaps.js */ "./libraries/datamaps.js")

/* From an object where values are floats, returns a list

   [[key, value], ...]

   Sorted by value. */
function sortedObject (obj) {
  var sortable = [];
  for (var item in obj) {
    sortable.push([item, obj[item]]);
  }
  sortable.sort(function(a, b) {
    return b[1] - a[1];
  });
  return sortable;
}

function similarityToLegendColor(similarity, minSimilarity, maxSimilarity, numIncrements) {
  var incrementNumber = Math.floor((similarity - minSimilarity) / (maxSimilarity - minSimilarity) * numIncrements);
  return d3Color.schemeBlues[_index_js__WEBPACK_IMPORTED_MODULE_0__["NUM_INCREMENTS"]][incrementNumber];
}

/* Given a country, finds similiarities to it.

  Returns an object of the from

    {UKR: 0.1, ...}

  This method handles logic around the fact that our data.json may not be
  symmetrical; in other words, the data file may contain USA->CAN but not
  CAN->USA. */
function similaritiesWith (country, inputData) {
	var sims = {};
  for (var [countryPair, metrics] of Object.entries(inputData)) {
    var [countryA, countryB] = countryPair.split('->');
    // if this pair contains our country as country A,
    if (countryA == country) {
      // update the fill key for countryB
      sims[countryB] = metrics.Overall_Similarity;
    }
    // if this pair contains our country as country B
    else if (countryB == country) {
      sims[countryA] = metrics.Overall_Similarity;
    }
  }
	return sims;
}

/* Given input data, creates a data object that will be passed into the chloropleth map
  and used for special operations on highlighted / selected countries (e.g. hover text) */
function generateDataObj(inputData) {
  var dataObj = {};
  var countryA, countryB;
  var currSimilarity;
  for (var countryPair of Object.keys(inputData)) {
    [countryA, countryB] = countryPair.split('->');
    if (!dataObj[countryA]) {
      dataObj[countryA] = {};
    }
    if (!dataObj[countryB]) {
      dataObj[countryB] = {};
    }
    
    let pairDataObj = {
      'similarity': inputData[countryPair].Overall_Similarity,
    }
    dataObj[countryA][countryB] = pairDataObj;
    dataObj[countryB][countryA] = pairDataObj;
  }
  return dataObj;
}

/* Given a country and the similarities object containing pair similarity data (and any 
  other data attributes) returns the fill keys for the chloropleth map.

  Returns an object of the form

    { UKR: "#f0f00", ...}

  Country passed in will be given the SELECTED color. */
function getFillKeys (selectedCountry, similarities, minSimilarity, maxSimilarity) {
  var fillKeys = {};
  for (var [countryName, countryData] of Object.entries(similarities)) {
    // color each country by similarity score
    fillKeys[countryName] = similarityToLegendColor(countryData.similarity, minSimilarity, maxSimilarity, _index_js__WEBPACK_IMPORTED_MODULE_0__["NUM_INCREMENTS"]);
  }
  // color selected country
  fillKeys[selectedCountry] = _index_js__WEBPACK_IMPORTED_MODULE_0__["SELECTED"];
  return fillKeys;
}

/* Given a country and the similarities object containing pair similarity data (and any
  other data attributes) generates a table displaying each row in the form

  [alpha3 country code] | [similarity score] */
function createTableHTML (selectedCountry, similarities) {
  var html = `<table class="dataTable">
    <tr>
      <th>Country</th>
      <th>Similarity to ${selectedCountry}</th>
    </tr>`
    for (var [countryName, similarityScore] of sortedObject(similarities)) {
      html+=`<tr>
                <td>${countryName}</td>
                <td>${similarityScore.similarity.toFixed(_index_js__WEBPACK_IMPORTED_MODULE_0__["DIGITS_ROUNDED"])}</td>
              </tr>`
    }
    html+='</table>'
    return html
}

/* Given input data in the following format, finds the min & max similarities of any country
  in the dataset.

  {
    AND->AUT: {
      Overall_Similarity: 0.646,
      country_code_alpha2_A: "AD",
      country_code_alpha2_B: "AT",
      country_code_alpha3_A: "AND",
      country_code_alpha3_B: "AUT"
  }

  Returns an array of the form
    [minimum similarity, maximum similarity] */
function findMinMaxSimilarity (inputData) {
  var maxSimilarity = -Infinity
  var minSimilarity = Infinity
  for (var [countryPair, metrics] of Object.entries(inputData)) {
    var similarityScore = metrics.Overall_Similarity;
    if (similarityScore < minSimilarity) {
      minSimilarity = similarityScore;
    }
    if (similarityScore > maxSimilarity) {
      maxSimilarity = similarityScore;
    }
  }
  return [minSimilarity, maxSimilarity]
}

/* Given the min & max similarity of any country pair in the dataset, generates a legend with
   numIncrements number of labels
  */
function createLegendHTML (minSimilarity, maxSimilarity, numIncrements) {
  if (legendCreated) {
    document.getElementById("worldMapLegend").style.display = "inline-block"; // make the completed legend visible
    return;
  }

  // find colors at the top (max) and bottom (min) of the legend gradient
  var colorScheme = ["#eff3ff","#bdd7e7","#6baed6","#3182bd","#08519c"];
  var colorScheme = d3Color.schemeBlues[numIncrements];
  
  // generates numIncrements number of legend labels at equidistant positions along the gradient
  var legendElemTag;
  var legendElemDiv;
  var legendElemText;
  var incrementedSimilarity;
  var incrementSize = (maxSimilarity - minSimilarity) / numIncrements;
  for (var i = 0; i < numIncrements; i++) {
    incrementedSimilarity = (minSimilarity + incrementSize * i).toFixed(_index_js__WEBPACK_IMPORTED_MODULE_0__["DIGITS_ROUNDED"]);
    legendElemTag = document.createElement("div");
    legendElemText = document.createTextNode(incrementedSimilarity.toString());
    legendElemTag.appendChild(legendElemText);
    legendElemTag.style.flex = 1;
    document.getElementById("legendLabels").appendChild(legendElemTag);

    legendElemDiv = document.createElement("div");
    legendElemDiv.style.flex = 1;
    legendElemDiv.style["background-color"] = colorScheme[i];
    document.getElementById("legendGradient").appendChild(legendElemDiv);
  }
  // add the final legend label (min) aligned to the bottom of the gradient
  legendElemTag = document.createElement("div");
  legendElemText = document.createTextNode(maxSimilarity.toFixed(_index_js__WEBPACK_IMPORTED_MODULE_0__["DIGITS_ROUNDED"]).toString());
  legendElemTag.appendChild(legendElemText);
  document.getElementById("legendLabels").appendChild(legendElemTag);

  var legendTitle = document.getElementById("legendTitle");
  legendCreated = true;
}

function moveTooltip (pt) {
  let map = document.getElementById("basic_chloropleth").getElementsByTagName("svg")[0];
  let tooltip = document.getElementById("tooltip");
  pt.x = event.clientX;
  pt.y = event.clientY;
  var cursorpt =  pt.matrixTransform(document.getElementsByClassName("datamap")[0].getScreenCTM().inverse());

  tooltip.style.left = map.getBoundingClientRect().left + cursorpt.x + window.scrollX + 10;
  tooltip.style.top = map.getBoundingClientRect().top + cursorpt.y + window.scrollY + 10;
}

function mouseoverCountry (dataObj, geography, selectedCountry, selectedCountryId, pt, hoveredElement) {
  var hoveredCountry = geography.id;
  var hoveredCountryData = dataObj[hoveredCountry];
  var selectedCountryData = dataObj[selectedCountryId];
  var hoverPriorColor;
  if (selectedCountryId != hoveredCountry && hoveredCountryData && Object.keys(hoveredCountryData).length > 0) {
    hoverPriorColor = hoveredElement.style['fill'];
    hoveredElement.style['fill'] = _index_js__WEBPACK_IMPORTED_MODULE_0__["HIGHLIGHTED"];
    hoveredElement.style['stroke-width'] = _index_js__WEBPACK_IMPORTED_MODULE_0__["HIGHLIGHT_BORDER_WIDTH"];
    let tooltip = document.getElementById("tooltip");

    tooltip.innerHTML = "<div class='hoverinfo'><center><b>" + geography.properties.name + "</b></center>";
    if (selectedCountryId) {
      tooltip.innerHTML = "<div class='hoverinfo'><center><b>" + geography.properties.name + "</b></center>Similarity with " + selectedCountry + ": <b>" + selectedCountryData[hoveredCountry].similarity.toFixed(_index_js__WEBPACK_IMPORTED_MODULE_0__["DIGITS_ROUNDED"]) + "</b></div>";
    }
    
    tooltip.style.display = "block";
    
    moveTooltip(pt);
  }
  return hoverPriorColor;
}

function mouseoutCountry (dataObj, geography, selectedCountryId, hoveredElement, hoverPriorColor) {
  let tooltip = document.getElementById("tooltip");
  var hoveredCountry = geography.id;
  var hoveredCountryData = dataObj[hoveredCountry];
  if (hoveredCountryData && Object.keys(hoveredCountryData).length > 0) {
    if (selectedCountryId == hoveredCountry) {
      hoveredElement.style['fill'] = _index_js__WEBPACK_IMPORTED_MODULE_0__["SELECTED"];
    } else {
      hoveredElement.style['fill'] = hoverPriorColor;
    }
    hoveredElement.style['stroke-width'] = 1;
    tooltip.style.display = "none";
  }
}

function selectCountry (dataObj, selectedCountry, selectedCountryId, minSimilarity, maxSimilarity) {
  // check that the country has corresponding data
  var selectedCountryData = dataObj[`${selectedCountryId}`];
  if (!selectedCountryData || Object.keys(selectedCountryData).length <= 0) {
    return;
  }
  
  // recalculate fillKeys based on newly selected country
  var fillKeys = getFillKeys(selectedCountryId, selectedCountryData, minSimilarity, maxSimilarity);
  
  // display selected country name
  document.getElementById("selectedCountry").innerHTML =
    `Selected Country: <div id="countryName">${selectedCountry}</div>`;
  document.getElementById("countryName").style.color = _index_js__WEBPACK_IMPORTED_MODULE_0__["SELECTED"];

  // display selected country similarity data with other countries
  document.getElementById("similarityTable").innerHTML =
    createTableHTML(selectedCountry, selectedCountryData);

  let tooltip = document.getElementById("tooltip");
  tooltip.style.display = "none";

  return fillKeys;
}

function countryNameFromId (countryId, allCountries) {
  let idMatch = allCountries.filter(countryData => countryData.id == countryId);
  let idMatchName = idMatch[0].properties.name;
  return idMatchName;
}

/* Given input data in the following format, generates a chloropleth map.

  {
    AND->AUT: {
      Overall_Similarity: 0.646,
      country_code_alpha2_A: "AD",
      country_code_alpha2_B: "AT",
      country_code_alpha3_A: "AND",
      country_code_alpha3_B: "AUT"
    }
  } */
function createMap (inputData, selectedCountryId) {
  var dataObj = generateDataObj(inputData); // creates data object for special operations on highlighted / selected map countries
  
  // finds min & max similarity values between any country pair in the dataset
  var similarityBounds = findMinMaxSimilarity(inputData);
  var minSimilarity = similarityBounds[0];
  var maxSimilarity = similarityBounds[1];

  // tracks current selected country name e.g. "Canada", and corresponding data from dataObj
  var allCountries = Datamap.prototype.worldTopo.objects.world.geometries;
  var selectedCountry = countryNameFromId(selectedCountryId, allCountries);
  var selectedCountryData;

  var hoverPriorColor;

  createLegendHTML(minSimilarity, maxSimilarity, _index_js__WEBPACK_IMPORTED_MODULE_0__["NUM_INCREMENTS"]);

  new Datamap({
		element: document.getElementById("basic_chloropleth"),
		projection: "mercator",
    data: dataObj,
    fills: {
      defaultFill: _index_js__WEBPACK_IMPORTED_MODULE_0__["DEFAULT"],
    },
		done: function(datamap) {
      document.getElementById("basic_chloropleth").getElementsByTagName("svg")[0].style["position"] = "relative";
      var tooltip = document.createElement("div");
      tooltip.id = "tooltip";
      tooltip.style.position = "absolute";
      tooltip.style.display = "none";
      tooltip.style["min-height"] = "20"
      tooltip.style["width"] = "100"
      document.getElementById("basic_chloropleth").appendChild(tooltip);

      var pt = document.getElementsByClassName("datamap")[0].createSVGPoint();

      var selectedFillKeys = selectCountry(dataObj, selectedCountry, selectedCountryId, minSimilarity, maxSimilarity);
      datamap.updateChoropleth(selectedFillKeys);
			
      datamap.svg.selectAll('.datamaps-subunit').on('click', function(geography) {
        selectedCountry = geography.properties.name;
        selectedCountryId = geography.id;
				var selectedFillKeys = selectCountry(dataObj, selectedCountry, selectedCountryId, minSimilarity, maxSimilarity);
        datamap.updateChoropleth(selectedFillKeys);
			})

      datamap.svg.selectAll('.datamaps-subunit').on('mouseover', function(geography) {
        hoverPriorColor = mouseoverCountry(dataObj, geography, selectedCountry, selectedCountryId, pt, this);
      })

      datamap.svg.on('mousemove', function() {
        moveTooltip(pt);
      });

      datamap.svg.selectAll('.datamaps-subunit').on('mouseout', function(geography) {
        mouseoutCountry(dataObj, geography, selectedCountryId, this, hoverPriorColor);
      })
		},
		geographyConfig: {
      // display country name & corresponding similarity with selected country on mouseover
      popupTemplate: function(geography, data) {
        if (geography != null && selectedCountryData != null) {
          return '<div class="hoverinfo"><b>' + geography.properties.name + '</b><br>' + selectedCountryData[geography.id].similarity.toFixed(_index_js__WEBPACK_IMPORTED_MODULE_0__["DIGITS_ROUNDED"]) + '</div>'
        }
      }
		},
	});
}

/* Makes an asynchronous request to the JSON data file and calls `createMap` to generate the
   chloropleth after parsing the resulting string data */
function populateMap(selectedCountryId) {
  createMap(_index_js__WEBPACK_IMPORTED_MODULE_0__["data"], selectedCountryId);
}


/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/*! exports provided: data, MAP_HEIGHT, DEFAULT, SELECTED, HIGHLIGHTED, MAX_SIMILARITY, MIN_SIMILARITY, HIGHLIGHT_BORDER_WIDTH, NUM_INCREMENTS, DIGITS_ROUNDED, inputLoad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "data", function() { return data; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAP_HEIGHT", function() { return MAP_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT", function() { return DEFAULT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECTED", function() { return SELECTED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HIGHLIGHTED", function() { return HIGHLIGHTED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAX_SIMILARITY", function() { return MAX_SIMILARITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MIN_SIMILARITY", function() { return MIN_SIMILARITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HIGHLIGHT_BORDER_WIDTH", function() { return HIGHLIGHT_BORDER_WIDTH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUM_INCREMENTS", function() { return NUM_INCREMENTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DIGITS_ROUNDED", function() { return DIGITS_ROUNDED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inputLoad", function() { return inputLoad; });
/* harmony import */ var _geomap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./geomap.js */ "./js/geomap.js");
/* harmony import */ var _force_directed_graph_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./force_directed_graph.js */ "./js/force_directed_graph.js");



var currMode = "world-map"; // world-map or force

// global variables
const data = JSON.parse(__webpack_require__(/*! ../data/data.json */ "./data/data.json"));

var MAP_HEIGHT = 750; // height of world map in pixels

var DEFAULT = "#d3d3d3"; // default country color (no data)
var SELECTED = "#228B22"; // selected country color
var HIGHLIGHTED = "orange"; // highlighted (moused-over) country color

// maximum and minimum expected similarity scores
var MAX_SIMILARITY = 1
var MIN_SIMILARITY = 0

// highlight border width for countries with data
var HIGHLIGHT_BORDER_WIDTH = 2

var NUM_INCREMENTS = 7;
var DIGITS_ROUNDED = 2;

// This method is called in `body onload` in index.html
function inputLoad(
  mapHeight,
  defaultFill,
  selectedFill,
  highlightedFill,
  maxSimilarity,
  minSimilarity,
  highlightBorderWidth,
  numIncrements,
  digitsRounded) {
  // set global variables
  MAP_HEIGHT = mapHeight;
  DEFAULT = defaultFill;
  SELECTED = selectedFill;
  HIGHLIGHTED = highlightedFill;
  MAX_SIMILARITY = maxSimilarity;
  MIN_SIMILARITY = minSimilarity;
  HIGHLIGHT_BORDER_WIDTH = highlightBorderWidth;
  NUM_INCREMENTS = numIncrements;
  DIGITS_ROUNDED = digitsRounded;

  Object(_geomap_js__WEBPACK_IMPORTED_MODULE_0__["populateMap"])("USA");
  displayToggleMode();
  var input = document.getElementById('world-map');
  input.checked = "checked";
}

// Toggle between world map and force modes
// Called in index.html radio button.
function toggleMode(selectedCountryId) {
  if (currMode == "force") {
    enableWorldMap(selectedCountryId);
    currMode="world-map";
  } else if (currMode == "world-map") {
    enableForce();
    currMode="force";
  }
}

function displayToggleMode() {
  document.getElementById("vis_mode").innerHTML = `
    <div class="content_elem">
      <!-- Toggle map type -->
      <div class="mode_input">
        <input type="radio" id="world-map" name="mode", value="world-map">
        <label for="world-map"></label>World Map<br>
      </div>
      <div class="mode_input">
        <input type="radio" id="force" name="mode", value="force">
        <label for="force"></label>Force</br>
      </div>
    </div>
  `;
  document.getElementById("world-map").checked = "checked";
  document.getElementById("world-map").addEventListener("change", function() {
    toggleMode("USA");
  });
  document.getElementById("force").addEventListener("change", function() {
    toggleMode();
  });
}

// Initialize world map
// See geomap.js
function enableWorldMap(selectedCountryId) {
  // set up map
  document.getElementById("basic_chloropleth").innerHTML = "";
  // map takes up 80% of visible screen to leave space for legend
  document.getElementById("basic_chloropleth").style.width = "80%";
  document.getElementById("basic_chloropleth").style.height = "750px";
  // make force graph specific attributes invisible
  document.getElementById("resetButton").style.display = "none";
  // make legend invisible until a country is selected
  document.getElementById("worldMapLegend").style.display = "none";
  Object(_geomap_js__WEBPACK_IMPORTED_MODULE_0__["populateMap"])(selectedCountryId);
}

// Initialize force directed graph
// See force-directed-graph.js
function enableForce() {
  // set up force graph
  document.getElementById("basic_chloropleth").innerHTML = "";
  // force graph should take up the whole width of the visible screen
  document.getElementById("basic_chloropleth").style.width = "100%";
  // make world map specific attributes invisible
  document.getElementById("selectedCountry").innerHTML = "";
  document.getElementById("similarityTable").innerHTML = "";
  document.getElementById("worldMapLegend").style.display = "none";
  // make force graph specific attributes visible
  document.getElementById("resetButton").style.display = "flex";
  Object(_force_directed_graph_js__WEBPACK_IMPORTED_MODULE_1__["generateForceDirected"])();
}


/***/ }),

/***/ "./libraries/datamaps.js":
/*!*******************************!*\
  !*** ./libraries/datamaps.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function(){function a(a,b,c){"undefined"==typeof c&&(c=b,optionsValues=void 0);var d="undefined"!=typeof a?a:b;if("undefined"==typeof d)return null;if("function"==typeof d){var e=[c];return c.geography&&(e=[c.geography,c.data]),d.apply(null,e)}return d}function b(a,b,c){return this.svg=n.select(a).append("svg").attr("width",c||a.offsetWidth).attr("data-width",c||a.offsetWidth).attr("class","datamap").attr("height",b||a.offsetHeight).style("overflow","hidden"),this.options.responsive&&(n.select(this.options.element).style({position:"relative","padding-bottom":100*this.options.aspectRatio+"%"}),n.select(this.options.element).select("svg").style({position:"absolute",width:"100%",height:"100%"}),n.select(this.options.element).select("svg").select("g").selectAll("path").style("vector-effect","non-scaling-stroke")),this.svg}function c(a,b){var c,d,e=b.width||a.offsetWidth,f=b.height||a.offsetHeight,g=this.svg;return b&&"undefined"==typeof b.scope&&(b.scope="world"),"usa"===b.scope?c=n.geo.albersUsa().scale(e).translate([e/2,f/2]):"world"===b.scope&&(c=n.geo[b.projection]().scale((e+1)/2/Math.PI).translate([e/2,f/("mercator"===b.projection?1.45:1.8)])),"orthographic"===b.projection&&(g.append("defs").append("path").datum({type:"Sphere"}).attr("id","sphere").attr("d",d),g.append("use").attr("class","stroke").attr("xlink:href","#sphere"),g.append("use").attr("class","fill").attr("xlink:href","#sphere"),c.scale(250).clipAngle(90).rotate(b.projectionConfig.rotation)),d=n.geo.path().projection(c),{path:d,projection:c}}function d(){n.select(".datamaps-style-block").empty()&&n.select("head").append("style").attr("class","datamaps-style-block").html('.datamap path.datamaps-graticule { fill: none; stroke: #777; stroke-width: 0.5px; stroke-opacity: .5; pointer-events: none; } .datamap .labels {pointer-events: none;} .datamap path {stroke: #FFFFFF; stroke-width: 1px;} .datamaps-legend dt, .datamaps-legend dd { float: left; margin: 0 3px 0 0;} .datamaps-legend dd {width: 20px; margin-right: 6px; border-radius: 3px;} .datamaps-legend {padding-bottom: 20px; z-index: 1001; position: absolute; left: 4px; font-size: 12px; font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;} .datamaps-hoverover {display: none; font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; } .hoverinfo {padding: 4px; border-radius: 1px; background-color: #FFF; box-shadow: 1px 1px 5px #CCC; font-size: 12px; border: 1px solid #CCC; } .hoverinfo hr {border:1px dotted #CCC; }')}function e(b){var c=this.options.fills,d=this.options.data||{},e=this.options.geographyConfig,f=this.svg.select("g.datamaps-subunits");f.empty()&&(f=this.addLayer("datamaps-subunits",null,!0));var g=o.feature(b,b.objects[this.options.scope]).features;e.hideAntarctica&&(g=g.filter(function(a){return"ATA"!==a.id})),e.hideHawaiiAndAlaska&&(g=g.filter(function(a){return"HI"!==a.id&&"AK"!==a.id}));var h=f.selectAll("path.datamaps-subunit").data(g);h.enter().append("path").attr("d",this.path).attr("class",function(a){return"datamaps-subunit "+a.id}).attr("data-info",function(a){return JSON.stringify(d[a.id])}).style("fill",function(b){var e,f=d[b.id];return f&&f.fillKey&&(e=c[a(f.fillKey,{data:d[b.id],geography:b})]),"undefined"==typeof e&&(e=a(f&&f.fillColor,c.defaultFill,{data:d[b.id],geography:b})),e}).style("stroke-width",e.borderWidth).style("stroke-opacity",e.borderOpacity).style("stroke",e.borderColor)}function f(){function b(){this.parentNode.appendChild(this)}var c=this.svg,d=this,e=this.options.geographyConfig;(e.highlightOnHover||e.popupOnHover)&&c.selectAll(".datamaps-subunit").on("mouseover",function(f){var g=n.select(this),h=d.options.data[f.id]||{};if(e.highlightOnHover){var i={fill:g.style("fill"),stroke:g.style("stroke"),"stroke-width":g.style("stroke-width"),"fill-opacity":g.style("fill-opacity")};g.style("fill",a(h.highlightFillColor,e.highlightFillColor,h)).style("stroke",a(h.highlightBorderColor,e.highlightBorderColor,h)).style("stroke-width",a(h.highlightBorderWidth,e.highlightBorderWidth,h)).style("stroke-opacity",a(h.highlightBorderOpacity,e.highlightBorderOpacity,h)).style("fill-opacity",a(h.highlightFillOpacity,e.highlightFillOpacity,h)).attr("data-previousAttributes",JSON.stringify(i)),/((MSIE)|(Trident))/.test(navigator.userAgent)||b.call(this)}e.popupOnHover&&d.updatePopup(g,f,e,c)}).on("mouseout",function(){var a=n.select(this);if(e.highlightOnHover){var b=JSON.parse(a.attr("data-previousAttributes"));for(var c in b)a.style(c,b[c])}a.on("mousemove",null),n.selectAll(".datamaps-hoverover").style("display","none")})}function g(a,b,c){if(b=b||{},this.options.fills){var d="<dl>",e="";b.legendTitle&&(d="<h2>"+b.legendTitle+"</h2>"+d);for(var f in this.options.fills){if("defaultFill"===f){if(!b.defaultFillName)continue;e=b.defaultFillName}else e=b.labels&&b.labels[f]?b.labels[f]:f+": ";d+="<dt>"+e+"</dt>",d+='<dd style="background-color:'+this.options.fills[f]+'">&nbsp;</dd>'}d+="</dl>";n.select(this.options.element).append("div").attr("class","datamaps-legend").html(d)}}function h(a,b){var c=n.geo.graticule();this.svg.insert("path",".datamaps-subunits").datum(c).attr("class","datamaps-graticule").attr("d",this.path)}function i(b,c,d){var e=this;this.svg;if(!c||c&&!c.slice)throw"Datamaps Error - arcs must be an array";for(var f=0;f<c.length;f++)c[f]=l(c[f],c[f].options),delete c[f].options;"undefined"==typeof d&&(d=p.arcConfig);var g=b.selectAll("path.datamaps-arc").data(c,JSON.stringify),h=n.geo.path().projection(e.projection);g.enter().append("svg:path").attr("class","datamaps-arc").style("stroke-linecap","round").style("stroke",function(b){return a(b.strokeColor,d.strokeColor,b)}).style("fill","none").style("stroke-width",function(b){return a(b.strokeWidth,d.strokeWidth,b)}).attr("d",function(b){var c=e.latLngToXY(a(b.origin.latitude,b),a(b.origin.longitude,b)),f=e.latLngToXY(a(b.destination.latitude,b),a(b.destination.longitude,b)),g=[(c[0]+f[0])/2,(c[1]+f[1])/2];if(d.greatArc){var i=n.geo.greatArc().source(function(b){return[a(b.origin.longitude,b),a(b.origin.latitude,b)]}).target(function(b){return[a(b.destination.longitude,b),a(b.destination.latitude,b)]});return h(i(b))}var j=a(b.arcSharpness,d.arcSharpness,b);return"M"+c[0]+","+c[1]+"S"+(g[0]+50*j)+","+(g[1]-75*j)+","+f[0]+","+f[1]}).attr("data-info",function(a){return JSON.stringify(a)}).transition().delay(100).style("fill",function(b){var c=this.getTotalLength();return this.style.transition=this.style.WebkitTransition="none",this.style.strokeDasharray=c+" "+c,this.style.strokeDashoffset=c,this.getBoundingClientRect(),this.style.transition=this.style.WebkitTransition="stroke-dashoffset "+a(b.animationSpeed,d.animationSpeed,b)+"ms ease-out",this.style.strokeDashoffset="0","none"}),g.exit().transition().style("opacity",0).remove()}function j(a,b){var c=this;b=b||{};var d=this.projection([-67.707617,42.722131]);this.svg.selectAll(".datamaps-subunit").attr("data-foo",function(e){var f=c.path.centroid(e),g=7.5,h=5;["FL","KY","MI"].indexOf(e.id)>-1&&(g=-2.5),"NY"===e.id&&(g=-1),"MI"===e.id&&(h=18),"LA"===e.id&&(g=13);var i,j;i=f[0]-g,j=f[1]+h;var k=["VT","NH","MA","RI","CT","NJ","DE","MD","DC"].indexOf(e.id);if(k>-1){var l=d[1];i=d[0],j=l+k*(2+(b.fontSize||12)),a.append("line").attr("x1",i-3).attr("y1",j-5).attr("x2",f[0]).attr("y2",f[1]).style("stroke",b.labelColor||"#000").style("stroke-width",b.lineWidth||1)}return a.append("text").attr("x",i).attr("y",j).style("font-size",(b.fontSize||10)+"px").style("font-family",b.fontFamily||"Verdana").style("fill",b.labelColor||"#000").text(function(){return b.customLabelText&&b.customLabelText[e.id]?b.customLabelText[e.id]:e.id}),"bar"})}function k(b,c,d){function e(a){return"undefined"!=typeof a&&"undefined"!=typeof a.latitude&&"undefined"!=typeof a.longitude}var f=this,g=this.options.fills,h=this.options.filters,i=this.svg;if(!c||c&&!c.slice)throw"Datamaps Error - bubbles must be an array";var j=b.selectAll("circle.datamaps-bubble").data(c,d.key);j.enter().append("svg:circle").attr("class","datamaps-bubble").attr("cx",function(a){var b;return e(a)?b=f.latLngToXY(a.latitude,a.longitude):a.centered&&(b=f.path.centroid(i.select("path."+a.centered).data()[0])),b?b[0]:void 0}).attr("cy",function(a){var b;return e(a)?b=f.latLngToXY(a.latitude,a.longitude):a.centered&&(b=f.path.centroid(i.select("path."+a.centered).data()[0])),b?b[1]:void 0}).attr("r",function(b){return d.animate?0:a(b.radius,d.radius,b)}).attr("data-info",function(a){return JSON.stringify(a)}).attr("filter",function(b){var c=h[a(b.filterKey,d.filterKey,b)];return c?c:void 0}).style("stroke",function(b){return a(b.borderColor,d.borderColor,b)}).style("stroke-width",function(b){return a(b.borderWidth,d.borderWidth,b)}).style("stroke-opacity",function(b){return a(b.borderOpacity,d.borderOpacity,b)}).style("fill-opacity",function(b){return a(b.fillOpacity,d.fillOpacity,b)}).style("fill",function(b){var c=g[a(b.fillKey,d.fillKey,b)];return c||g.defaultFill}).on("mouseover",function(b){var c=n.select(this);if(d.highlightOnHover){var e={fill:c.style("fill"),stroke:c.style("stroke"),"stroke-width":c.style("stroke-width"),"fill-opacity":c.style("fill-opacity")};c.style("fill",a(b.highlightFillColor,d.highlightFillColor,b)).style("stroke",a(b.highlightBorderColor,d.highlightBorderColor,b)).style("stroke-width",a(b.highlightBorderWidth,d.highlightBorderWidth,b)).style("stroke-opacity",a(b.highlightBorderOpacity,d.highlightBorderOpacity,b)).style("fill-opacity",a(b.highlightFillOpacity,d.highlightFillOpacity,b)).attr("data-previousAttributes",JSON.stringify(e))}d.popupOnHover&&f.updatePopup(c,b,d,i)}).on("mouseout",function(a){var b=n.select(this);if(d.highlightOnHover){var c=JSON.parse(b.attr("data-previousAttributes"));for(var e in c)b.style(e,c[e])}n.selectAll(".datamaps-hoverover").style("display","none")}),j.transition().duration(400).attr("r",function(b){return a(b.radius,d.radius,b)}).transition().duration(0).attr("data-info",function(a){return JSON.stringify(a)}),j.exit().transition().delay(d.exitDelay).attr("r",0).remove()}function l(a){return Array.prototype.slice.call(arguments,1).forEach(function(b){if(b)for(var c in b)null==a[c]&&(a[c]=b[c])}),a}function m(a){if("undefined"==typeof n||"undefined"==typeof o)throw new Error("Include d3.js (v3.0.3 or greater) and topojson on this page before creating a new map");return this.options=l(a,p),this.options.geographyConfig=l(a.geographyConfig,p.geographyConfig),this.options.projectionConfig=l(a.projectionConfig,p.projectionConfig),this.options.bubblesConfig=l(a.bubblesConfig,p.bubblesConfig),this.options.arcConfig=l(a.arcConfig,p.arcConfig),n.select(this.options.element).select("svg").length>0&&b.call(this,this.options.element,this.options.height,this.options.width),this.addPlugin("bubbles",k),this.addPlugin("legend",g),this.addPlugin("arc",i),this.addPlugin("labels",j),this.addPlugin("graticule",h),this.options.disableDefaultStyles||d(),this.draw()}var n=window.d3,o=window.topojson,p={scope:"world",responsive:!1,aspectRatio:.5625,setProjection:c,projection:"equirectangular",dataType:"json",data:{},done:function(){},fills:{defaultFill:"#ABDDA4"},filters:{},geographyConfig:{dataUrl:null,hideAntarctica:!0,hideHawaiiAndAlaska:!1,borderWidth:1,borderOpacity:1,borderColor:"#FDFDFD",popupTemplate:function(a,b){return'<div class="hoverinfo"><strong>'+a.properties.name+"</strong></div>"},popupOnHover:!0,highlightOnHover:!0,highlightFillColor:"#FC8D59",highlightBorderColor:"rgba(250, 15, 160, 0.2)",highlightBorderWidth:2,highlightBorderOpacity:1},projectionConfig:{rotation:[97,0]},bubblesConfig:{borderWidth:2,borderOpacity:1,borderColor:"#FFFFFF",popupOnHover:!0,radius:null,popupTemplate:function(a,b){return'<div class="hoverinfo"><strong>'+b.name+"</strong></div>"},fillOpacity:.75,animate:!0,highlightOnHover:!0,highlightFillColor:"#FC8D59",highlightBorderColor:"rgba(250, 15, 160, 0.2)",highlightBorderWidth:2,highlightBorderOpacity:1,highlightFillOpacity:.85,exitDelay:100,key:JSON.stringify},arcConfig:{strokeColor:"#DD1C77",strokeWidth:1,arcSharpness:1,animationSpeed:600}};m.prototype.resize=function(){var a=this,b=a.options;if(b.responsive){var c=b.element.clientWidth,d=n.select(b.element).select("svg").attr("data-width");n.select(b.element).select("svg").selectAll("g").attr("transform","scale("+c/d+")")}},m.prototype.draw=function(){function a(a){b.options.dataUrl&&n[b.options.dataType](b.options.dataUrl,function(a){if("csv"===b.options.dataType&&a&&a.slice){for(var c={},d=0;d<a.length;d++)c[a[d].id]=a[d];a=c}Datamaps.prototype.updateChoropleth.call(b,a)}),e.call(b,a),f.call(b),(b.options.geographyConfig.popupOnHover||b.options.bubblesConfig.popupOnHover)&&(hoverover=n.select(b.options.element).append("div").attr("class","datamaps-hoverover").style("z-index",10001).style("position","absolute")),b.options.done(b)}var b=this,c=b.options,d=c.setProjection.apply(b,[c.element,c]);return this.path=d.path,this.projection=d.projection,c.geographyConfig.dataUrl?n.json(c.geographyConfig.dataUrl,function(c,d){if(c)throw new Error(c);b.customTopo=d,a(d)}):a(this[c.scope+"Topo"]||c.geographyConfig.dataJson),this},m.prototype.worldTopo={type:"Topology",objects:{world:{type:"GeometryCollection",geometries:[{type:"Polygon",properties:{name:"Afghanistan"},id:"AFG",arcs:[[0,1,2,3,4,5]]},{type:"MultiPolygon",properties:{name:"Angola"},id:"AGO",arcs:[[[6,7,8,9]],[[10,11,12]]]},{type:"Polygon",properties:{name:"Albania"},id:"ALB",arcs:[[13,14,15,16,17]]},{type:"Polygon",properties:{name:"United Arab Emirates"},id:"ARE",arcs:[[18,19,20,21,22]]},{type:"MultiPolygon",properties:{name:"Argentina"},id:"ARG",arcs:[[[23,24]],[[25,26,27,28,29,30]]]},{type:"Polygon",properties:{name:"Armenia"},id:"ARM",arcs:[[31,32,33,34,35]]},{type:"MultiPolygon",properties:{name:"Antarctica"},id:"ATA",arcs:[[[36]],[[37]],[[38]],[[39]],[[40]],[[41]],[[42]],[[43]]]},{type:"Polygon",properties:{name:"French Southern and Antarctic Lands"},id:"ATF",arcs:[[44]]},{type:"MultiPolygon",properties:{name:"Australia"},id:"AUS",arcs:[[[45]],[[46]]]},{type:"Polygon",properties:{name:"Austria"},id:"AUT",arcs:[[47,48,49,50,51,52,53]]},{type:"MultiPolygon",properties:{name:"Azerbaijan"},id:"AZE",arcs:[[[54,-35]],[[55,56,-33,57,58]]]},{type:"Polygon",properties:{name:"Burundi"},id:"BDI",arcs:[[59,60,61]]},{type:"Polygon",properties:{name:"Belgium"},id:"BEL",arcs:[[62,63,64,65,66]]},{type:"Polygon",properties:{name:"Benin"},id:"BEN",arcs:[[67,68,69,70,71]]},{type:"Polygon",properties:{name:"Burkina Faso"},id:"BFA",arcs:[[72,73,74,-70,75,76]]},{type:"Polygon",properties:{name:"Bangladesh"},id:"BGD",arcs:[[77,78,79]]},{type:"Polygon",properties:{name:"Bulgaria"},id:"BGR",arcs:[[80,81,82,83,84,85]]},{type:"MultiPolygon",properties:{name:"The Bahamas"},id:"BHS",arcs:[[[86]],[[87]],[[88]]]},{type:"Polygon",properties:{name:"Bosnia and Herzegovina"},id:"BIH",arcs:[[89,90,91]]},{type:"Polygon",properties:{name:"Belarus"},id:"BLR",arcs:[[92,93,94,95,96]]},{type:"Polygon",properties:{name:"Belize"},id:"BLZ",arcs:[[97,98,99]]},{type:"Polygon",properties:{name:"Bolivia"},id:"BOL",arcs:[[100,101,102,103,-31]]},{type:"Polygon",properties:{name:"Brazil"},id:"BRA",arcs:[[-27,104,-103,105,106,107,108,109,110,111,112]]},{type:"Polygon",properties:{name:"Brunei"},id:"BRN",arcs:[[113,114]]},{type:"Polygon",properties:{name:"Bhutan"},id:"BTN",arcs:[[115,116]]},{type:"Polygon",properties:{name:"Botswana"},id:"BWA",arcs:[[117,118,119,120]]},{type:"Polygon",properties:{name:"Central African Republic"},id:"CAF",arcs:[[121,122,123,124,125,126,127]]},{type:"MultiPolygon",properties:{name:"Canada"},id:"CAN",arcs:[[[128]],[[129]],[[130]],[[131]],[[132]],[[133]],[[134]],[[135]],[[136]],[[137]],[[138,139,140,141]],[[142]],[[143]],[[144]],[[145]],[[146]],[[147]],[[148]],[[149]],[[150]],[[151]],[[152]],[[153]],[[154]],[[155]],[[156]],[[157]],[[158]],[[159]],[[160]]]},{type:"Polygon",properties:{name:"Switzerland"},id:"CHE",arcs:[[-51,161,162,163]]},{type:"MultiPolygon",properties:{name:"Chile"},id:"CHL",arcs:[[[-24,164]],[[-30,165,166,-101]]]},{type:"MultiPolygon",properties:{name:"China"},id:"CHN",arcs:[[[167]],[[168,169,170,171,172,173,-117,174,175,176,177,-4,178,179,180,181,182,183]]]},{type:"Polygon",properties:{name:"Ivory Coast"},id:"CIV",arcs:[[184,185,186,187,-73,188]]},{type:"Polygon",properties:{name:"Cameroon"},id:"CMR",arcs:[[189,190,191,192,193,194,-128,195]]},{type:"Polygon",properties:{name:"Democratic Republic of the Congo"},id:"COD",arcs:[[196,197,-60,198,199,-10,200,-13,201,-126,202]]},{type:"Polygon",properties:{name:"Republic of the Congo"},id:"COG",arcs:[[-12,203,204,-196,-127,-202]]},{type:"Polygon",properties:{name:"Colombia"},id:"COL",arcs:[[205,206,207,208,209,-107,210]]},{type:"Polygon",properties:{name:"Costa Rica"},id:"CRI",arcs:[[211,212,213,214]]},{type:"Polygon",properties:{name:"Cuba"},id:"CUB",arcs:[[215]]},{type:"Polygon",properties:{name:"Northern Cyprus"},id:"-99",arcs:[[216,217]]},{type:"Polygon",properties:{name:"Cyprus"},id:"CYP",arcs:[[218,-218]]},{type:"Polygon",properties:{name:"Czech Republic"},id:"CZE",arcs:[[-53,219,220,221]]},{type:"Polygon",properties:{name:"Germany"},id:"DEU",arcs:[[222,223,-220,-52,-164,224,225,-64,226,227,228]]},{type:"Polygon",properties:{name:"Djibouti"},id:"DJI",arcs:[[229,230,231,232]]},{type:"MultiPolygon",properties:{name:"Denmark"},id:"DNK",arcs:[[[233]],[[-229,234]]]},{type:"Polygon",properties:{name:"Dominican Republic"},id:"DOM",arcs:[[235,236]]},{type:"Polygon",properties:{name:"Algeria"},id:"DZA",arcs:[[237,238,239,240,241,242,243,244]]},{type:"Polygon",properties:{name:"Ecuador"},id:"ECU",arcs:[[245,-206,246]]},{type:"Polygon",properties:{name:"Egypt"},id:"EGY",arcs:[[247,248,249,250,251]]},{type:"Polygon",properties:{name:"Eritrea"},id:"ERI",arcs:[[252,253,254,-233]]},{type:"Polygon",properties:{name:"Spain"},id:"ESP",arcs:[[255,256,257,258]]},{type:"Polygon",properties:{name:"Estonia"},id:"EST",arcs:[[259,260,261]]},{type:"Polygon",properties:{name:"Ethiopia"},id:"ETH",arcs:[[-232,262,263,264,265,266,267,-253]]},{type:"Polygon",properties:{name:"Finland"},id:"FIN",arcs:[[268,269,270,271]]},{type:"MultiPolygon",properties:{name:"Fiji"},id:"FJI",arcs:[[[272]],[[273,274]],[[275,-275]]]},{type:"Polygon",properties:{name:"Falkland Islands"},id:"FLK",arcs:[[276]]},{type:"MultiPolygon",properties:{name:"France"},id:"FRA",arcs:[[[277]],[[278,-225,-163,279,280,-257,281,-66]]]},{type:"Polygon",properties:{name:"French Guiana"},id:"GUF",arcs:[[282,283,284,285,-111]]},{type:"Polygon",properties:{name:"Gabon"},id:"GAB",arcs:[[286,287,-190,-205]]},{type:"MultiPolygon",properties:{name:"United Kingdom"},id:"GBR",arcs:[[[288,289]],[[290]]]},{type:"Polygon",properties:{name:"Georgia"},id:"GEO",arcs:[[291,292,-58,-32,293]]},{type:"Polygon",properties:{name:"Ghana"},id:"GHA",arcs:[[294,-189,-77,295]]},{type:"Polygon",properties:{name:"Guinea"},id:"GIN",arcs:[[296,297,298,299,300,301,-187]]},{type:"Polygon",properties:{name:"Gambia"},id:"GMB",arcs:[[302,303]]},{type:"Polygon",properties:{name:"Guinea Bissau"},id:"GNB",arcs:[[304,305,-300]]},{type:"Polygon",properties:{name:"Equatorial Guinea"},id:"GNQ",arcs:[[306,-191,-288]]},{type:"MultiPolygon",properties:{name:"Greece"},id:"GRC",arcs:[[[307]],[[308,-15,309,-84,310]]]},{type:"Polygon",properties:{name:"Greenland"},id:"GRL",arcs:[[311]]},{type:"Polygon",properties:{name:"Guatemala"},id:"GTM",arcs:[[312,313,-100,314,315,316]]},{type:"Polygon",properties:{name:"Guyana"},id:"GUY",arcs:[[317,318,-109,319]]},{type:"Polygon",properties:{name:"Honduras"},id:"HND",arcs:[[320,321,-316,322,323]]},{type:"Polygon",properties:{name:"Croatia"},id:"HRV",arcs:[[324,-92,325,326,327,328]]},{type:"Polygon",properties:{name:"Haiti"},id:"HTI",arcs:[[-237,329]]},{type:"Polygon",properties:{name:"Hungary"},id:"HUN",arcs:[[-48,330,331,332,333,-329,334]]},{type:"MultiPolygon",properties:{name:"Indonesia"},id:"IDN",arcs:[[[335]],[[336,337]],[[338]],[[339]],[[340]],[[341]],[[342]],[[343]],[[344,345]],[[346]],[[347]],[[348,349]],[[350]]]},{type:"Polygon",properties:{name:"India"},id:"IND",arcs:[[-177,351,-175,-116,-174,352,-80,353,354]]},{type:"Polygon",properties:{name:"Ireland"},id:"IRL",arcs:[[355,-289]]},{type:"Polygon",properties:{name:"Iran"},id:"IRN",arcs:[[356,-6,357,358,359,360,-55,-34,-57,361]]},{type:"Polygon",properties:{name:"Iraq"},id:"IRQ",arcs:[[362,363,364,365,366,367,-360]]},{type:"Polygon",properties:{name:"Iceland"},id:"ISL",arcs:[[368]]},{type:"Polygon",properties:{name:"Israel"},id:"ISR",arcs:[[369,370,371,-252,372,373,374]]},{type:"MultiPolygon",properties:{name:"Italy"},id:"ITA",arcs:[[[375]],[[376]],[[377,378,-280,-162,-50]]]},{type:"Polygon",properties:{name:"Jamaica"},id:"JAM",arcs:[[379]]},{type:"Polygon",properties:{name:"Jordan"},id:"JOR",arcs:[[-370,380,-366,381,382,-372,383]]},{type:"MultiPolygon",properties:{name:"Japan"},id:"JPN",arcs:[[[384]],[[385]],[[386]]]},{type:"Polygon",properties:{name:"Kazakhstan"},id:"KAZ",arcs:[[387,388,389,390,-181,391]]},{type:"Polygon",properties:{name:"Kenya"},id:"KEN",arcs:[[392,393,394,395,-265,396]]},{type:"Polygon",properties:{name:"Kyrgyzstan"},id:"KGZ",arcs:[[-392,-180,397,398]]},{type:"Polygon",properties:{name:"Cambodia"},id:"KHM",arcs:[[399,400,401,402]]},{type:"Polygon",properties:{name:"South Korea"},id:"KOR",arcs:[[403,404]]},{type:"Polygon",properties:{name:"Kosovo"},id:"-99",arcs:[[-18,405,406,407]]},{type:"Polygon",properties:{name:"Kuwait"},id:"KWT",arcs:[[408,409,-364]]},{type:"Polygon",properties:{name:"Laos"},id:"LAO",arcs:[[410,411,-172,412,-401]]},{type:"Polygon",properties:{name:"Lebanon"},id:"LBN",arcs:[[-374,413,414]]},{type:"Polygon",properties:{name:"Liberia"},id:"LBR",arcs:[[415,416,-297,-186]]},{type:"Polygon",properties:{name:"Libya"},id:"LBY",arcs:[[417,-245,418,419,-250,420,421]]},{type:"Polygon",properties:{name:"Sri Lanka"},id:"LKA",arcs:[[422]]},{type:"Polygon",properties:{name:"Lesotho"},id:"LSO",arcs:[[423]]},{type:"Polygon",properties:{name:"Lithuania"},id:"LTU",arcs:[[424,425,426,-93,427]]},{type:"Polygon",properties:{name:"Luxembourg"},id:"LUX",arcs:[[-226,-279,-65]]},{type:"Polygon",properties:{name:"Latvia"},id:"LVA",arcs:[[428,-262,429,-94,-427]]},{type:"Polygon",properties:{name:"Morocco"},id:"MAR",arcs:[[-242,430,431]]},{type:"Polygon",properties:{name:"Moldova"},id:"MDA",arcs:[[432,433]]},{type:"Polygon",properties:{name:"Madagascar"},id:"MDG",arcs:[[434]]},{type:"Polygon",properties:{name:"Mexico"},id:"MEX",arcs:[[435,-98,-314,436,437]]},{type:"Polygon",properties:{name:"Macedonia"},id:"MKD",arcs:[[-408,438,-85,-310,-14]]},{type:"Polygon",properties:{name:"Mali"},id:"MLI",arcs:[[439,-239,440,-74,-188,-302,441]]},{type:"Polygon",properties:{name:"Myanmar"},id:"MMR",arcs:[[442,-78,-353,-173,-412,443]]},{type:"Polygon",properties:{name:"Montenegro"},id:"MNE",arcs:[[444,-326,-91,445,-406,-17]]},{type:"Polygon",properties:{name:"Mongolia"},id:"MNG",arcs:[[446,-183]]},{type:"Polygon",properties:{name:"Mozambique"},id:"MOZ",arcs:[[447,448,449,450,451,452,453,454]]},{type:"Polygon",properties:{name:"Mauritania"},id:"MRT",arcs:[[455,456,457,-240,-440]]},{type:"Polygon",properties:{name:"Malawi"},id:"MWI",arcs:[[-455,458,459]]},{type:"MultiPolygon",properties:{name:"Malaysia"},id:"MYS",arcs:[[[460,461]],[[-349,462,-115,463]]]},{type:"Polygon",properties:{name:"Namibia"},id:"NAM",arcs:[[464,-8,465,-119,466]]},{type:"Polygon",properties:{name:"New Caledonia"},id:"NCL",arcs:[[467]]},{type:"Polygon",properties:{name:"Niger"},id:"NER",arcs:[[-75,-441,-238,-418,468,-194,469,-71]]},{type:"Polygon",properties:{name:"Nigeria"},id:"NGA",arcs:[[470,-72,-470,-193]]},{type:"Polygon",properties:{name:"Nicaragua"},id:"NIC",arcs:[[471,-324,472,-213]]},{type:"Polygon",properties:{name:"Netherlands"},id:"NLD",arcs:[[-227,-63,473]]},{type:"MultiPolygon",properties:{name:"Norway"},id:"NOR",arcs:[[[474,-272,475,476]],[[477]],[[478]],[[479]]]},{type:"Polygon",properties:{name:"Nepal"},id:"NPL",arcs:[[-352,-176]]},{type:"MultiPolygon",properties:{name:"New Zealand"},id:"NZL",arcs:[[[480]],[[481]]]},{type:"MultiPolygon",properties:{name:"Oman"},id:"OMN",arcs:[[[482,483,-22,484]],[[-20,485]]]},{type:"Polygon",properties:{name:"Pakistan"},id:"PAK",arcs:[[-178,-355,486,-358,-5]]},{type:"Polygon",properties:{name:"Panama"},id:"PAN",arcs:[[487,-215,488,-208]]},{type:"Polygon",properties:{name:"Peru"},id:"PER",arcs:[[-167,489,-247,-211,-106,-102]]},{type:"MultiPolygon",properties:{name:"Philippines"},id:"PHL",arcs:[[[490]],[[491]],[[492]],[[493]],[[494]],[[495]],[[496]]]},{type:"MultiPolygon",properties:{name:"Papua New Guinea"},id:"PNG",arcs:[[[497]],[[498]],[[-345,499]],[[500]]]},{type:"Polygon",properties:{name:"Poland"},id:"POL",arcs:[[-224,501,502,-428,-97,503,504,-221]]},{type:"Polygon",properties:{name:"Puerto Rico"},id:"PRI",arcs:[[505]]},{type:"Polygon",properties:{name:"North Korea"},id:"PRK",arcs:[[506,507,-405,508,-169]]},{type:"Polygon",properties:{name:"Portugal"},id:"PRT",arcs:[[-259,509]]},{type:"Polygon",properties:{name:"Paraguay"},id:"PRY",arcs:[[-104,-105,-26]]},{type:"Polygon",properties:{name:"Qatar"},id:"QAT",arcs:[[510,511]]},{type:"Polygon",properties:{name:"Romania"},id:"ROU",arcs:[[512,-434,513,514,-81,515,-333]]},{type:"MultiPolygon",properties:{name:"Russia"},id:"RUS",arcs:[[[516]],[[-503,517,-425]],[[518,519]],[[520]],[[521]],[[522]],[[523]],[[524]],[[525]],[[526,-507,-184,-447,-182,-391,527,-59,-293,528,529,-95,-430,-261,530,-269,-475,531,-520]],[[532]],[[533]],[[534]]]},{type:"Polygon",properties:{name:"Rwanda"},id:"RWA",arcs:[[535,-61,-198,536]]},{type:"Polygon",properties:{name:"Western Sahara"},id:"ESH",arcs:[[-241,-458,537,-431]]},{type:"Polygon",properties:{name:"Saudi Arabia"},id:"SAU",arcs:[[538,-382,-365,-410,539,-512,540,-23,-484,541]]},{type:"Polygon",properties:{name:"Sudan"},id:"SDN",arcs:[[542,543,-123,544,-421,-249,545,-254,-268,546]]},{type:"Polygon",properties:{name:"South Sudan"},id:"SSD",arcs:[[547,-266,-396,548,-203,-125,549,-543]]},{type:"Polygon",properties:{name:"Senegal"},id:"SEN",arcs:[[550,-456,-442,-301,-306,551,-304]]},{type:"MultiPolygon",properties:{name:"Solomon Islands"},id:"SLB",arcs:[[[552]],[[553]],[[554]],[[555]],[[556]]]},{type:"Polygon",properties:{name:"Sierra Leone"},id:"SLE",arcs:[[557,-298,-417]]},{type:"Polygon",properties:{name:"El Salvador"},id:"SLV",arcs:[[558,-317,-322]]},{type:"Polygon",properties:{name:"Somaliland"},id:"-99",arcs:[[-263,-231,559,560]]},{type:"Polygon",properties:{name:"Somalia"},id:"SOM",arcs:[[-397,-264,-561,561]]},{type:"Polygon",properties:{name:"Republic of Serbia"},id:"SRB",arcs:[[-86,-439,-407,-446,-90,-325,-334,-516]]},{type:"Polygon",properties:{name:"Suriname"},id:"SUR",arcs:[[562,-285,563,-283,-110,-319]]},{type:"Polygon",properties:{name:"Slovakia"},id:"SVK",arcs:[[-505,564,-331,-54,-222]]},{type:"Polygon",properties:{name:"Slovenia"},id:"SVN",arcs:[[-49,-335,-328,565,-378]]},{type:"Polygon",properties:{name:"Sweden"},id:"SWE",arcs:[[-476,-271,566]]},{type:"Polygon",properties:{name:"Swaziland"},id:"SWZ",arcs:[[567,-451]]},{type:"Polygon",properties:{name:"Syria"},id:"SYR",arcs:[[-381,-375,-415,568,569,-367]]},{type:"Polygon",properties:{name:"Chad"},id:"TCD",arcs:[[-469,-422,-545,-122,-195]]},{type:"Polygon",properties:{name:"Togo"},id:"TGO",arcs:[[570,-296,-76,-69]]},{type:"Polygon",properties:{name:"Thailand"},id:"THA",arcs:[[571,-462,572,-444,-411,-400]]},{type:"Polygon",properties:{name:"Tajikistan"},id:"TJK",arcs:[[-398,-179,-3,573]]},{type:"Polygon",properties:{name:"Turkmenistan"},id:"TKM",arcs:[[-357,574,-389,575,-1]]},{type:"Polygon",properties:{name:"East Timor"},id:"TLS",arcs:[[576,-337]]},{type:"Polygon",properties:{name:"Trinidad and Tobago"},id:"TTO",arcs:[[577]]},{type:"Polygon",properties:{name:"Tunisia"},id:"TUN",arcs:[[-244,578,-419]]},{type:"MultiPolygon",properties:{name:"Turkey"},id:"TUR",arcs:[[[-294,-36,-361,-368,-570,579]],[[-311,-83,580]]]},{type:"Polygon",properties:{name:"Taiwan"},id:"TWN",arcs:[[581]]},{type:"Polygon",properties:{name:"United Republic of Tanzania"},id:"TZA",arcs:[[-394,582,-448,-460,583,-199,-62,-536,584]]},{type:"Polygon",properties:{name:"Uganda"},id:"UGA",arcs:[[-537,-197,-549,-395,-585]]},{type:"Polygon",properties:{name:"Ukraine"},id:"UKR",arcs:[[-530,585,-514,-433,-513,-332,-565,-504,-96]]},{type:"Polygon",properties:{name:"Uruguay"},id:"URY",arcs:[[-113,586,-28]]},{type:"MultiPolygon",properties:{name:"United States of America"},id:"USA",arcs:[[[587]],[[588]],[[589]],[[590]],[[591]],[[592,-438,593,-139]],[[594]],[[595]],[[596]],[[-141,597]]]},{type:"Polygon",properties:{name:"Uzbekistan"},id:"UZB",arcs:[[-576,-388,-399,-574,-2]]},{type:"Polygon",properties:{name:"Venezuela"},id:"VEN",arcs:[[598,-320,-108,-210]]},{type:"Polygon",properties:{name:"Vietnam"},id:"VNM",arcs:[[599,-402,-413,-171]]},{type:"MultiPolygon",properties:{name:"Vanuatu"},id:"VUT",arcs:[[[600]],[[601]]]},{type:"Polygon",properties:{name:"West Bank"},id:"PSE",arcs:[[-384,-371]]},{type:"Polygon",properties:{name:"Yemen"},id:"YEM",arcs:[[602,-542,-483]]},{type:"Polygon",properties:{name:"South Africa"},id:"ZAF",arcs:[[-467,-118,603,-452,-568,-450,604],[-424]]},{type:"Polygon",properties:{name:"Zambia"},id:"ZMB",arcs:[[-459,-454,605,-120,-466,-7,-200,-584]]},{type:"Polygon",properties:{name:"Zimbabwe"},id:"ZWE",arcs:[[-604,-121,-606,-453]]}]}},arcs:[[[6700,7164],[28,-23],[21,8],[6,27],[22,9],[15,18],[6,47],[23,11],[5,21],[13,-15],[8,-2]],[[6847,7265],[16,-1],[20,-12]],[[6883,7252],[9,-7],[20,19],[9,-12],[9,27],[17,-1],[4,9],[3,24],[12,20],[15,-13],[-3,-18],[9,-3],[-3,-50],[11,-19],[10,12],[12,6],[17,27],[19,-5],[29,0]],[[7082,7268],[5,-17]],[[7087,7251],[-16,-6],[-14,-11],[-32,-7],[-30,-13],[-16,-25],[6,-25],[4,-30],[-14,-25],[1,-22],[-8,-22],[-26,2],[11,-39],[-18,-15],[-12,-35],[2,-36],[-11,-16],[-10,5],[-22,-8],[-3,-16],[-20,0],[-16,-34],[-1,-50],[-36,-24],[-19,5],[-6,-13],[-16,7],[-28,-8],[-47,30]],[[6690,6820],[25,53],[-2,38],[-21,10],[-2,38],[-9,47],[12,32],[-12,9],[7,43],[12,74]],[[5664,4412],[3,-18],[-4,-29],[5,-28],[-4,-22],[3,-20],[-58,1],[-2,-188],[19,-49],[18,-37]],[[5644,4022],[-51,-24],[-67,9],[-19,28],[-113,-3],[-4,-4],[-17,27],[-18,2],[-16,-10],[-14,-12]],[[5325,4035],[-2,38],[4,51],[9,55],[2,25],[9,53],[6,24],[16,39],[9,26],[3,44],[-1,34],[-9,21],[-7,36],[-7,35],[2,12],[8,24],[-8,57],[-6,39],[-14,38],[3,11]],[[5342,4697],[11,8],[8,-1],[10,7],[82,-1],[7,-44],[8,-35],[6,-19],[11,-31],[18,5],[9,8],[16,-8],[4,14],[7,35],[17,2],[2,10],[14,1],[-3,-22],[34,1],[1,-37],[5,-23],[-4,-36],[2,-36],[9,-22],[-1,-70],[7,5],[12,-1],[17,8],[13,-3]],[[5338,4715],[-8,45]],[[5330,4760],[12,25],[8,10],[10,-20]],[[5360,4775],[-10,-12],[-4,-16],[-1,-25],[-7,-7]],[[5571,7530],[-3,-20],[4,-25],[11,-15]],[[5583,7470],[0,-15],[-9,-9],[-2,-19],[-13,-29]],[[5559,7398],[-5,5],[0,13],[-15,19],[-3,29],[2,40],[4,18],[-4,10]],[[5538,7532],[-2,18],[12,29],[1,-11],[8,6]],[[5557,7574],[6,-16],[7,-6],[1,-22]],[[6432,6490],[5,3],[1,-16],[22,9],[23,-2],[17,-1],[19,39],[20,38],[18,37]],[[6557,6597],[5,-20]],[[6562,6577],[4,-47]],[[6566,6530],[-14,0],[-3,-39],[5,-8],[-12,-12],[0,-24],[-8,-24],[-1,-24]],[[6533,6399],[-6,-12],[-83,29],[-11,60],[-1,14]],[[3140,1814],[-17,2],[-30,0],[0,132]],[[3093,1948],[11,-27],[14,-45],[36,-35],[39,-15],[-13,-30],[-26,-2],[-14,20]],[[3258,3743],[51,-96],[23,-9],[34,-44],[29,-23],[4,-26],[-28,-90],[28,-16],[32,-9],[22,10],[25,45],[4,52]],[[3482,3537],[14,11],[14,-34],[-1,-47],[-23,-33],[-19,-24],[-31,-57],[-37,-81]],[[3399,3272],[-7,-47],[-7,-61],[0,-58],[-6,-14],[-2,-38]],[[3377,3054],[-2,-31],[35,-50],[-4,-41],[18,-26],[-2,-29],[-26,-75],[-42,-32],[-55,-12],[-31,6],[6,-36],[-6,-44],[5,-30],[-16,-20],[-29,-8],[-26,21],[-11,-15],[4,-59],[18,-18],[16,19],[8,-31],[-26,-18],[-22,-37],[-4,-59],[-7,-32],[-26,0],[-22,-31],[-8,-44],[28,-43],[26,-12],[-9,-53],[-33,-33],[-18,-70],[-25,-23],[-12,-28],[9,-61],[19,-34],[-12,3]],[[3095,1968],[-26,9],[-67,8],[-11,34],[0,45],[-18,-4],[-10,21],[-3,63],[22,26],[9,37],[-4,30],[15,51],[10,78],[-3,35],[12,11],[-3,22],[-13,12],[10,25],[-13,22],[-6,68],[11,12],[-5,72],[7,61],[7,52],[17,22],[-9,58],[0,54],[21,38],[-1,50],[16,57],[0,55],[-7,11],[-13,102],[17,60],[-2,58],[10,53],[18,56],[20,36],[-9,24],[6,19],[-1,98],[30,29],[10,62],[-3,14]],[[3136,3714],[23,54],[36,-15],[16,-42],[11,47],[32,-2],[4,-13]],[[6210,7485],[39,9]],[[6249,7494],[5,-15],[11,-10],[-6,-15],[15,-21],[-8,-18],[12,-16],[13,-10],[0,-41]],[[6291,7348],[-10,-2]],[[6281,7346],[-11,34],[0,10],[-12,-1],[-9,16],[-5,-1]],[[6244,7404],[-11,17],[-21,15],[3,28],[-5,21]],[[3345,329],[-8,-30],[-8,-27],[-59,8],[-62,-3],[-34,20],[0,2],[-16,17],[63,-2],[60,-6],[20,24],[15,21],[29,-24]],[[577,361],[-53,-8],[-36,21],[-17,21],[-1,3],[-18,16],[17,22],[52,-9],[28,-18],[21,-21],[7,-27]],[[3745,447],[35,-26],[12,-36],[3,-25],[1,-30],[-43,-19],[-45,-15],[-52,-14],[-59,-11],[-65,3],[-37,20],[5,24],[59,16],[24,20],[18,26],[12,22],[17,20],[18,25],[14,0],[41,12],[42,-12]],[[1633,715],[36,-9],[33,10],[-16,-20],[-26,-15],[-39,4],[-27,21],[6,20],[33,-11]],[[1512,716],[43,-23],[-17,3],[-36,5],[-38,17],[20,12],[28,-14]],[[2250,808],[31,-8],[30,7],[17,-34],[-22,5],[-34,-2],[-34,2],[-38,-4],[-28,12],[-15,24],[18,11],[35,-8],[40,-5]],[[3098,866],[4,-27],[-5,-23],[-8,-22],[-33,-8],[-31,-12],[-36,1],[14,24],[-33,-9],[-31,-8],[-21,18],[-2,24],[30,23],[20,7],[32,-2],[8,30],[1,22],[0,47],[16,28],[25,9],[15,-22],[6,-22],[12,-26],[10,-26],[7,-26]],[[3371,1268],[-11,-13],[-21,9],[-23,-6],[-19,-14],[-20,-15],[-14,-17],[-4,-23],[2,-22],[13,-20],[-19,-14],[-26,-4],[-15,-20],[-17,-19],[-17,-25],[-4,-22],[9,-24],[15,-19],[23,-14],[21,-18],[12,-23],[6,-22],[8,-24],[13,-19],[8,-22],[4,-55],[8,-22],[2,-23],[9,-23],[-4,-31],[-15,-24],[-17,-20],[-37,-8],[-12,-21],[-17,-20],[-42,-22],[-37,-9],[-35,-13],[-37,-13],[-22,-24],[-45,-2],[-49,2],[-44,-4],[-47,0],[9,-24],[42,-10],[31,-16],[18,-21],[-31,-19],[-48,6],[-40,-15],[-2,-24],[-1,-23],[33,-20],[6,-22],[35,-22],[59,-9],[50,-16],[40,-19],[50,-18],[70,-10],[68,-16],[47,-17],[52,-20],[27,-28],[13,-22],[34,21],[46,17],[48,19],[58,15],[49,16],[69,1],[68,-8],[56,-14],[18,26],[39,17],[70,1],[55,13],[52,13],[58,8],[62,10],[43,15],[-20,21],[-12,21],[0,22],[-54,-2],[-57,-10],[-54,0],[-8,22],[4,44],[12,13],[40,14],[47,14],[34,17],[33,18],[25,23],[38,10],[38,8],[19,5],[43,2],[41,8],[34,12],[34,14],[30,14],[39,18],[24,20],[26,17],[9,24],[-30,13],[10,25],[18,18],[29,12],[31,14],[28,18],[22,23],[13,28],[21,16],[33,-3],[13,-20],[34,-2],[1,22],[14,23],[30,-6],[7,-22],[33,-3],[36,10],[35,7],[31,-3],[12,-25],[31,20],[28,10],[31,9],[31,8],[29,14],[31,9],[24,13],[17,20],[20,-15],[29,8],[20,-27],[16,-21],[32,11],[12,24],[28,16],[37,-4],[11,-22],[22,22],[30,7],[33,3],[29,-2],[31,-7],[30,-3],[13,-20],[18,-17],[31,10],[32,3],[32,0],[31,1],[28,8],[29,7],[25,16],[26,11],[28,5],[21,17],[15,32],[16,20],[29,-10],[11,-21],[24,-13],[29,4],[19,-21],[21,-15],[28,14],[10,26],[25,10],[29,20],[27,8],[33,11],[22,13],[22,14],[22,13],[26,-7],[25,21],[18,16],[26,-1],[23,14],[6,21],[23,16],[23,11],[28,10],[25,4],[25,-3],[26,-6],[22,-16],[3,-26],[24,-19],[17,-17],[33,-7],[19,-16],[23,-16],[26,-3],[23,11],[24,24],[26,-12],[27,-7],[26,-7],[27,-5],[28,0],[23,-61],[-1,-15],[-4,-27],[-26,-15],[-22,-22],[4,-23],[31,1],[-4,-23],[-14,-22],[-13,-24],[21,-19],[32,-6],[32,11],[15,23],[10,22],[15,18],[17,18],[7,21],[15,29],[18,5],[31,3],[28,7],[28,9],[14,23],[8,22],[19,22],[27,15],[23,12],[16,19],[15,11],[21,9],[27,-6],[25,6],[28,7],[30,-4],[20,17],[14,39],[11,-16],[13,-28],[23,-12],[27,-4],[26,7],[29,-5],[26,-1],[17,6],[24,-4],[21,-12],[25,8],[30,0],[25,8],[29,-8],[19,19],[14,20],[19,16],[35,44],[18,-8],[21,-16],[18,-21],[36,-36],[27,-1],[25,0],[30,7],[30,8],[23,16],[19,18],[31,2],[21,13],[22,-12],[14,-18],[19,-19],[31,2],[19,-15],[33,-15],[35,-5],[29,4],[21,19],[19,18],[25,5],[25,-8],[29,-6],[26,9],[25,0],[24,-6],[26,-5],[25,10],[30,9],[28,3],[32,0],[25,5],[25,5],[8,29],[1,24],[17,-16],[5,-27],[10,-24],[11,-20],[23,-10],[32,4],[36,1],[25,3],[37,0],[26,1],[36,-2],[31,-5],[20,-18],[-5,-22],[18,-18],[30,-13],[31,-15],[35,-11],[38,-9],[28,-9],[32,-2],[18,20],[24,-16],[21,-19],[25,-13],[34,-6],[32,-7],[13,-23],[32,-14],[21,-21],[31,-9],[32,1],[30,-4],[33,1],[34,-4],[31,-8],[28,-14],[29,-12],[20,-17],[-3,-23],[-15,-21],[-13,-27],[-9,-21],[-14,-24],[-36,-9],[-16,-21],[-36,-13],[-13,-23],[-19,-22],[-20,-18],[-11,-25],[-7,-22],[-3,-26],[0,-22],[16,-23],[6,-22],[13,-21],[52,-8],[11,-26],[-50,-9],[-43,-13],[-52,-2],[-24,-34],[-5,-27],[-12,-22],[-14,-22],[37,-20],[14,-24],[24,-22],[33,-20],[39,-19],[42,-18],[64,-19],[14,-29],[80,-12],[5,-5],[21,-17],[77,15],[63,-19],[48,-14],[-9997,-1],[24,35],[50,-19],[3,2],[30,19],[4,0],[3,-1],[40,-25],[35,25],[7,3],[81,11],[27,-14],[13,-7],[41,-20],[79,-15],[63,-18],[107,-14],[80,16],[118,-11],[67,-19],[73,17],[78,17],[6,27],[-110,3],[-89,14],[-24,23],[-74,12],[5,27],[10,24],[10,22],[-5,25],[-46,16],[-22,21],[-43,18],[68,-3],[64,9],[40,-20],[50,18],[45,22],[23,19],[-10,25],[-36,16],[-41,17],[-57,4],[-50,8],[-54,6],[-18,22],[-36,18],[-21,21],[-9,67],[14,-6],[25,-18],[45,6],[44,8],[23,-26],[44,6],[37,13],[35,16],[32,20],[41,5],[-1,22],[-9,22],[8,21],[36,11],[16,-20],[42,12],[32,15],[40,1],[38,6],[37,13],[30,13],[34,13],[22,-4],[19,-4],[41,8],[37,-10],[38,1],[37,8],[37,-6],[41,-6],[39,3],[40,-2],[42,-1],[38,3],[28,17],[34,9],[35,-13],[33,11],[30,21],[18,-19],[9,-21],[18,-19],[29,17],[33,-22],[38,-7],[32,-16],[39,3],[36,11],[41,-3],[38,-8],[38,-10],[15,25],[-18,20],[-14,21],[-36,5],[-15,22],[-6,22],[-10,43],[21,-8],[36,-3],[36,3],[33,-9],[28,-17],[12,-21],[38,-4],[36,9],[38,11],[34,7],[28,-14],[37,5],[24,45],[23,-27],[32,-10],[34,6],[23,-23],[37,-3],[33,-7],[34,-12],[21,22],[11,20],[28,-23],[38,6],[28,-13],[19,-19],[37,5],[29,13],[29,15],[33,8],[39,7],[36,8],[27,13],[16,19],[7,25],[-3,24],[-9,24],[-10,23],[-9,23],[-7,21],[-1,23],[2,23],[13,22],[11,24],[5,23],[-6,26],[-3,23],[14,27],[15,17],[18,22],[19,19],[22,17],[11,25],[15,17],[18,15],[26,3],[18,19],[19,11],[23,7],[20,15],[16,19],[22,7],[16,-15],[-10,-20],[-29,-17]],[[6914,2185],[18,-19],[26,-7],[1,-11],[-7,-27],[-43,-4],[-1,31],[4,25],[2,12]],[[9038,2648],[27,-21],[15,8],[22,12],[16,-4],[2,-70],[-9,-21],[-3,-47],[-10,16],[-19,-41],[-6,3],[-17,2],[-17,50],[-4,39],[-16,52],[1,27],[18,-5]],[[8987,4244],[10,-46],[18,22],[9,-25],[13,-23],[-3,-26],[6,-51],[5,-29],[7,-7],[7,-51],[-3,-30],[9,-40],[31,-31],[19,-28],[19,-26],[-4,-14],[16,-37],[11,-64],[11,13],[11,-26],[7,9],[5,-63],[19,-36],[13,-22],[22,-48],[8,-48],[1,-33],[-2,-37],[13,-50],[-2,-52],[-5,-28],[-7,-52],[1,-34],[-6,-43],[-12,-53],[-21,-29],[-10,-46],[-9,-29],[-8,-51],[-11,-30],[-7,-44],[-4,-41],[2,-18],[-16,-21],[-31,-2],[-26,-24],[-13,-23],[-17,-26],[-23,27],[-17,10],[5,31],[-15,-11],[-25,-43],[-24,16],[-15,9],[-16,4],[-27,17],[-18,37],[-5,45],[-7,30],[-13,24],[-27,7],[9,28],[-7,44],[-13,-41],[-25,-11],[14,33],[5,34],[10,29],[-2,44],[-22,-50],[-18,-21],[-10,-47],[-22,25],[1,31],[-18,43],[-14,22],[5,14],[-36,35],[-19,2],[-27,29],[-50,-6],[-36,-21],[-31,-20],[-27,4],[-29,-30],[-24,-14],[-6,-31],[-10,-24],[-23,-1],[-18,-5],[-24,10],[-20,-6],[-19,-3],[-17,-31],[-8,2],[-14,-16],[-13,-19],[-21,2],[-18,0],[-30,38],[-15,11],[1,34],[14,8],[4,14],[-1,21],[4,41],[-3,35],[-15,60],[-4,33],[1,34],[-11,38],[-1,18],[-12,23],[-4,47],[-16,46],[-4,26],[13,-26],[-10,55],[14,-17],[8,-23],[0,30],[-14,47],[-3,18],[-6,18],[3,34],[6,15],[4,29],[-3,35],[11,42],[2,-45],[12,41],[22,20],[14,25],[21,22],[13,4],[7,-7],[22,22],[17,6],[4,13],[8,6],[15,-2],[29,18],[15,26],[7,31],[17,30],[1,24],[1,32],[19,50],[12,-51],[12,12],[-10,28],[9,29],[12,-13],[3,45],[15,29],[7,23],[14,10],[0,17],[13,-7],[0,15],[12,8],[14,8],[20,-27],[16,-35],[17,0],[18,-6],[-6,33],[13,47],[13,15],[-5,15],[12,34],[17,21],[14,-7],[24,11],[-1,30],[-20,19],[15,9],[18,-15],[15,-24],[23,-15],[8,6],[17,-18],[17,17],[10,-5],[7,11],[12,-29],[-7,-32],[-11,-24],[-9,-2],[3,-23],[-8,-30],[-10,-29],[2,-17],[22,-32],[21,-19],[15,-20],[20,-35],[8,0],[14,-15],[4,-19],[27,-20],[18,20],[6,32],[5,26],[4,33],[8,47],[-4,28],[2,17],[-3,34],[4,45],[5,12],[-4,20],[7,31],[5,32],[1,17],[10,22],[8,-29],[2,-37],[7,-7],[1,-25],[10,-30],[2,-33],[-1,-22]],[[5471,7900],[-2,-24],[-16,0],[6,-13],[-9,-38]],[[5450,7825],[-6,-10],[-24,-1],[-14,-13],[-23,4]],[[5383,7805],[-40,15],[-6,21],[-27,-10],[-4,-12],[-16,9]],[[5290,7828],[-15,1],[-12,11],[4,15],[-1,10]],[[5266,7865],[8,3],[14,-16],[4,16],[25,-3],[20,11],[13,-2],[9,-12],[2,10],[-4,38],[10,8],[10,27]],[[5377,7945],[21,-19],[15,24],[10,5],[22,-18],[13,3],[13,-12]],[[5471,7928],[-3,-7],[3,-21]],[[6281,7346],[-19,8],[-14,27],[-4,23]],[[6349,7527],[15,-31],[14,-42],[13,-2],[8,-16],[-23,-5],[-5,-46],[-4,-21],[-11,-13],[1,-30]],[[6357,7321],[-7,-3],[-17,31],[10,30],[-9,17],[-10,-4],[-33,-44]],[[6249,7494],[6,10],[21,-17],[15,-4],[4,7],[-14,32],[7,9]],[[6288,7531],[8,-2],[19,-36],[13,-4],[4,15],[17,23]],[[5814,4792],[-1,71],[-7,27]],[[5806,4890],[17,-5],[8,34],[15,-4]],[[5846,4915],[1,-23],[6,-14],[1,-19],[-7,-12],[-11,-31],[-10,-22],[-12,-2]],[[5092,8091],[20,-5],[26,12],[17,-25],[16,-14]],[[5171,8059],[-4,-40]],[[5167,8019],[-7,-2],[-3,-33]],[[5157,7984],[-24,26],[-14,-4],[-20,28],[-13,23],[-13,1],[-4,21]],[[5069,8079],[23,12]],[[5074,5427],[-23,-7]],[[5051,5420],[-7,41],[2,136],[-6,12],[-1,29],[-10,21],[-8,17],[3,31]],[[5024,5707],[10,7],[6,26],[13,5],[6,18]],[[5059,5763],[10,17],[10,0],[21,-34]],[[5100,5746],[-1,-19],[6,-35],[-6,-24],[3,-16],[-13,-37],[-9,-18],[-5,-37],[1,-38],[-2,-95]],[[4921,5627],[-19,15],[-13,-2],[-10,-15],[-12,13],[-5,19],[-13,13]],[[4849,5670],[-1,34],[7,26],[-1,20],[23,48],[4,41],[7,14],[14,-8],[11,12],[4,16],[22,26],[5,19],[26,24],[15,9],[7,-12],[18,0]],[[5010,5939],[-2,-28],[3,-27],[16,-39],[1,-28],[32,-14],[-1,-40]],[[5024,5707],[-24,1]],[[5e3,5708],[-13,5],[-9,-9],[-12,4],[-48,-3],[-1,-33],[4,-45]],[[7573,6360],[0,-43],[-10,9],[2,-47]],[[7565,6279],[-8,30],[-1,31],[-6,28],[-11,34],[-26,3],[3,-25],[-9,-32],[-12,12],[-4,-11],[-8,6],[-11,5]],[[7472,6360],[-4,49],[-10,45],[5,35],[-17,16],[6,22],[18,22],[-20,31],[9,40],[22,-26],[14,-3],[2,-41],[26,-8],[26,1],[16,-10],[-13,-50],[-12,-3],[-9,-34],[16,-31],[4,38],[8,0],[14,-93]],[[5629,7671],[8,-25],[11,5],[21,-9],[41,-4],[13,16],[33,13],[20,-21],[17,-6]],[[5793,7640],[-15,-25],[-10,-42],[9,-34]],[[5777,7539],[-24,8],[-28,-18]],[[5725,7529],[0,-30],[-26,-5],[-19,20],[-22,-16],[-21,2]],[[5637,7500],[-2,39],[-14,19]],[[5621,7558],[5,8],[-3,7],[4,19],[11,18],[-14,26],[-2,21],[7,14]],[[2846,6461],[-7,-3],[-7,34],[-10,17],[6,38],[8,-3],[10,-49],[0,-34]],[[2838,6628],[-30,-10],[-2,22],[13,5],[18,-2],[1,-15]],[[2861,6628],[-5,-42],[-5,8],[0,31],[-12,23],[0,7],[22,-27]],[[5527,7708],[10,0],[-7,-26],[14,-23],[-4,-28],[-7,-2]],[[5533,7629],[-5,-6],[-9,-13],[-4,-33]],[[5515,7577],[-25,23],[-10,24],[-11,13],[-12,22],[-6,19],[-14,27],[6,25],[10,-14],[6,12],[13,2],[24,-10],[19,1],[12,-13]],[[5652,8242],[27,0],[30,22],[6,34],[23,19],[-3,26]],[[5735,8343],[17,10],[30,23]],[[5782,8376],[29,-15],[4,-15],[15,7],[27,-14],[3,-27],[-6,-16],[17,-39],[12,-11],[-2,-11],[19,-10],[8,-16],[-11,-13],[-23,2],[-5,-5],[7,-20],[6,-37]],[[5882,8136],[-23,-4],[-9,-13],[-2,-30],[-11,6],[-25,-3],[-7,14],[-11,-10],[-10,8],[-22,1],[-31,15],[-28,4],[-22,-1],[-15,-16],[-13,-2]],[[5653,8105],[-1,26],[-8,27],[17,12],[0,24],[-8,22],[-1,26]],[[2524,6110],[-1,8],[4,3],[5,-7],[10,36],[5,0]],[[2547,6150],[0,-8],[5,-1],[0,-16],[-5,-25],[3,-9],[-3,-21],[2,-6],[-4,-30],[-5,-16],[-5,-1],[-6,-21]],[[2529,5996],[-8,0],[2,67],[1,47]],[[3136,3714],[-20,-8],[-11,82],[-15,66],[9,57],[-15,25],[-4,43],[-13,40]],[[3067,4019],[17,64],[-12,49],[7,20],[-5,22],[10,30],[1,50],[1,41],[6,20],[-24,96]],[[3068,4411],[21,-5],[14,1],[6,18],[25,24],[14,22],[37,10],[-3,-44],[3,-23],[-2,-40],[30,-53],[31,-9],[11,-23],[19,-11],[11,-17],[18,0],[16,-17],[1,-34],[6,-18],[0,-25],[-8,-1],[11,-69],[53,-2],[-4,-35],[3,-23],[15,-16],[6,-37],[-4,-47],[-8,-26],[3,-33],[-9,-12]],[[3384,3866],[-1,18],[-25,30],[-26,1],[-49,-17],[-13,-52],[-1,-32],[-11,-71]],[[3482,3537],[6,34],[3,35],[1,32],[-10,11],[-11,-9],[-10,2],[-4,23],[-2,54],[-5,18],[-19,16],[-11,-12],[-30,11],[2,81],[-8,33]],[[3068,4411],[-15,-11],[-13,7],[2,90],[-23,-35],[-24,2],[-11,31],[-18,4],[5,25],[-15,36],[-11,53],[7,11],[0,25],[17,17],[-3,32],[7,20],[2,28],[32,40],[22,11],[4,9],[25,-2]],[[3058,4804],[13,162],[0,25],[-4,34],[-12,22],[0,42],[15,10],[6,-6],[1,23],[-16,6],[-1,37],[54,-2],[10,21],[7,-19],[6,-35],[5,8]],[[3142,5132],[15,-32],[22,4],[5,18],[21,14],[11,10],[4,25],[19,17],[-1,12],[-24,5],[-3,37],[1,40],[-13,15],[5,6],[21,-8],[22,-15],[8,14],[20,9],[31,23],[10,22],[-3,17]],[[3313,5365],[14,2],[7,-13],[-4,-26],[9,-9],[7,-28],[-8,-20],[-4,-51],[7,-30],[2,-27],[17,-28],[14,-3],[3,12],[8,3],[13,10],[9,16],[15,-5],[7,2]],[[3429,5170],[15,-5],[3,12],[-5,12],[3,17],[11,-5],[13,6],[16,-13]],[[3485,5194],[12,-12],[9,16],[6,-3],[4,-16],[13,4],[11,22],[8,44],[17,54]],[[3565,5303],[9,3],[7,-33],[16,-103],[14,-10],[1,-41],[-21,-48],[9,-18],[49,-9],[1,-60],[21,39],[35,-21],[46,-36],[14,-35],[-5,-32],[33,18],[54,-32],[41,3],[41,-49],[36,-66],[21,-17],[24,-3],[10,-18],[9,-76],[5,-35],[-11,-98],[-14,-39],[-39,-82],[-18,-67],[-21,-51],[-7,-1],[-7,-43],[2,-111],[-8,-91],[-3,-39],[-9,-23],[-5,-79],[-28,-77],[-5,-61],[-22,-26],[-7,-35],[-30,0],[-44,-23],[-19,-26],[-31,-18],[-33,-47],[-23,-58],[-5,-44],[5,-33],[-5,-60],[-6,-28],[-20,-33],[-31,-104],[-24,-47],[-19,-27],[-13,-57],[-18,-33]],[[3517,3063],[-8,33],[13,28],[-16,40],[-22,33],[-29,38],[-10,-2],[-28,46],[-18,-7]],[[8172,5325],[11,22],[23,32]],[[8206,5379],[-1,-29],[-2,-37],[-13,1],[-6,-20],[-12,31]],[[7546,6698],[12,-19],[-2,-36],[-23,-2],[-23,4],[-18,-9],[-25,22],[-1,12]],[[7466,6670],[19,44],[15,15],[20,-14],[14,-1],[12,-16]],[[5817,3752],[-39,-43],[-25,-44],[-10,-40],[-8,-22],[-15,-4],[-5,-29],[-3,-18],[-17,-14],[-23,3],[-13,17],[-12,7],[-14,-14],[-6,-28],[-14,-18],[-13,-26],[-20,-6],[-6,20],[2,36],[-16,56],[-8,9]],[[5552,3594],[0,173],[27,2],[1,210],[21,2],[43,21],[10,-24],[18,23],[9,0],[15,13]],[[5696,4014],[5,-4]],[[5701,4010],[11,-48],[5,-10],[9,-34],[32,-65],[12,-7],[0,-20],[8,-38],[21,-9],[18,-27]],[[5424,5496],[23,4],[5,16],[5,-2],[7,-13],[34,23],[12,23],[15,20],[-3,21],[8,6],[27,-4],[26,27],[20,65],[14,24],[18,10]],[[5635,5716],[3,-26],[16,-36],[0,-25],[-5,-24],[2,-18],[10,-18]],[[5661,5569],[21,-25]],[[5682,5544],[15,-24],[0,-19],[19,-31],[12,-26],[7,-35],[20,-24],[5,-18]],[[5760,5367],[-9,-7],[-18,2],[-21,6],[-10,-5],[-5,-14],[-9,-2],[-10,12],[-31,-29],[-13,6],[-4,-5],[-8,-35],[-21,11],[-20,6],[-18,22],[-23,20],[-15,-19],[-10,-30],[-3,-41]],[[5512,5265],[-18,3],[-19,10],[-16,-32],[-15,-55]],[[5444,5191],[-3,18],[-1,27],[-13,19],[-10,30],[-2,21],[-13,31],[2,18],[-3,25],[2,45],[7,11],[14,60]],[[3231,7808],[20,-8],[26,1],[-14,-24],[-10,-4],[-35,25],[-7,20],[10,18],[10,-28]],[[3283,7958],[-14,-1],[-36,19],[-26,28],[10,5],[37,-15],[28,-25],[1,-11]],[[1569,7923],[-14,-8],[-46,27],[-8,21],[-25,21],[-5,16],[-28,11],[-11,32],[2,14],[30,-13],[17,-9],[26,-6],[9,-21],[14,-28],[28,-24],[11,-33]],[[3440,8052],[-18,-52],[18,20],[19,-12],[-10,-21],[25,-16],[12,14],[28,-18],[-8,-43],[19,10],[4,-32],[8,-36],[-11,-52],[-13,-2],[-18,11],[6,48],[-8,8],[-32,-52],[-17,2],[20,28],[-27,14],[-30,-3],[-54,2],[-4,17],[17,21],[-12,16],[24,36],[28,94],[18,33],[24,21],[13,-3],[-6,-16],[-15,-37]],[[1313,8250],[27,5],[-8,-67],[24,-48],[-11,0],[-17,27],[-10,27],[-14,19],[-5,26],[1,19],[13,-8]],[[2798,8730],[-11,-31],[-12,5],[-8,17],[2,4],[10,18],[12,-1],[7,-12]],[[2725,8762],[-33,-32],[-19,1],[-6,16],[20,27],[38,0],[0,-12]],[[2634,8936],[5,-26],[15,9],[16,-15],[30,-20],[32,-19],[2,-28],[21,5],[20,-20],[-25,-18],[-43,14],[-16,26],[-27,-31],[-40,-31],[-9,35],[-38,-6],[24,30],[4,46],[9,54],[20,-5]],[[2892,9024],[-31,-3],[-7,29],[12,34],[26,8],[21,-17],[1,-25],[-4,-8],[-18,-18]],[[2343,9140],[-17,-21],[-38,18],[-22,-6],[-38,26],[24,19],[19,25],[30,-16],[17,-11],[8,-11],[17,-23]],[[3135,7724],[-18,33],[0,81],[-13,17],[-18,-10],[-10,16],[-21,-45],[-8,-46],[-10,-27],[-12,-9],[-9,-3],[-3,-15],[-51,0],[-42,0],[-12,-11],[-30,-42],[-3,-5],[-9,-23],[-26,0],[-27,0],[-12,-10],[4,-11],[2,-18],[0,-6],[-36,-30],[-29,-9],[-32,-31],[-7,0],[-10,9],[-3,8],[1,6],[6,21],[13,33],[8,35],[-5,51],[-6,53],[-29,28],[3,11],[-4,7],[-8,0],[-5,9],[-2,14],[-5,-6],[-7,2],[1,6],[-6,6],[-3,15],[-21,19],[-23,20],[-27,23],[-26,21],[-25,-17],[-9,0],[-34,15],[-23,-8],[-27,19],[-28,9],[-19,4],[-9,10],[-5,32],[-9,0],[-1,-23],[-57,0],[-95,0],[-94,0],[-84,0],[-83,0],[-82,0],[-85,0],[-27,0],[-82,0],[-79,0]],[[1588,7952],[-4,0],[-54,58],[-20,26],[-50,24],[-15,53],[3,36],[-35,25],[-5,48],[-34,43],[0,30]],[[1374,8295],[15,29],[0,37],[-48,37],[-28,68],[-17,42],[-26,27],[-19,24],[-14,31],[-28,-20],[-27,-33],[-25,39],[-19,26],[-27,16],[-28,2],[0,337],[1,219]],[[1084,9176],[51,-14],[44,-29],[29,-5],[24,24],[34,19],[41,-7],[42,26],[45,14],[20,-24],[20,14],[6,27],[20,-6],[47,-53],[37,40],[3,-45],[34,10],[11,17],[34,-3],[42,-25],[65,-22],[38,-10],[28,4],[37,-30],[-39,-29],[50,-13],[75,7],[24,11],[29,-36],[31,30],[-29,25],[18,20],[34,3],[22,6],[23,-14],[28,-32],[31,5],[49,-27],[43,9],[40,-1],[-3,37],[25,10],[43,-20],[0,-56],[17,47],[23,-1],[12,59],[-30,36],[-32,24],[2,65],[33,43],[37,-9],[28,-26],[38,-67],[-25,-29],[52,-12],[-1,-60],[38,46],[33,-38],[-9,-44],[27,-40],[29,43],[21,51],[1,65],[40,-5],[41,-8],[37,-30],[2,-29],[-21,-31],[20,-32],[-4,-29],[-54,-41],[-39,-9],[-29,18],[-8,-30],[-27,-50],[-8,-26],[-32,-40],[-40,-4],[-22,-25],[-2,-38],[-32,-7],[-34,-48],[-30,-67],[-11,-46],[-1,-69],[40,-10],[13,-55],[13,-45],[39,12],[51,-26],[28,-22],[20,-28],[35,-17],[29,-24],[46,-4],[30,-6],[-4,-51],[8,-59],[21,-66],[41,-56],[21,19],[15,61],[-14,93],[-20,31],[45,28],[31,41],[16,41],[-3,40],[-19,50],[-33,44],[32,62],[-12,54],[-9,92],[19,14],[48,-16],[29,-6],[23,15],[25,-20],[35,-34],[8,-23],[50,-4],[-1,-50],[9,-74],[25,-10],[21,-35],[40,33],[26,65],[19,28],[21,-53],[36,-75],[31,-71],[-11,-37],[37,-33],[25,-34],[44,-15],[18,-19],[11,-50],[22,-8],[11,-22],[2,-67],[-20,-22],[-20,-21],[-46,-21],[-35,-48],[-47,-10],[-59,13],[-42,0],[-29,-4],[-23,-43],[-35,-26],[-40,-78],[-32,-54],[23,9],[45,78],[58,49],[42,6],[24,-29],[-26,-40],[9,-63],[9,-45],[36,-29],[46,8],[28,67],[2,-43],[17,-22],[-34,-38],[-61,-36],[-28,-23],[-31,-43],[-21,4],[-1,50],[48,49],[-44,-2],[-31,-7]],[[1829,9377],[-14,-27],[61,17],[39,-29],[31,30],[26,-20],[23,-58],[14,25],[-20,60],[24,9],[28,-9],[31,-24],[17,-58],[9,-41],[47,-30],[50,-28],[-3,-26],[-46,-4],[18,-23],[-9,-22],[-51,9],[-48,16],[-32,-3],[-52,-20],[-70,-9],[-50,-6],[-15,28],[-38,16],[-24,-6],[-35,47],[19,6],[43,10],[39,-3],[36,11],[-54,13],[-59,-4],[-39,1],[-15,22],[64,23],[-42,-1],[-49,16],[23,44],[20,24],[74,36],[29,-12]],[[2097,9395],[-24,-39],[-44,41],[10,9],[37,2],[21,-13]],[[2879,9376],[3,-16],[-30,2],[-30,1],[-30,-8],[-8,3],[-31,32],[1,21],[14,4],[63,-6],[48,-33]],[[2595,9379],[22,-36],[26,47],[70,24],[48,-61],[-4,-38],[55,17],[26,23],[62,-30],[38,-28],[3,-25],[52,13],[29,-38],[67,-23],[24,-24],[26,-55],[-51,-28],[66,-38],[44,-13],[40,-55],[44,-3],[-9,-42],[-49,-69],[-34,26],[-44,57],[-36,-8],[-3,-34],[29,-34],[38,-27],[11,-16],[18,-58],[-9,-43],[-35,16],[-70,47],[39,-51],[29,-35],[5,-21],[-76,24],[-59,34],[-34,29],[10,17],[-42,30],[-40,29],[0,-18],[-80,-9],[-23,20],[18,44],[52,1],[57,7],[-9,21],[10,30],[36,57],[-8,27],[-11,20],[-42,29],[-57,20],[18,15],[-29,36],[-25,4],[-22,20],[-14,-18],[-51,-7],[-101,13],[-59,17],[-45,9],[-23,21],[29,27],[-39,0],[-9,60],[21,53],[29,24],[72,16],[-21,-39]],[[2212,9420],[33,-12],[50,7],[7,-17],[-26,-28],[42,-26],[-5,-53],[-45,-23],[-27,5],[-19,23],[-69,45],[0,19],[57,-7],[-31,38],[33,29]],[[2411,9357],[-30,-45],[-32,3],[-17,52],[1,29],[14,25],[28,16],[58,-2],[53,-14],[-42,-53],[-33,-11]],[[1654,9275],[-73,-29],[-15,26],[-64,31],[12,25],[19,43],[24,39],[-27,36],[94,10],[39,-13],[71,-3],[27,-17],[30,-25],[-35,-15],[-68,-41],[-34,-42],[0,-25]],[[2399,9487],[-15,-23],[-40,5],[-34,15],[15,27],[40,16],[24,-21],[10,-19]],[[2264,9590],[21,-27],[1,-31],[-13,-44],[-46,-6],[-30,10],[1,34],[-45,-4],[-2,45],[30,-2],[41,21],[40,-4],[2,8]],[[1994,9559],[11,-21],[25,10],[29,-2],[5,-29],[-17,-28],[-94,-10],[-70,-25],[-43,-2],[-3,20],[57,26],[-125,-7],[-39,10],[38,58],[26,17],[78,-20],[50,-35],[48,-5],[-40,57],[26,21],[29,-7],[9,-28]],[[2370,9612],[30,-19],[55,0],[24,-19],[-6,-22],[32,-14],[17,-14],[38,-2],[40,-5],[44,13],[57,5],[45,-5],[30,-22],[6,-24],[-17,-16],[-42,-13],[-35,8],[-80,-10],[-57,-1],[-45,8],[-74,19],[-9,32],[-4,29],[-27,26],[-58,7],[-32,19],[10,24],[58,-4]],[[1772,9645],[-4,-46],[-21,-20],[-26,-3],[-52,-26],[-44,-9],[-38,13],[47,44],[57,39],[43,-1],[38,9]],[[2393,9637],[-13,-2],[-52,4],[-7,17],[56,-1],[19,-11],[-3,-7]],[[1939,9648],[-52,-17],[-41,19],[23,19],[40,6],[39,-10],[-9,-17]],[[1954,9701],[-34,-11],[-46,0],[0,8],[29,18],[14,-3],[37,-12]],[[2338,9669],[-41,-12],[-23,13],[-12,23],[-2,24],[36,-2],[16,-4],[33,-21],[-7,-21]],[[2220,9685],[11,-25],[-45,7],[-46,19],[-62,2],[27,18],[-34,14],[-2,22],[55,-8],[75,-21],[21,-28]],[[2583,9764],[33,-20],[-38,-17],[-51,-45],[-50,-4],[-57,8],[-30,24],[0,21],[22,16],[-50,0],[-31,19],[-18,27],[20,26],[19,18],[28,4],[-12,14],[65,3],[35,-32],[47,-12],[46,-11],[22,-39]],[[3097,9967],[74,-4],[60,-8],[51,-16],[-2,-16],[-67,-25],[-68,-12],[-25,-14],[61,1],[-66,-36],[-45,-17],[-48,-48],[-57,-10],[-18,-12],[-84,-6],[39,-8],[-20,-10],[23,-29],[-26,-21],[-43,-16],[-13,-24],[-39,-17],[4,-14],[48,3],[0,-15],[-74,-35],[-73,16],[-81,-9],[-42,7],[-52,3],[-4,29],[52,13],[-14,43],[17,4],[74,-26],[-38,38],[-45,11],[23,23],[49,14],[8,21],[-39,23],[-12,31],[76,-3],[22,-6],[43,21],[-62,7],[-98,-4],[-49,20],[-23,24],[-32,17],[-6,21],[41,11],[32,2],[55,9],[41,22],[34,-3],[30,-16],[21,32],[37,9],[50,7],[85,2],[14,-6],[81,10],[60,-4],[60,-4]],[[5290,7828],[-3,-24],[-12,-10],[-20,7],[-6,-24],[-14,-2],[-5,10],[-15,-20],[-13,-3],[-12,13]],[[5190,7775],[-10,25],[-13,-9],[0,27],[21,33],[-1,15],[12,-5],[8,10]],[[5207,7871],[24,-1],[5,13],[30,-18]],[[3140,1814],[-10,-24],[-23,-18],[-14,2],[-16,5],[-21,18],[-29,8],[-35,33],[-28,32],[-38,66],[23,-12],[39,-40],[36,-21],[15,27],[9,41],[25,24],[20,-7]],[[3095,1968],[-25,0],[-13,-14],[-25,-22],[-5,-55],[-11,-1],[-32,19],[-32,41],[-34,34],[-9,37],[8,35],[-14,39],[-4,101],[12,57],[30,45],[-43,18],[27,52],[9,98],[31,-21],[15,123],[-19,15],[-9,-73],[-17,8],[9,84],[9,110],[13,40],[-8,58],[-2,66],[11,2],[17,96],[20,94],[11,88],[-6,89],[8,49],[-3,72],[16,73],[5,114],[9,123],[9,132],[-2,96],[-6,84]],[[3045,3974],[14,15],[8,30]],[[8064,6161],[-24,-28],[-23,18],[0,51],[13,26],[31,17],[16,-1],[6,-23],[-12,-26],[-7,-34]],[[8628,7562],[-18,35],[-11,-33],[-43,-26],[4,-31],[-24,2],[-13,19],[-19,-42],[-30,-32],[-23,-38]],[[8451,7416],[-39,-17],[-20,-27],[-30,-17],[15,28],[-6,23],[22,40],[-15,30],[-24,-20],[-32,-41],[-17,-39],[-27,-2],[-14,-28],[15,-40],[22,-10],[1,-26],[22,-17],[31,42],[25,-23],[18,-2],[4,-31],[-39,-16],[-13,-32],[-27,-30],[-14,-41],[30,-33],[11,-58],[17,-54],[18,-45],[0,-44],[-17,-16],[6,-32],[17,-18],[-5,-48],[-7,-47],[-15,-5],[-21,-64],[-22,-78],[-26,-70],[-38,-55],[-39,-50],[-31,-6],[-17,-27],[-10,20],[-15,-30],[-39,-29],[-29,-9],[-10,-63],[-15,-3],[-8,43],[7,22],[-37,19],[-13,-9]],[[8001,6331],[-28,15],[-14,24],[5,34],[-26,11],[-13,22],[-24,-31],[-27,-7],[-22,0],[-15,-14]],[[7837,6385],[-14,-9],[4,-68],[-15,2],[-2,14]],[[7810,6324],[-1,24],[-20,-17],[-12,11],[-21,22],[8,49],[-18,12],[-6,54],[-30,-10],[4,70],[26,50],[1,48],[-1,46],[-12,14],[-9,35],[-16,-5]],[[7703,6727],[-30,9],[9,25],[-13,36],[-20,-24],[-23,14],[-32,-37],[-25,-44],[-23,-8]],[[7466,6670],[-2,47],[-17,-13]],[[7447,6704],[-32,6],[-32,14],[-22,26],[-22,11],[-9,29],[-16,8],[-28,39],[-22,18],[-12,-14]],[[7252,6841],[-38,41],[-28,37],[-7,65],[20,-7],[1,30],[-12,30],[3,48],[-30,69]],[[7161,7154],[-45,24],[-8,46],[-21,27]],[[7082,7268],[-4,34],[1,23],[-17,13],[-9,-6],[-7,55]],[[7046,7387],[8,13],[-4,14],[26,28],[20,12],[29,-8],[11,38],[35,7],[10,23],[44,32],[4,13]],[[7229,7559],[-2,34],[19,15],[-25,103],[55,24],[14,13],[20,106],[55,-20],[15,27],[2,59],[23,6],[21,39]],[[7426,7965],[11,5]],[[7437,7970],[7,-41],[23,-32],[40,-22],[19,-47],[-10,-70],[10,-25],[33,-10],[37,-8],[33,-37],[18,-7],[12,-54],[17,-35],[30,1],[58,-13],[36,8],[28,-9],[41,-36],[34,0],[12,-18],[32,32],[45,20],[42,2],[32,21],[20,32],[20,20],[-5,19],[-9,23],[15,38],[15,-5],[29,-12],[28,31],[42,23],[20,39],[20,17],[40,8],[22,-7],[3,21],[-25,41],[-22,19],[-22,-22],[-27,10],[-16,-8],[-7,24],[20,59],[13,45]],[[8240,8005],[34,-23],[39,38],[-1,26],[26,62],[15,19],[0,33],[-16,14],[23,29],[35,11],[37,2],[41,-18],[25,-22],[17,-59],[10,-26],[10,-36],[10,-58],[49,-19],[32,-42],[12,-55],[42,0],[24,23],[46,17],[-15,-53],[-11,-21],[-9,-65],[-19,-58],[-33,11],[-24,-21],[7,-51],[-4,-69],[-14,-2],[0,-30]],[[4920,5353],[-12,-1],[-20,12],[-18,-1],[-33,-10],[-19,-18],[-27,-21],[-6,1]],[[4785,5315],[2,49],[3,7],[-1,24],[-12,24],[-8,4],[-8,17],[6,26],[-3,28],[1,18]],[[4765,5512],[5,0],[1,25],[-2,12],[3,8],[10,7],[-7,47],[-6,25],[2,20],[5,4]],[[4776,5660],[4,6],[8,-9],[21,-1],[5,18],[5,-1],[8,6],[4,-25],[7,7],[11,9]],[[4921,5627],[7,-84],[-11,-50],[-8,-66],[12,-51],[-1,-23]],[[5363,5191],[-4,4],[-16,-8],[-17,8],[-13,-4]],[[5313,5191],[-45,1]],[[5268,5192],[4,47],[-11,39],[-13,10],[-6,27],[-7,8],[1,16]],[[5236,5339],[7,42],[13,57],[8,1],[17,34],[10,1],[16,-24],[19,20],[2,25],[7,23],[4,30],[15,25],[5,41],[6,13],[4,31],[7,37],[24,46],[1,20],[3,10],[-11,24]],[[5393,5795],[1,19],[8,3]],[[5402,5817],[11,-38],[2,-39],[-1,-39],[15,-54],[-15,1],[-8,-4],[-13,6],[-6,-28],[16,-35],[13,-10],[3,-24],[9,-41],[-4,-16]],[[5444,5191],[-2,-31],[-22,14],[-22,15],[-35,2]],[[5856,5265],[-2,-69],[11,-8],[-9,-21],[-10,-16],[-11,-31],[-6,-27],[-1,-48],[-7,-22],[0,-45]],[[5821,4978],[-8,-16],[-1,-35],[-4,-5],[-2,-32]],[[5814,4792],[5,-55],[-2,-30],[5,-35],[16,-33],[15,-74]],[[5853,4565],[-11,6],[-37,-10],[-7,-7],[-8,-38],[6,-26],[-5,-70],[-3,-59],[7,-11],[19,-23],[8,11],[2,-64],[-21,1],[-11,32],[-10,25],[-22,9],[-6,31],[-17,-19],[-22,8],[-10,27],[-17,6],[-13,-2],[-2,19],[-9,1]],[[5342,4697],[-4,18]],[[5360,4775],[8,-6],[9,23],[15,-1],[2,-17],[11,-10],[16,37],[16,29],[7,19],[-1,48],[12,58],[13,30],[18,29],[3,18],[1,22],[5,21],[-2,33],[4,52],[5,37],[8,32],[2,36]],[[5760,5367],[17,-49],[12,-7],[8,10],[12,-4],[16,12],[6,-25],[25,-39]],[[5330,4760],[-22,62]],[[5308,4822],[21,33],[-11,39],[10,15],[19,7],[2,26],[15,-28],[24,-2],[9,27],[3,40],[-3,46],[-13,35],[12,68],[-7,12],[-21,-5],[-7,31],[2,25]],[[2906,5049],[-12,14],[-14,19],[-7,-9],[-24,8],[-7,25],[-5,-1],[-28,34]],[[2809,5139],[-3,18],[10,5],[-1,29],[6,22],[14,4],[12,37],[10,31],[-10,14],[5,34],[-6,54],[6,16],[-4,50],[-12,31]],[[2836,5484],[4,29],[9,-4],[5,17],[-6,35],[3,9]],[[2851,5570],[14,-2],[21,41],[12,6],[0,20],[5,50],[16,27],[17,1],[3,13],[21,-5],[22,30],[11,13],[14,28],[9,-3],[8,-16],[-6,-20]],[[3018,5753],[-18,-10],[-7,-29],[-10,-17],[-8,-22],[-4,-42],[-8,-35],[15,-4],[3,-27],[6,-13],[3,-24],[-4,-22],[1,-12],[7,-5],[7,-20],[36,5],[16,-7],[19,-51],[11,6],[20,-3],[16,7],[10,-10],[-5,-32],[-6,-20],[-2,-42],[5,-40],[8,-17],[1,-13],[-14,-30],[10,-13],[8,-21],[8,-58]],[[3058,4804],[-14,31],[-8,1],[18,61],[-21,27],[-17,-5],[-10,10],[-15,-15],[-21,7],[-16,62],[-13,15],[-9,28],[-19,28],[-7,-5]],[[2695,5543],[-15,14],[-6,12],[4,10],[-1,13],[-8,14],[-11,12],[-10,8],[-1,17],[-8,10],[2,-17],[-5,-14],[-7,17],[-9,5],[-4,12],[1,18],[3,19],[-8,8],[7,12]],[[2619,5713],[4,7],[18,-15],[7,7],[9,-5],[4,-12],[8,-4],[7,13]],[[2676,5704],[7,-32],[11,-24],[13,-25]],[[2707,5623],[-11,-6],[0,-23],[6,-9],[-4,-7],[1,-11],[-2,-12],[-2,-12]],[[2715,6427],[23,-4],[22,0],[26,-21],[11,-21],[26,6],[10,-13],[24,-37],[17,-27],[9,1],[17,-12],[-2,-17],[20,-2],[21,-24],[-3,-14],[-19,-7],[-18,-3],[-19,4],[-40,-5],[18,32],[-11,16],[-18,4],[-9,17],[-7,33],[-16,-2],[-26,16],[-8,12],[-36,10],[-10,11],[11,15],[-28,3],[-20,-31],[-11,-1],[-4,-14],[-14,-7],[-12,6],[15,18],[6,22],[13,13],[14,11],[21,6],[7,6]],[[5909,7133],[2,1],[4,14],[20,-1],[25,18],[-19,-25],[2,-11]],[[5943,7129],[-3,2],[-5,-5],[-4,1],[-2,-2],[0,6],[-2,4],[-6,0],[-7,-5],[-5,3]],[[5943,7129],[1,-5],[-28,-24],[-14,8],[-7,23],[14,2]],[[5377,7945],[-16,25],[-14,15],[-3,25],[-5,17],[21,13],[10,15],[20,11],[7,11],[7,-6],[13,6]],[[5417,8077],[13,-19],[21,-5],[-2,-17],[15,-12],[4,15],[19,-6],[3,-19],[20,-3],[13,-29]],[[5523,7982],[-8,0],[-4,-11],[-7,-3],[-2,-13],[-5,-3],[-1,-5],[-9,-7],[-12,1],[-4,-13]],[[5275,8306],[1,-23],[28,-14],[-1,-21],[29,11],[15,16],[32,-23],[13,-19]],[[5392,8233],[6,-30],[-8,-16],[11,-21],[6,-31],[-2,-21],[12,-37]],[[5207,7871],[3,42],[14,40],[-40,11],[-13,16]],[[5171,7980],[2,26],[-6,13]],[[5171,8059],[-5,62],[17,0],[7,22],[6,54],[-5,20]],[[5191,8217],[6,13],[23,3],[5,-13],[19,29],[-6,22],[-2,34]],[[5236,8305],[21,-8],[18,9]],[[6196,5808],[7,-19],[-1,-24],[-16,-14],[12,-16]],[[6198,5735],[-10,-32]],[[6188,5703],[-7,11],[-6,-5],[-16,1],[0,18],[-2,17],[9,27],[10,26]],[[6176,5798],[12,-5],[8,15]],[[5352,8343],[-17,-48],[-29,33],[-4,25],[41,19],[9,-29]],[[5236,8305],[-11,32],[-1,61],[5,16],[8,17],[24,4],[10,16],[22,17],[-1,-30],[-8,-20],[4,-16],[15,-9],[-7,-22],[-8,6],[-20,-42],[7,-29]],[[3008,6222],[3,10],[22,0],[16,-15],[8,1],[5,-21],[15,1],[-1,-17],[12,-2],[14,-22],[-10,-24],[-14,13],[-12,-3],[-9,3],[-5,-11],[-11,-3],[-4,14],[-10,-8],[-11,-41],[-7,10],[-1,17]],[[3008,6124],[0,16],[-7,17],[7,10],[2,23],[-2,32]],[[5333,6444],[-95,-112],[-81,-117],[-39,-26]],[[5118,6189],[-31,-6],[0,38],[-13,10],[-17,16],[-7,28],[-94,129],[-93,129]],[[4863,6533],[-105,143]],[[4758,6676],[1,11],[0,4]],[[4759,6691],[0,70],[44,44],[28,9],[23,16],[11,29],[32,24],[1,44],[16,5],[13,22],[36,9],[5,23],[-7,13],[-10,62],[-1,36],[-11,38]],[[4939,7135],[27,32],[30,11],[17,24],[27,18],[47,11],[46,4],[14,-8],[26,23],[30,0],[11,-13],[19,3]],[[5233,7240],[-5,-30],[4,-56],[-6,-49],[-18,-33],[3,-45],[23,-35],[0,-14],[17,-24],[12,-106]],[[5263,6848],[9,-52],[1,-28],[-5,-48],[2,-27],[-3,-32],[2,-37],[-11,-25],[17,-43],[1,-25],[10,-33],[13,11],[22,-28],[12,-37]],[[2769,4856],[15,45],[-6,25],[-11,-27],[-16,26],[5,16],[-4,54],[9,9],[5,37],[11,38],[-2,24],[15,13],[19,23]],[[2906,5049],[4,-45],[-9,-39],[-30,-62],[-33,-23],[-17,-51],[-6,-40],[-15,-24],[-12,29],[-11,7],[-12,-5],[-1,22],[8,14],[-3,24]],[[5969,6800],[-7,-23],[-6,-45],[-8,-31],[-6,-10],[-10,19],[-12,26],[-20,85],[-3,-5],[12,-63],[17,-59],[21,-92],[10,-32],[9,-34],[25,-65],[-6,-10],[1,-39],[33,-53],[4,-12]],[[6023,6357],[-110,0],[-107,0],[-112,0]],[[5694,6357],[0,218],[0,210],[-8,47],[7,37],[-5,25],[10,29]],[[5698,6923],[37,0],[27,-15],[28,-18],[13,-9],[21,19],[11,17],[25,5],[20,-8],[7,-29],[7,19],[22,-14],[22,-3],[13,15]],[[5951,6902],[18,-102]],[[6176,5798],[-10,20],[-11,34],[-12,19],[-8,21],[-24,23],[-19,1],[-7,12],[-16,-14],[-17,27],[-8,-44],[-33,13]],[[6011,5910],[-3,23],[12,87],[3,39],[9,18],[20,10],[14,34]],[[6066,6121],[16,-69],[8,-54],[15,-29],[38,-55],[16,-34],[15,-34],[8,-20],[14,-18]],[[4749,7532],[1,42],[-11,25],[39,43],[34,-11],[37,1],[30,-10],[23,3],[45,-2]],[[4947,7623],[11,-23],[51,-27],[10,13],[31,-27],[32,8]],[[5082,7567],[2,-35],[-26,-39],[-36,-12],[-2,-20],[-18,-33],[-10,-48],[11,-34],[-16,-26],[-6,-39],[-21,-11],[-20,-46],[-35,-1],[-27,1],[-17,-21],[-11,-22],[-13,5],[-11,20],[-8,34],[-26,9]],[[4792,7249],[-2,20],[10,22],[4,16],[-9,17],[7,39],[-11,36],[12,5],[1,27],[5,9],[0,46],[13,16],[-8,30],[-16,2],[-5,-8],[-16,0],[-7,29],[-11,-8],[-10,-15]],[[5675,8472],[3,35],[-10,-8],[-18,21],[-2,34],[35,17],[35,8],[30,-10],[29,2]],[[5777,8571],[4,-10],[-20,-34],[8,-55],[-12,-19]],[[5757,8453],[-22,0],[-24,22],[-13,7],[-23,-10]],[[6188,5703],[-6,-21],[10,-32],[10,-29],[11,-21],[90,-70],[24,0]],[[6327,5530],[-79,-177],[-36,-3],[-25,-41],[-17,-1],[-8,-19]],[[6162,5289],[-19,0],[-11,20],[-26,-25],[-8,-24],[-18,4],[-6,7],[-7,-1],[-9,0],[-35,50],[-19,0],[-10,20],[0,33],[-14,10]],[[5980,5383],[-17,64],[-12,14],[-5,23],[-14,29],[-17,4],[9,34],[15,2],[4,18]],[[5943,5571],[0,53]],[[5943,5624],[8,62],[13,16],[3,24],[12,45],[17,30],[11,58],[4,51]],[[5794,9138],[-4,-42],[42,-39],[-26,-45],[33,-67],[-19,-51],[25,-43],[-11,-39],[41,-40],[-11,-31],[-25,-34],[-60,-75]],[[5779,8632],[-50,-5],[-49,-21],[-45,-13],[-16,32],[-27,20],[6,58],[-14,53],[14,35],[25,37],[63,64],[19,12],[-3,25],[-39,28]],[[5663,8957],[-9,23],[-1,91],[-43,40],[-37,29]],[[5573,9140],[17,16],[30,-32],[37,3],[30,-14],[26,26],[14,44],[43,20],[35,-24],[-11,-41]],[[9954,4033],[9,-17],[-4,-31],[-17,-8],[-16,7],[-2,26],[10,21],[13,-8],[7,10]],[[0,4079],[9981,-14],[-17,-13],[-4,23],[14,12],[9,3],[-9983,18]],[[0,4108],[0,-29]],[[0,4108],[6,3],[-4,-28],[-2,-4]],[[3300,1994],[33,36],[24,-15],[16,24],[22,-27],[-8,-21],[-37,-17],[-13,20],[-23,-26],[-14,26]],[[5265,7548],[-9,-46],[-13,12],[-6,40],[5,22],[18,22],[5,-50]],[[5157,7984],[6,-6],[8,2]],[[5190,7775],[-2,-17],[9,-22],[-10,-18],[7,-46],[15,-8],[-3,-25]],[[5206,7639],[-25,-34],[-55,16],[-40,-19],[-4,-35]],[[4947,7623],[14,35],[5,118],[-28,62],[-21,30],[-42,23],[-3,43],[36,12],[47,-15],[-9,67],[26,-25],[65,46],[8,48],[24,12]],[[3485,5194],[7,25],[3,27]],[[3495,5246],[4,26],[-10,34]],[[3489,5306],[-3,41],[15,51]],[[3501,5398],[9,-7],[21,-14],[29,-50],[5,-24]],[[5308,4822],[-29,60],[-18,49],[-17,61],[1,19],[6,19],[7,43],[5,44]],[[5263,5117],[10,4],[40,-1],[0,71]],[[4827,8240],[-21,12],[-17,-1],[6,32],[-6,32]],[[4789,8315],[23,2],[30,-37],[-15,-40]],[[4916,8521],[-30,-63],[29,8],[30,-1],[-7,-48],[-25,-53],[29,-4],[2,-6],[25,-69],[19,-10],[17,-67],[8,-24],[33,-11],[-3,-38],[-14,-17],[11,-30],[-25,-31],[-37,0],[-48,-16],[-13,12],[-18,-28],[-26,7],[-19,-23],[-15,12],[41,62],[25,13],[-1,0],[-43,9],[-8,24],[29,18],[-15,32],[5,39],[42,-6],[4,35],[-19,36],[0,1],[-34,10],[-7,16],[10,27],[-9,16],[-15,-28],[-1,57],[-14,30],[10,61],[21,48],[23,-4],[33,4]],[[6154,7511],[4,26],[-7,40],[-16,22],[-16,6],[-10,19]],[[6109,7624],[4,6],[23,-10],[41,-9],[38,-28],[5,-11],[17,9],[25,-13],[9,-24],[17,-13]],[[6210,7485],[-27,29],[-29,-3]],[[5029,5408],[-44,-35],[-15,-20],[-25,-17],[-25,17]],[[5e3,5708],[-2,-18],[12,-30],[0,-43],[2,-47],[7,-21],[-6,-54],[2,-29],[8,-37],[6,-21]],[[4765,5512],[-8,1],[-5,-24],[-8,1],[-6,12],[2,24],[-11,36],[-8,-7],[-6,-1]],[[4715,5554],[-7,-3],[0,21],[-4,16],[0,17],[-6,25],[-7,21],[-23,0],[-6,-11],[-8,-1],[-4,-13],[-4,-17],[-14,-26]],[[4632,5583],[-13,35],[-10,24],[-8,7],[-6,12],[-4,26],[-4,13],[-8,10]],[[4579,5710],[13,29],[8,-2],[7,10],[6,0],[5,8],[-3,20],[3,6],[1,20]],[[4619,5801],[13,-1],[20,-14],[6,1],[3,7],[15,-5],[4,4]],[[4680,5793],[1,-22],[5,0],[7,8],[5,-2],[7,-15],[12,-5],[8,13],[9,8],[6,8],[6,-1],[6,-13],[3,-17],[12,-24],[-6,-16],[-1,-19],[6,6],[3,-7],[-1,-17],[8,-18]],[[4532,5834],[3,27]],[[4535,5861],[31,1],[6,14],[9,1],[11,-14],[8,-1],[9,10],[6,-17],[-12,-13],[-12,1],[-12,13],[-10,-14],[-5,-1],[-7,-8],[-25,1]],[[4579,5710],[-15,24],[-11,4],[-7,17],[1,9],[-9,13],[-2,12]],[[4536,5789],[15,10],[9,-2],[8,7],[51,-3]],[[5263,5117],[-5,9],[10,66]],[[5658,7167],[15,-20],[22,3],[20,-4],[0,-10],[15,7],[-4,-18],[-40,-5],[1,10],[-34,12],[5,25]],[[5723,7469],[-17,2],[-14,6],[-34,-16],[19,-33],[-14,-10],[-15,0],[-15,31],[-5,-13],[6,-36],[14,-27],[-10,-13],[15,-27],[14,-18],[0,-33],[-25,16],[8,-30],[-18,-7],[11,-52],[-19,-1],[-23,26],[-10,47],[-5,40],[-11,27],[-14,34],[-2,16]],[[5583,7470],[18,6],[11,13],[15,-2],[5,11],[5,2]],[[5725,7529],[13,-16],[-8,-37],[-7,-7]],[[3701,9939],[93,35],[97,-2],[36,21],[98,6],[222,-7],[174,-47],[-52,-23],[-106,-3],[-150,-5],[14,-11],[99,7],[83,-21],[54,18],[23,-21],[-30,-34],[71,22],[135,23],[83,-12],[15,-25],[-113,-42],[-16,-14],[-88,-10],[64,-3],[-32,-43],[-23,-38],[1,-66],[33,-38],[-43,-3],[-46,-19],[52,-31],[6,-50],[-30,-6],[36,-50],[-61,-5],[32,-24],[-9,-20],[-39,-10],[-39,0],[35,-40],[0,-26],[-55,24],[-14,-15],[37,-15],[37,-36],[10,-48],[-49,-11],[-22,22],[-34,34],[10,-40],[-33,-31],[73,-2],[39,-3],[-75,-52],[-75,-46],[-81,-21],[-31,0],[-29,-23],[-38,-62],[-60,-42],[-19,-2],[-37,-15],[-40,-13],[-24,-37],[0,-41],[-15,-39],[-45,-47],[11,-47],[-12,-48],[-14,-58],[-39,-4],[-41,49],[-56,0],[-27,32],[-18,58],[-49,73],[-14,39],[-3,53],[-39,54],[10,44],[-18,21],[27,69],[42,22],[11,25],[6,46],[-32,-21],[-15,-9],[-25,-8],[-34,19],[-2,40],[11,31],[25,1],[57,-15],[-48,37],[-24,20],[-28,-8],[-23,15],[31,55],[-17,22],[-22,41],[-34,62],[-35,23],[0,25],[-74,34],[-59,5],[-74,-3],[-68,-4],[-32,19],[-49,37],[73,19],[56,3],[-119,15],[-62,24],[3,23],[106,28],[101,29],[11,21],[-75,22],[24,23],[97,41],[40,7],[-12,26],[66,16],[86,9],[85,1],[30,-19],[74,33],[66,-22],[39,-5],[58,-19],[-66,32],[4,25]],[[2497,5869],[-14,10],[-17,1],[-13,12],[-15,24]],[[2438,5916],[1,18],[3,13],[-4,12],[13,48],[36,0],[1,20],[-5,4],[-3,12],[-10,14],[-11,20],[13,0],[0,33],[26,0],[26,0]],[[2529,5996],[10,-11],[2,9],[8,-7]],[[2549,5987],[-13,-23],[-13,-16],[-2,-12],[2,-11],[-5,-15]],[[2518,5910],[-7,-4],[2,-7],[-6,-6],[-9,-15],[-1,-9]],[[3340,5552],[18,-22],[17,-38],[1,-31],[10,-1],[15,-29],[11,-21]],[[3412,5410],[-4,-53],[-17,-15],[1,-14],[-5,-31],[13,-42],[9,-1],[3,-33],[17,-51]],[[3313,5365],[-19,45],[7,16],[0,27],[17,10],[7,11],[-10,22],[3,21],[22,35]],[[2574,5825],[-5,18],[-8,5]],[[2561,5848],[2,24],[-4,6],[-6,4],[-12,-7],[-1,8],[-8,10],[-6,12],[-8,5]],[[2549,5987],[3,-3],[6,11],[8,1],[3,-5],[4,3],[13,-6],[13,2],[9,6],[3,7],[9,-3],[6,-4],[8,1],[5,5],[13,-8],[4,-1],[9,-11],[8,-13],[10,-9],[7,-17]],[[2690,5943],[-9,2],[-4,-8],[-10,-8],[-7,0],[-6,-8],[-6,3],[-4,9],[-3,-2],[-4,-14],[-3,1],[0,-12],[-10,-17],[-5,-7],[-3,-7],[-8,12],[-6,-16],[-6,1],[-6,-2],[0,-29],[-4,0],[-3,-14],[-9,-2]],[[5522,7770],[7,-23],[9,-17],[-11,-22]],[[5515,7577],[-3,-10]],[[5512,7567],[-26,22],[-16,21],[-26,18],[-23,43],[6,5],[-13,25],[-1,19],[-17,10],[-9,-26],[-8,20],[0,21],[1,1]],[[5380,7746],[20,-2],[5,9],[9,-9],[11,-1],[0,16],[10,6],[2,24],[23,16]],[[5460,7805],[8,-7],[21,-26],[23,-11],[10,9]],[[3008,6124],[-19,10],[-13,-5],[-17,5],[-13,-11],[-15,18],[3,19],[25,-8],[21,-5],[10,13],[-12,26],[0,23],[-18,9],[7,16],[17,-3],[24,-9]],[[5471,7900],[14,-15],[10,-6],[24,7],[2,12],[11,2],[14,9],[3,-4],[13,8],[6,13],[9,4],[30,-18],[6,6]],[[5613,7918],[15,-16],[2,-16]],[[5630,7886],[-17,-12],[-13,-40],[-17,-40],[-22,-11]],[[5561,7783],[-17,2],[-22,-15]],[[5460,7805],[-6,20],[-4,0]],[[8352,4453],[-11,-2],[-37,42],[26,11],[14,-18],[10,-17],[-2,-16]],[[8471,4532],[2,-11],[1,-18]],[[8474,4503],[-18,-45],[-24,-13],[-3,8],[2,20],[12,36],[28,23]],[[8274,4579],[10,-16],[17,5],[7,-25],[-32,-12],[-19,-8],[-15,1],[10,34],[15,0],[7,21]],[[8413,4579],[-4,-32],[-42,-17],[-37,7],[0,22],[22,12],[18,-18],[18,5],[25,21]],[[8017,4657],[53,-6],[6,25],[51,-29],[10,-38],[42,-11],[34,-35],[-31,-23],[-31,24],[-25,-1],[-29,4],[-26,11],[-32,22],[-21,6],[-11,-7],[-51,24],[-5,25],[-25,5],[19,56],[34,-3],[22,-23],[12,-5],[4,-21]],[[8741,4690],[-14,-40],[-3,45],[5,21],[6,20],[7,-17],[-1,-29]],[[8534,4853],[-11,-19],[-19,10],[-5,26],[28,3],[7,-20]],[[8623,4875],[10,-45],[-23,24],[-23,5],[-16,-4],[-19,2],[6,33],[35,2],[30,-17]],[[8916,4904],[0,-193],[1,-192]],[[8917,4519],[-25,48],[-28,12],[-7,-17],[-35,-1],[12,48],[17,16],[-7,64],[-14,50],[-53,50],[-23,5],[-42,54],[-8,-28],[-11,-5],[-6,21],[0,26],[-21,29],[29,21],[20,-1],[-2,16],[-41,0],[-11,35],[-25,11],[-11,29],[37,14],[14,20],[45,-25],[4,-22],[8,-95],[29,-35],[23,62],[32,36],[25,0],[23,-21],[21,-21],[30,-11]],[[8478,5141],[-22,-58],[-21,-12],[-27,12],[-46,-3],[-24,-8],[-4,-45],[24,-53],[15,27],[52,20],[-2,-27],[-12,9],[-12,-35],[-25,-23],[27,-76],[-5,-20],[25,-68],[-1,-39],[-14,-17],[-11,20],[13,49],[-27,-23],[-7,16],[3,23],[-20,35],[3,57],[-19,-18],[2,-69],[1,-84],[-17,-9],[-12,18],[8,54],[-4,57],[-12,1],[-9,40],[12,39],[4,47],[14,89],[5,24],[24,44],[22,-18],[35,-8],[32,3],[27,43],[5,-14]],[[8574,5124],[-2,-51],[-14,6],[-4,-36],[11,-32],[-8,-7],[-11,38],[-8,75],[6,47],[9,22],[2,-32],[16,-5],[3,-25]],[[8045,5176],[5,-39],[19,-34],[18,12],[18,-4],[16,30],[13,5],[26,-17],[23,13],[14,82],[11,21],[10,67],[32,0],[24,-10]],[[8274,5302],[-16,-53],[20,-56],[-5,-28],[32,-54],[-33,-7],[-10,-40],[2,-54],[-27,-40],[-1,-59],[-10,-91],[-5,21],[-31,-26],[-11,36],[-20,3],[-14,19],[-33,-21],[-10,29],[-18,-4],[-23,7],[-4,79],[-14,17],[-13,50],[-4,52],[3,55],[16,39]],[[7939,4712],[-31,-1],[-24,49],[-35,48],[-12,36],[-21,48],[-14,44],[-21,83],[-24,49],[-9,51],[-10,46],[-25,37],[-14,51],[-21,33],[-29,65],[-3,30],[18,-2],[43,-12],[25,-57],[21,-40],[16,-25],[26,-63],[28,-1],[23,-41],[16,-49],[22,-27],[-12,-49],[16,-20],[10,-2],[5,-41],[10,-33],[20,-5],[14,-37],[-7,-74],[-1,-91]],[[7252,6841],[-17,-27],[-11,-55],[27,-23],[26,-29],[36,-33],[38,-8],[16,-30],[22,-5],[33,-14],[23,1],[4,23],[-4,38],[2,25]],[[7703,6727],[2,-22],[-10,-11],[2,-36],[-19,10],[-36,-41],[0,-33],[-15,-50],[-1,-29],[-13,-48],[-21,13],[-1,-61],[-7,-20],[3,-25],[-14,-14]],[[7472,6360],[-4,-21],[-19,1],[-34,-13],[2,-44],[-15,-35],[-40,-40],[-31,-69],[-21,-38],[-28,-38],[0,-27],[-13,-15],[-26,-21],[-12,-3],[-9,-45],[6,-77],[1,-49],[-11,-56],[0,-101],[-15,-2],[-12,-46],[8,-19],[-25,-17],[-10,-40],[-11,-17],[-26,55],[-13,83],[-11,60],[-9,28],[-15,56],[-7,74],[-5,37],[-25,81],[-12,115],[-8,75],[0,72],[-5,55],[-41,-35],[-19,7],[-36,71],[13,22],[-8,23],[-33,50]],[[6893,6457],[19,40],[61,-1],[-6,51],[-15,30],[-4,46],[-18,26],[31,62],[32,-4],[29,61],[18,60],[27,60],[-1,42],[24,34],[-23,29],[-9,40],[-10,52],[14,25],[42,-14],[31,9],[26,49]],[[4827,8240],[5,-42],[-21,-53],[-49,-35],[-40,9],[23,62],[-15,60],[38,46],[21,28]],[[6497,7255],[25,12],[19,33],[19,-1],[12,11],[20,-6],[31,-30],[22,-6],[31,-53],[21,-2],[3,-49]],[[6690,6820],[14,-31],[11,-36],[27,-26],[1,-52],[13,-10],[2,-27],[-40,-30],[-10,-69]],[[6708,6539],[-53,18],[-30,13],[-31,8],[-12,73],[-13,10],[-22,-11],[-28,-28],[-34,20],[-28,45],[-27,17],[-18,56],[-21,79],[-15,-10],[-17,20],[-11,-24]],[[6348,6825],[-15,32],[0,31],[-9,0],[5,43],[-15,45],[-34,32],[-19,56],[6,46],[14,21],[-2,34],[-18,18],[-18,70]],[[6243,7253],[-15,48],[5,18],[-8,68],[19,17]],[[6357,7321],[9,-43],[26,-13],[20,-29],[39,-10],[44,15],[2,14]],[[6348,6825],[-16,3]],[[6332,6828],[-19,5],[-20,-56]],[[6293,6777],[-52,4],[-78,119],[-41,41],[-34,16]],[[6088,6957],[-11,72]],[[6077,7029],[61,62],[11,71],[-3,43],[16,15],[14,37]],[[6176,7257],[12,9],[32,-8],[10,-15],[13,10]],[[4597,8984],[-7,-39],[31,-40],[-36,-45],[-80,-41],[-24,-10],[-36,8],[-78,19],[28,26],[-61,29],[49,12],[-1,17],[-58,14],[19,38],[42,9],[43,-40],[42,32],[35,-17],[45,32],[47,-4]],[[5992,6990],[-5,-19]],[[5987,6971],[-10,8],[-6,-39],[7,-7],[-7,-8],[-1,-15],[13,8]],[[5983,6918],[0,-23],[-14,-95]],[[5951,6902],[8,19],[-2,4],[8,27],[5,45],[4,15],[1,0]],[[5975,7012],[9,0],[3,11],[7,0]],[[5994,7023],[1,-24],[-4,-9],[1,0]],[[5431,7316],[-10,-46],[4,-19],[-6,-30],[-21,22],[-14,7],[-39,30],[4,30],[32,-6],[28,7],[22,5]],[[5255,7492],[17,-42],[-4,-78],[-13,4],[-11,-20],[-10,16],[-2,71],[-6,34],[15,-3],[14,18]],[[5383,7805],[-3,-29],[7,-25]],[[5387,7751],[-22,8],[-23,-20],[1,-30],[-3,-17],[9,-30],[26,-29],[14,-49],[31,-48],[22,0],[7,-13],[-8,-11],[25,-22],[20,-18],[24,-30],[3,-11],[-5,-22],[-16,28],[-24,10],[-12,-39],[20,-21],[-3,-31],[-11,-4],[-15,-50],[-12,-5],[0,18],[6,32],[6,12],[-11,35],[-8,29],[-12,8],[-8,25],[-18,11],[-12,24],[-21,4],[-21,26],[-26,39],[-19,34],[-8,58],[-14,7],[-23,20],[-12,-8],[-16,-28],[-12,-4]],[[2845,6150],[19,-5],[14,-15],[5,-16],[-19,-1],[-9,-10],[-15,10],[-16,21],[3,14],[12,4],[6,-2]],[[5992,6990],[31,-24],[54,63]],[[6088,6957],[-5,-8],[-56,-30],[28,-59],[-9,-10],[-5,-20],[-21,-8],[-7,-21],[-12,-19],[-31,10]],[[5970,6792],[-1,8]],[[5983,6918],[4,17],[0,36]],[[8739,7075],[4,-20],[-16,-36],[-11,19],[-15,-14],[-7,-34],[-18,16],[0,28],[15,36],[16,-7],[12,25],[20,-13]],[[8915,7252],[-10,-47],[4,-30],[-14,-42],[-35,-27],[-49,-4],[-40,-67],[-19,22],[-1,44],[-48,-13],[-33,-27],[-32,-2],[28,-43],[-19,-101],[-18,-24],[-13,23],[7,53],[-18,17],[-11,41],[26,18],[15,37],[28,30],[20,41],[55,17],[30,-12],[29,105],[19,-28],[40,59],[16,23],[18,72],[-5,67],[11,37],[30,11],[15,-82],[-1,-48],[-25,-59],[0,-61]],[[8997,7667],[19,-12],[20,25],[6,-67],[-41,-16],[-25,-59],[-43,41],[-15,-65],[-31,-1],[-4,59],[14,46],[29,3],[8,82],[9,46],[32,-62],[22,-20]],[[6970,7554],[-15,-10],[-37,-42],[-12,-42],[-11,0],[-7,28],[-36,2],[-5,48],[-14,0],[2,60],[-33,43],[-48,-5],[-32,-8],[-27,53],[-22,22],[-43,43],[-6,5],[-71,-35],[1,-218]],[[6554,7498],[-14,-3],[-20,46],[-18,17],[-32,-12],[-12,-20]],[[6458,7526],[-2,14],[7,25],[-5,21],[-32,20],[-13,53],[-15,15],[-1,19],[27,-6],[1,44],[23,9],[25,-9],[5,58],[-5,36],[-28,-2],[-24,14],[-32,-26],[-26,-12]],[[6363,7799],[-14,9],[3,31],[-18,39],[-20,-2],[-24,40],[16,45],[-8,12],[22,65],[29,-34],[3,43],[58,64],[43,2],[61,-41],[33,-24],[30,25],[44,1],[35,-30],[8,17],[39,-2],[7,28],[-45,40],[27,29],[-5,16],[26,15],[-20,41],[13,20],[104,21],[13,14],[70,22],[25,24],[50,-12],[9,-61],[29,14],[35,-20],[-2,-32],[27,3],[69,56],[-10,-19],[35,-46],[62,-150],[15,31],[39,-34],[39,16],[16,-11],[13,-34],[20,-12],[11,-25],[36,8],[15,-36]],[[7229,7559],[-17,9],[-14,21],[-42,6],[-46,2],[-10,-6],[-39,24],[-16,-12],[-4,-35],[-46,21],[-18,-9],[-7,-26]],[[6155,4958],[-20,-24],[-7,-24],[-10,-4],[-4,-42],[-9,-24],[-5,-39],[-12,-20]],[[6088,4781],[-40,59],[-1,35],[-101,120],[-5,6]],[[5941,5001],[0,63],[8,24],[14,39],[10,43],[-13,68],[-3,30],[-13,41]],[[5944,5309],[17,35],[19,39]],[[6162,5289],[-24,-67],[0,-215],[17,-49]],[[7046,7387],[-53,-9],[-34,19],[-30,-4],[3,34],[30,-10],[10,18]],[[6972,7435],[21,-6],[36,43],[-33,31],[-20,-15],[-21,22],[24,39],[-9,5]],[[7849,5777],[-7,72],[18,49],[36,11],[26,-8]],[[7922,5901],[23,-23],[12,40],[25,-21]],[[7982,5897],[6,-40],[-3,-71],[-47,-45],[13,-36],[-30,-4],[-24,-24]],[[7897,5677],[-23,9],[-11,30],[-14,61]],[[8564,7339],[24,-70],[7,-38],[0,-68],[-10,-33],[-25,-11],[-22,-25],[-25,-5],[-3,32],[5,45],[-13,61],[21,10],[-19,51]],[[8504,7288],[2,5],[12,-2],[11,27],[20,2],[11,4],[4,15]],[[5557,7574],[5,13]],[[5562,7587],[7,4],[4,20],[5,3],[4,-8],[5,-4],[3,-10],[5,-2],[5,-11],[4,0],[-3,-14],[-3,-7],[1,-5]],[[5599,7553],[-6,-2],[-17,-9],[-1,-12],[-4,0]],[[6332,6828],[6,-26],[-3,-13],[9,-45]],[[6344,6744],[-19,-1],[-7,28],[-25,6]],[[7922,5901],[9,26],[1,50],[-22,52],[-2,58],[-21,48],[-21,4],[-6,-20],[-16,-2],[-8,10],[-30,-35],[0,53],[7,62],[-19,3],[-2,36],[-12,18]],[[7780,6264],[6,21],[24,39]],[[7837,6385],[17,-47],[12,-54],[34,0],[11,-52],[-18,-15],[-8,-21],[34,-36],[23,-70],[17,-52],[21,-41],[7,-41],[-5,-59]],[[5975,7012],[10,49],[14,41],[0,2]],[[5999,7104],[13,-3],[4,-23],[-15,-22],[-7,-33]],[[4785,5315],[-7,0],[-29,28],[-25,45],[-24,32],[-18,38]],[[4682,5458],[6,19],[2,17],[12,33],[13,27]],[[5412,6408],[-20,-22],[-15,33],[-44,25]],[[5263,6848],[13,14],[3,25],[-3,24],[19,23],[8,19],[14,17],[2,45]],[[5319,7015],[32,-20],[12,5],[23,-10],[37,-26],[13,-53],[25,-11],[39,-25],[30,-29],[13,15],[13,27],[-6,45],[9,29],[20,28],[19,8],[37,-12],[10,-27],[10,0],[9,-10],[28,-7],[6,-19]],[[5694,6357],[0,-118],[-32,0],[0,-25]],[[5662,6214],[-111,113],[-111,113],[-28,-32]],[[7271,5502],[-4,-62],[-12,-16],[-24,-14],[-13,47],[-5,85],[13,96],[19,-33],[13,-42],[13,-61]],[[5804,3347],[10,-18],[-9,-29],[-4,-19],[-16,-9],[-5,-19],[-10,-6],[-21,46],[15,37],[15,23],[13,12],[12,-18]],[[5631,8267],[-2,15],[3,16],[-13,10],[-29,10]],[[5590,8318],[-6,50]],[[5584,8368],[32,18],[47,-4],[27,6],[4,-12],[15,-4],[26,-29]],[[5652,8242],[-7,19],[-14,6]],[[5584,8368],[1,44],[14,37],[26,20],[22,-44],[22,1],[6,46]],[[5757,8453],[14,-14],[2,-28],[9,-35]],[[4759,6691],[-4,0],[0,-31],[-17,-2],[-9,-14],[-13,0],[-10,8],[-23,-6],[-9,-46],[-9,-5],[-13,-74],[-38,-64],[-9,-81],[-12,-27],[-3,-21],[-63,-5]],[[4527,6323],[1,27],[11,17],[9,30],[-2,20],[10,42],[15,38],[9,9],[8,35],[0,31],[10,37],[19,21],[18,60],[0,1],[14,23],[26,6],[22,41],[14,16],[23,49],[-7,73],[10,51],[4,31],[18,40],[28,27],[21,25],[18,61],[9,36],[20,0],[17,-25],[26,4],[29,-13],[12,-1]],[[5739,7906],[6,9],[19,6],[20,-19],[12,-2],[12,-16],[-2,-20],[11,-9],[4,-25],[9,-15],[-2,-9],[5,-6],[-7,-4],[-16,1],[-3,9],[-6,-5],[2,-11],[-7,-19],[-5,-20],[-7,-6]],[[5784,7745],[-5,27],[3,25],[-1,26],[-16,35],[-9,25],[-9,17],[-8,6]],[[6376,4321],[7,-25],[7,-39],[4,-71],[7,-28],[-2,-28],[-5,-18],[-10,35],[-5,-18],[5,-43],[-2,-25],[-8,-14],[-1,-50],[-11,-69],[-14,-81],[-17,-112],[-11,-82],[-12,-69],[-23,-14],[-24,-25],[-16,15],[-22,21],[-8,31],[-2,53],[-10,47],[-2,42],[5,43],[13,10],[0,20],[13,45],[2,37],[-6,28],[-5,38],[-2,54],[9,33],[4,38],[14,2],[15,12],[11,10],[12,1],[16,34],[23,36],[8,30],[-4,25],[12,-7],[15,41],[1,36],[9,26],[10,-25]],[[2301,6586],[-10,-52],[-5,-43],[-2,-79],[-3,-29],[5,-32],[9,-29],[5,-45],[19,-44],[6,-34],[11,-29],[29,-16],[12,-25],[24,17],[21,6],[21,11],[18,10],[17,24],[7,34],[2,50],[5,17],[19,16],[29,13],[25,-2],[17,5],[6,-12],[-1,-29],[-15,-35],[-6,-36],[5,-10],[-4,-26],[-7,-46],[-7,15],[-6,-1]],[[2438,5916],[-32,64],[-14,19],[-23,16],[-15,-5],[-22,-22],[-14,-6],[-20,16],[-21,11],[-26,27],[-21,8],[-31,28],[-23,28],[-7,16],[-16,3],[-28,19],[-12,27],[-30,34],[-14,37],[-6,29],[9,5],[-3,17],[7,16],[0,20],[-10,27],[-2,23],[-9,30],[-25,59],[-28,46],[-13,37],[-24,24],[-5,14],[4,37],[-14,13],[-17,29],[-7,41],[-14,5],[-17,31],[-13,29],[-1,19],[-15,44],[-10,45],[1,23],[-20,23],[-10,-2],[-15,16],[-5,-24],[5,-28],[2,-45],[10,-24],[21,-41],[4,-14],[4,-4],[4,-20],[5,1],[6,-38],[8,-15],[6,-21],[17,-30],[10,-55],[8,-26],[8,-28],[1,-31],[13,-2],[12,-27],[10,-26],[-1,-11],[-12,-21],[-5,0],[-7,36],[-18,33],[-20,29],[-14,15],[1,43],[-5,32],[-13,19],[-19,26],[-4,-8],[-7,16],[-17,14],[-16,34],[2,5],[11,-4],[11,22],[1,27],[-22,42],[-16,17],[-10,36],[-11,39],[-12,47],[-12,54]],[[1746,6980],[32,4],[35,7],[-2,-12],[41,-29],[64,-41],[55,0],[22,0],[0,24],[48,0],[10,-20],[15,-19],[16,-26],[9,-31],[7,-32],[15,-18],[23,-18],[17,47],[23,1],[19,-24],[14,-40],[10,-35],[16,-34],[6,-41],[8,-28],[22,-18],[20,-13],[10,2]],[[5599,7553],[9,4],[13,1]],[[4661,5921],[10,11],[4,35],[9,1],[20,-16],[15,11],[11,-4],[4,13],[112,1],[6,42],[-5,7],[-13,255],[-14,255],[43,1]],[[5118,6189],[0,-136],[-15,-39],[-2,-37],[-25,-9],[-38,-5],[-10,-21],[-18,-3]],[[4680,5793],[1,18],[-2,23],[-11,16],[-5,34],[-2,37]],[[7737,5644],[-3,44],[9,45],[-10,35],[3,65],[-12,30],[-9,71],[-5,75],[-12,49],[-18,-30],[-32,-42],[-15,5],[-17,14],[9,73],[-6,56],[-21,68],[3,21],[-16,7],[-20,49]],[[7780,6264],[-16,-14],[-16,-26],[-20,-2],[-12,-64],[-12,-11],[14,-52],[17,-43],[12,-39],[-11,-51],[-9,-11],[6,-30],[19,-47],[3,-33],[0,-27],[11,-54],[-16,-55],[-13,-61]],[[5538,7532],[-6,4],[-8,19],[-12,12]],[[5533,7629],[8,-10],[4,-9],[9,-6],[10,-12],[-2,-5]],[[7437,7970],[29,10],[53,51],[42,28],[24,-18],[29,-1],[19,-28],[28,-2],[40,-15],[27,41],[-11,35],[28,61],[31,-24],[26,-7],[32,-15],[6,-44],[39,-25],[26,11],[36,7],[27,-7],[28,-29],[16,-30],[26,1],[35,-10],[26,15],[36,9],[41,42],[17,-6],[14,-20],[33,5]],[[5959,4377],[21,5],[34,-17],[7,8],[19,1],[10,18],[17,-1],[30,23],[22,34]],[[6119,4448],[5,-26],[-1,-59],[3,-52],[1,-92],[5,-29],[-8,-43],[-11,-41],[-18,-36],[-25,-23],[-31,-28],[-32,-64],[-10,-11],[-20,-42],[-11,-13],[-3,-42],[14,-45],[5,-35],[0,-17],[5,3],[-1,-58],[-4,-28],[6,-10],[-4,-25],[-11,-21],[-23,-20],[-34,-32],[-12,-21],[3,-25],[7,-4],[-3,-31]],[[5911,3478],[-21,0]],[[5890,3478],[-2,26],[-4,27]],[[5884,3531],[-3,21],[5,66],[-7,42],[-13,83]],[[5866,3743],[29,67],[7,43],[5,5],[3,35],[-5,17],[1,44],[6,41],[0,75],[-15,19],[-13,4],[-6,15],[-13,12],[-23,-1],[-2,22]],[[5840,4141],[-2,42],[84,49]],[[5922,4232],[16,-28],[8,5],[11,-15],[1,-23],[-6,-28],[2,-42],[19,-36],[8,41],[12,12],[-2,76],[-12,43],[-10,19],[-10,-1],[-7,77],[7,45]],[[4661,5921],[-18,41],[-17,43],[-18,16],[-13,17],[-16,-1],[-13,-12],[-14,5],[-10,-19]],[[4542,6011],[-2,32],[8,29],[3,55],[-3,59],[-3,29],[2,30],[-7,28],[-14,25]],[[4526,6298],[6,20],[108,-1],[-5,86],[7,30],[26,5],[-1,152],[91,-4],[0,90]],[[5922,4232],[-15,15],[9,55],[9,21],[-6,49],[6,48],[5,16],[-7,50],[-14,26]],[[5909,4512],[28,-11],[5,-16],[10,-28],[7,-80]],[[7836,5425],[7,-5],[16,-36],[12,-40],[2,-39],[-3,-27],[2,-21],[2,-35],[10,-16],[11,-52],[-1,-20],[-19,-4],[-27,44],[-32,47],[-4,30],[-16,39],[-4,49],[-10,32],[4,43],[-7,25]],[[7779,5439],[5,11],[23,-26],[2,-30],[18,7],[9,24]],[[8045,5176],[21,-20],[21,11],[6,50],[12,11],[33,13],[20,47],[14,37]],[[8206,5379],[22,41],[14,47],[11,0],[14,-30],[1,-26],[19,-16],[23,-18],[-2,-23],[-19,-3],[5,-29],[-20,-20]],[[5453,3369],[-20,45],[-11,43],[-6,58],[-7,42],[-9,91],[-1,71],[-3,32],[-11,25],[-15,48],[-14,71],[-6,37],[-23,58],[-2,45]],[[5644,4022],[23,14],[18,-4],[11,-13],[0,-5]],[[5552,3594],[0,-218],[-25,-30],[-15,-4],[-17,11],[-13,4],[-4,25],[-11,17],[-14,-30]],[[9604,3812],[23,-36],[14,-28],[-10,-14],[-16,16],[-19,27],[-18,31],[-19,42],[-4,20],[12,-1],[16,-20],[12,-20],[9,-17]],[[5412,6408],[7,-92],[10,-15],[1,-19],[11,-20],[-6,-25],[-11,-120],[-1,-77],[-35,-56],[-12,-78],[11,-22],[0,-38],[18,-1],[-3,-28]],[[5393,5795],[-5,-1],[-19,64],[-6,3],[-22,-33],[-21,17],[-15,3],[-8,-8],[-17,2],[-16,-25],[-14,-2],[-34,31],[-13,-15],[-14,1],[-10,23],[-28,22],[-30,-7],[-7,-13],[-4,-34],[-8,-24],[-2,-53]],[[5236,5339],[-29,-21],[-11,3],[-10,-13],[-23,1],[-15,37],[-9,43],[-19,39],[-21,-1],[-25,0]],[[2619,5713],[-10,18],[-13,24],[-6,20],[-12,19],[-13,26],[3,9],[4,-9],[2,5]],[[2690,5943],[-2,-5],[-2,-13],[3,-22],[-6,-20],[-3,-24],[-1,-26],[1,-15],[1,-27],[-4,-6],[-3,-25],[2,-15],[-6,-16],[2,-16],[4,-9]],[[5092,8091],[14,16],[24,87],[38,25],[23,-2]],[[5863,9167],[-47,-24],[-22,-5]],[[5573,9140],[-17,-2],[-4,-39],[-53,9],[-7,-33],[-27,1],[-18,-42],[-28,-66],[-43,-83],[10,-20],[-10,-24],[-27,1],[-18,-55],[2,-79],[17,-29],[-9,-70],[-23,-40],[-12,-34]],[[5306,8535],[-19,36],[-55,-69],[-37,-13],[-38,30],[-10,63],[-9,137],[26,38],[73,49],[55,61],[51,82],[66,115],[47,44],[76,74],[61,26],[46,-3],[42,49],[51,-3],[50,12],[87,-43],[-36,-16],[30,-37]],[[5686,9657],[-62,-24],[-49,13],[19,16],[-16,19],[57,11],[11,-22],[40,-13]],[[5506,9766],[92,-44],[-70,-23],[-15,-44],[-25,-11],[-13,-49],[-34,-2],[-59,36],[25,21],[-42,17],[-54,50],[-21,46],[75,21],[16,-20],[39,0],[11,21],[40,2],[35,-21]],[[5706,9808],[55,-21],[-41,-32],[-81,-7],[-82,10],[-5,16],[-40,1],[-30,27],[86,17],[40,-14],[28,17],[70,-14]],[[9805,2640],[6,-24],[20,24],[8,-25],[0,-25],[-10,-27],[-18,-44],[-14,-24],[10,-28],[-22,-1],[-23,-22],[-8,-39],[-16,-60],[-21,-26],[-14,-17],[-26,1],[-18,20],[-30,4],[-5,22],[15,43],[35,59],[18,11],[20,22],[24,31],[16,31],[13,44],[10,15],[5,33],[19,27],[6,-25]],[[9849,2922],[20,-63],[1,41],[13,-16],[4,-45],[22,-19],[19,-5],[16,22],[14,-6],[-7,-53],[-8,-34],[-22,1],[-7,-18],[3,-25],[-4,-11],[-11,-32],[-14,-41],[-21,-23],[-5,15],[-12,9],[16,48],[-9,33],[-30,23],[1,22],[20,20],[5,46],[-1,38],[-12,40],[1,10],[-13,25],[-22,52],[-12,42],[11,4],[15,-33],[21,-15],[8,-52]],[[6475,6041],[-9,41],[-22,98]],[[6444,6180],[83,59],[19,118],[-13,42]],[[6566,6530],[12,-40],[16,-22],[20,-8],[17,-10],[12,-34],[8,-20],[10,-7],[0,-13],[-10,-36],[-5,-16],[-12,-19],[-10,-41],[-13,3],[-5,-14],[-5,-30],[4,-39],[-3,-7],[-13,0],[-17,-22],[-3,-29],[-6,-12],[-18,0],[-10,-15],[0,-24],[-14,-16],[-15,5],[-19,-19],[-12,-4]],[[6557,6597],[8,20],[3,-5],[-2,-25],[-4,-10]],[[6893,6457],[-20,15],[-9,43],[-21,45],[-51,-12],[-45,-1],[-39,-8]],[[2836,5484],[-9,17],[-6,32],[7,16],[-7,4],[-5,20],[-14,16],[-12,-4],[-6,-20],[-11,-15],[-6,-2],[-3,-13],[13,-32],[-7,-7],[-4,-9],[-13,-3],[-5,35],[-4,-10],[-9,4],[-5,24],[-12,3],[-7,7],[-12,0],[-1,-13],[-3,9]],[[2707,5623],[10,-22],[-1,-12],[11,-3],[3,5],[8,-14],[13,4],[12,15],[17,12],[9,17],[16,-3],[-1,-6],[15,-2],[12,-10],[10,-18],[10,-16]],[[3045,3974],[-28,33],[-2,25],[-55,59],[-50,65],[-22,36],[-11,49],[4,17],[-23,77],[-28,109],[-26,118],[-11,27],[-9,43],[-21,39],[-20,24],[9,26],[-14,57],[9,41],[22,37]],[[8510,5555],[2,-40],[2,-33],[-9,-54],[-11,60],[-13,-30],[9,-43],[-8,-28],[-32,35],[-8,42],[8,28],[-17,28],[-9,-24],[-13,2],[-21,-33],[-4,17],[11,50],[17,17],[15,22],[10,-27],[21,17],[5,26],[19,1],[-1,46],[22,-28],[3,-30],[2,-21]],[[8443,5665],[-10,-20],[-9,-37],[-8,-17],[-17,40],[5,16],[7,17],[3,36],[16,4],[-5,-40],[21,57],[-3,-56]],[[8291,5608],[-37,-56],[14,41],[20,37],[16,41],[15,58],[5,-48],[-18,-33],[-15,-40]],[[8385,5760],[16,-18],[18,0],[0,-25],[-13,-25],[-18,-18],[-1,28],[2,30],[-4,28]],[[8485,5776],[8,-66],[-21,16],[0,-20],[7,-37],[-13,-13],[-1,42],[-9,3],[-4,36],[16,-5],[0,22],[-17,45],[27,-1],[7,-22]],[[8375,5830],[-7,-51],[-12,29],[-15,45],[24,-2],[10,-21]],[[8369,6151],[17,-17],[9,15],[2,-15],[-4,-24],[9,-43],[-7,-49],[-16,-19],[-5,-48],[7,-47],[14,-7],[13,7],[34,-32],[-2,-32],[9,-15],[-3,-27],[-22,29],[-10,31],[-7,-22],[-18,36],[-25,-9],[-14,13],[1,25],[9,15],[-8,13],[-4,-21],[-14,34],[-4,26],[-1,56],[11,-19],[3,92],[9,54],[17,0]],[[9329,4655],[-8,-6],[-12,22],[-12,38],[-6,45],[4,6],[3,-18],[8,-13],[14,-38],[13,-20],[-4,-16]],[[9221,4734],[-15,-5],[-4,-17],[-15,-14],[-15,-14],[-14,0],[-23,18],[-16,16],[2,18],[25,-8],[15,4],[5,29],[4,1],[2,-31],[16,4],[8,20],[16,21],[-4,35],[17,1],[6,-9],[-1,-33],[-9,-36]],[[8916,4904],[48,-41],[51,-34],[19,-30],[16,-30],[4,-34],[46,-37],[7,-31],[-25,-7],[6,-39],[25,-39],[18,-62],[15,2],[-1,-27],[22,-10],[-9,-11],[30,-25],[-3,-17],[-18,-4],[-7,16],[-24,6],[-28,9],[-22,38],[-16,32],[-14,52],[-36,26],[-24,-17],[-17,-20],[4,-43],[-22,-20],[-16,9],[-28,3]],[[9253,4792],[-9,-16],[-5,35],[-6,23],[-13,19],[-16,25],[-20,18],[8,14],[15,-17],[9,-13],[12,-14],[11,-25],[11,-19],[3,-30]],[[5392,8233],[19,18],[43,27],[35,20],[28,-10],[2,-14],[27,-1]],[[5546,8273],[34,-7],[51,1]],[[5653,8105],[14,-52],[-3,-17],[-14,-6],[-25,-50],[7,-26],[-6,3]],[[5626,7957],[-26,23],[-20,-8],[-13,6],[-17,-13],[-14,21],[-11,-8],[-2,4]],[[3159,6151],[14,-5],[5,-12],[-7,-15],[-21,1],[-17,-2],[-1,25],[4,9],[23,-1]],[[8628,7562],[4,-10]],[[8632,7552],[-11,3],[-12,-20],[-8,-20],[1,-42],[-14,-13],[-5,-11],[-11,-17],[-18,-10],[-12,-16],[-1,-25],[-3,-7],[11,-9],[15,-26]],[[8504,7288],[-13,11],[-4,-11],[-8,-5],[-1,11],[-7,5],[-8,10],[8,26],[7,7],[-3,11],[7,31],[-2,10],[-16,7],[-13,15]],[[4792,7249],[-11,-15],[-14,8],[-15,-6],[5,46],[-3,36],[-12,6],[-7,22],[2,39],[11,21],[2,24],[6,36],[-1,25],[-5,21],[-1,20]],[[6411,6520],[-2,43],[7,31],[8,6],[8,-18],[1,-35],[-6,-35]],[[6427,6512],[-8,-4],[-8,12]],[[5630,7886],[12,13],[17,-7],[18,0],[13,-14],[10,9],[20,5],[7,14],[12,0]],[[5784,7745],[12,-11],[13,9],[13,-10]],[[5822,7733],[0,-15],[-13,-13],[-9,6],[-7,-71]],[[5629,7671],[-5,10],[6,10],[-7,7],[-8,-13],[-17,17],[-2,25],[-17,14],[-3,18],[-15,24]],[[8989,8056],[28,-105],[-41,19],[-17,-85],[27,-61],[-1,-41],[-21,36],[-18,-46],[-5,50],[3,57],[-3,64],[6,45],[2,79],[-17,58],[3,80],[25,28],[-11,27],[13,8],[7,-39],[10,-57],[-1,-58],[11,-59]],[[5546,8273],[6,26],[38,19]],[[0,9132],[68,-45],[73,-59],[-3,-37],[19,-15],[-6,43],[75,-8],[55,-56],[-28,-26],[-46,-6],[0,-57],[-11,-13],[-26,2],[-22,21],[-36,17],[-7,26],[-28,9],[-31,-7],[-16,20],[6,22],[-33,-14],[13,-28],[-16,-25]],[[0,8896],[0,236]],[[0,9282],[9999,-40],[-30,-3],[-5,19],[-9964,24]],[[0,9282],[4,3],[23,0],[40,-17],[-2,-8],[-29,-14],[-36,-4],[0,40]],[[8988,9383],[-42,-1],[-57,7],[-5,3],[27,23],[34,6],[40,-23],[3,-15]],[[9186,9493],[-32,-23],[-44,5],[-52,23],[7,20],[51,-9],[70,-16]],[[9029,9522],[-22,-44],[-102,1],[-46,-14],[-55,39],[15,40],[37,11],[73,-2],[100,-31]],[[6598,9235],[-17,-5],[-91,8],[-7,26],[-50,16],[-4,32],[28,13],[-1,32],[55,50],[-25,7],[66,52],[-7,27],[62,31],[91,38],[93,11],[48,22],[54,8],[19,-23],[-19,-19],[-98,-29],[-85,-28],[-86,-57],[-42,-57],[-43,-57],[5,-49],[54,-49]],[[0,8896],[9963,-26],[-36,4],[25,-31],[17,-49],[13,-16],[3,-24],[-7,-16],[-52,13],[-78,-44],[-25,-7],[-42,-42],[-40,-36],[-11,-27],[-39,41],[-73,-46],[-12,22],[-27,-26],[-37,8],[-9,-38],[-33,-58],[1,-24],[31,-13],[-4,-86],[-25,-2],[-12,-49],[11,-26],[-48,-30],[-10,-67],[-41,-15],[-9,-60],[-40,-55],[-10,41],[-12,86],[-15,131],[13,82],[23,35],[2,28],[43,13],[50,75],[47,60],[50,48],[23,83],[-34,-5],[-17,-49],[-70,-65],[-23,73],[-72,-20],[-69,-99],[23,-36],[-62,-16],[-43,-6],[2,43],[-43,9],[-35,-29],[-85,10],[-91,-18],[-90,-115],[-106,-139],[43,-8],[14,-37],[27,-13],[18,30],[30,-4],[40,-65],[1,-50],[-21,-59],[-3,-71],[-12,-94],[-42,-86],[-9,-41],[-38,-69],[-38,-68],[-18,-35],[-37,-34],[-17,-1],[-17,29],[-38,-44],[-4,-19]],[[6363,7799],[-12,-35],[-27,-10],[-28,-61],[25,-56],[-2,-40],[30,-70]],[[6109,7624],[-35,49],[-32,23],[-24,34],[20,10],[23,49],[-15,24],[41,24],[-1,13],[-25,-10]],[[6061,7840],[1,26],[14,17],[27,4],[5,20],[-7,33],[12,30],[-1,18],[-41,19],[-16,-1],[-17,28],[-21,-9],[-35,20],[0,12],[-10,26],[-22,3],[-2,18],[7,12],[-18,33],[-29,-5],[-8,3],[-7,-14],[-11,3]],[[5777,8571],[31,33],[-29,28]],[[5863,9167],[29,20],[46,-35],[76,-14],[105,-67],[21,-28],[2,-40],[-31,-31],[-45,-15],[-124,44],[-21,-7],[45,-43],[2,-28],[2,-60],[36,-18],[22,-15],[3,28],[-17,26],[18,22],[67,-37],[24,15],[-19,43],[65,58],[25,-4],[26,-20],[16,40],[-23,35],[14,36],[-21,36],[78,-18],[16,-34],[-35,-7],[0,-33],[22,-20],[43,13],[7,38],[58,28],[97,50],[20,-3],[-27,-35],[35,-7],[19,21],[52,1],[42,25],[31,-36],[32,39],[-29,35],[14,19],[82,-18],[39,-18],[100,-68],[19,31],[-28,31],[-1,13],[-34,6],[10,28],[-15,46],[-1,19],[51,53],[18,54],[21,11],[74,-15],[5,-33],[-26,-48],[17,-19],[9,-41],[-6,-81],[31,-36],[-12,-40],[-55,-84],[32,-8],[11,21],[31,15],[7,29],[24,29],[-16,33],[13,39],[-31,5],[-6,33],[22,59],[-36,48],[50,40],[-7,42],[14,2],[15,-33],[-11,-57],[29,-11],[-12,43],[46,23],[58,3],[51,-34],[-25,49],[-2,63],[48,12],[67,-2],[60,7],[-23,31],[33,39],[31,2],[54,29],[74,8],[9,16],[73,6],[23,-14],[62,32],[51,-1],[8,25],[26,25],[66,25],[48,-19],[-38,-15],[63,-9],[7,-29],[25,14],[82,-1],[62,-29],[23,-22],[-7,-30],[-31,-18],[-73,-33],[-21,-17],[35,-8],[41,-15],[25,11],[14,-38],[12,15],[44,10],[90,-10],[6,-28],[116,-9],[2,46],[59,-11],[44,1],[45,-32],[13,-37],[-17,-25],[35,-47],[44,-24],[27,62],[44,-26],[48,16],[53,-18],[21,16],[45,-8],[-20,55],[37,25],[251,-38],[24,-35],[72,-45],[112,11],[56,-10],[23,-24],[-4,-44],[35,-16],[37,12],[49,1],[52,-11],[53,6],[49,-52],[34,19],[-23,37],[13,27],[88,-17],[58,4],[80,-29],[-9960,-25]],[[7918,9684],[-157,-23],[51,77],[23,7],[21,-4],[70,-33],[-8,-24]],[[6420,9816],[-37,-8],[-25,-4],[-4,-10],[-33,-10],[-30,14],[16,19],[-62,2],[54,10],[43,1],[5,-16],[16,14],[26,10],[42,-13],[-11,-9]],[[7775,9718],[-60,-8],[-78,17],[-46,23],[-21,42],[-38,12],[72,40],[60,14],[54,-30],[64,-57],[-7,-53]],[[5844,4990],[11,-33],[-1,-35],[-8,-7]],[[5821,4978],[7,-6],[16,18]],[[4526,6298],[1,25]],[[6188,6023],[-4,26],[-8,17],[-2,24],[-15,21],[-15,50],[-7,48],[-20,40],[-12,10],[-18,56],[-4,41],[2,35],[-16,66],[-13,23],[-15,12],[-10,34],[2,13],[-8,31],[-8,13],[-11,44],[-17,48],[-14,40],[-14,0],[5,33],[1,20],[3,24]],[[6344,6744],[11,-51],[14,-13],[5,-21],[18,-25],[2,-24],[-3,-20],[4,-20],[8,-16],[4,-20],[4,-14]],[[6427,6512],[5,-22]],[[6444,6180],[-80,-23],[-26,-26],[-20,-62],[-13,-10],[-7,20],[-11,-3],[-27,6],[-5,5],[-32,-1],[-7,-5],[-12,15],[-7,-29],[3,-25],[-12,-19]],[[5943,5617],[-4,1],[0,29],[-3,20],[-14,24],[-4,42],[4,44],[-13,4],[-2,-13],[-17,-3],[7,-17],[2,-36],[-15,-32],[-14,-43],[-14,-6],[-23,34],[-11,-12],[-3,-17],[-14,-11],[-1,-12],[-28,0],[-3,12],[-20,2],[-10,-10],[-8,5],[-14,34],[-5,17],[-20,-9],[-8,-27],[-7,-53],[-10,-11],[-8,-6]],[[5663,5567],[-2,2]],[[5635,5716],[0,14],[-10,17],[-1,35],[-5,23],[-10,-4],[3,22],[7,25],[-3,24],[9,18],[-6,14],[7,36],[13,44],[24,-4],[-1,234]],[[6023,6357],[9,-58],[-6,-10],[4,-61],[11,-71],[10,-14],[15,-22]],[[5943,5624],[0,-7]],[[5943,5617],[0,-46]],[[5944,5309],[-17,-28],[-20,1],[-22,-14],[-18,13],[-11,-16]],[[5682,5544],[-19,23]],[[4535,5861],[-11,46],[-14,21],[12,11],[14,41],[6,31]],[[4536,5789],[-4,45]],[[9502,4438],[8,-20],[-19,0],[-11,37],[17,-15],[5,-2]],[[9467,4474],[-11,-1],[-17,6],[-5,9],[1,23],[19,-9],[9,-12],[4,-16]],[[9490,4490],[-4,-11],[-21,52],[-5,35],[9,0],[10,-47],[11,-29]],[[9440,4565],[1,-12],[-22,25],[-15,21],[-10,20],[4,6],[13,-14],[23,-27],[6,-19]],[[9375,4623],[-5,-3],[-13,14],[-11,24],[1,10],[17,-25],[11,-20]],[[4682,5458],[-8,5],[-20,24],[-14,31],[-5,22],[-3,43]],[[2561,5848],[-3,-14],[-16,1],[-10,6],[-12,12],[-15,3],[-8,13]],[[6198,5735],[9,-11],[5,-25],[13,-24],[14,-1],[26,16],[30,7],[25,18],[13,4],[10,11],[16,2]],[[6359,5732],[0,-1],[0,-25],[0,-59],[0,-31],[-13,-36],[-19,-50]],[[6359,5732],[9,1],[13,9],[14,6],[14,20],[10,0],[1,-16],[-3,-35],[0,-31],[-6,-21],[-7,-64],[-14,-66],[-17,-75],[-24,-87],[-23,-66],[-33,-81],[-28,-48],[-42,-58],[-25,-45],[-31,-72],[-6,-31],[-6,-14]],[[3412,5410],[34,-11],[2,10],[23,4],[30,-15]],[[3489,5306],[10,-35],[-4,-25]],[[5626,7957],[-8,-15],[-5,-24]],[[5380,7746],[7,5]],[[5663,8957],[-47,-17],[-27,-41],[4,-36],[-44,-48],[-54,-50],[-20,-84],[20,-41],[26,-33],[-25,-67],[-29,-14],[-11,-99],[-15,-55],[-34,6],[-16,-47],[-32,-3],[-9,56],[-23,67],[-21,84]],[[5890,3478],[-5,-26],[-17,-6],[-16,32],[0,20],[7,22],[3,17],[8,5],[14,-11]],[[5999,7104],[-2,45],[7,25]],[[6004,7174],[7,13],[7,13],[2,33],[9,-12],[31,17],[14,-12],[23,1],[32,22],[15,-1],[32,9]],[[5051,5420],[-22,-12]],[[7849,5777],[-25,28],[-24,-2],[4,47],[-24,0],[-2,-65],[-15,-87],[-10,-52],[2,-43],[18,-2],[12,-53],[5,-52],[15,-33],[17,-7],[14,-31]],[[7779,5439],[-11,23],[-4,29],[-15,34],[-14,28],[-4,-35],[-5,33],[3,37],[8,56]],[[6883,7252],[16,60],[-6,44],[-20,14],[7,26],[23,-3],[13,33],[9,38],[37,13],[-6,-27],[4,-17],[12,2]],[[6497,7255],[-5,42],[4,62],[-22,20],[8,40],[-19,4],[6,49],[26,-14],[25,19],[-20,35],[-8,34],[-23,-15],[-3,-43],[-8,38]],[[6554,7498],[31,1],[-4,29],[24,21],[23,34],[37,-31],[3,-47],[11,-12],[30,2],[9,-10],[14,-61],[32,-41],[18,-28],[29,-29],[37,-25],[-1,-36]],[[8471,4532],[3,14],[24,13],[19,2],[9,8],[10,-8],[-10,-16],[-29,-25],[-23,-17]],[[3286,5693],[16,8],[6,-2],[-1,-44],[-23,-7],[-5,6],[8,16],[-1,23]],[[5233,7240],[31,24],[19,-7],[-1,-30],[24,22],[2,-12],[-14,-29],[0,-27],[9,-15],[-3,-51],[-19,-29],[6,-33],[14,-1],[7,-28],[11,-9]],[[6004,7174],[-11,27],[11,22],[-17,-5],[-23,13],[-19,-34],[-43,-6],[-22,31],[-30,2],[-6,-24],[-20,-7],[-26,31],[-31,-1],[-16,59],[-21,33],[14,46],[-18,28],[31,56],[43,3],[12,45],[53,-8],[33,38],[32,17],[46,1],[49,-42],[40,-22],[32,9],[24,-6],[33,31]],[[5777,7539],[3,-23],[25,-19],[-5,-14],[-33,-3],[-12,-19],[-23,-31],[-9,27],[0,12]],[[8382,6499],[-17,-95],[-12,-49],[-14,50],[-4,44],[17,58],[22,45],[13,-18],[-5,-35]],[[6088,4781],[-12,-73],[1,-33],[18,-22],[1,-15],[-8,-36],[2,-18],[-2,-28],[10,-37],[11,-58],[10,-13]],[[5909,4512],[-15,18],[-18,10],[-11,10],[-12,15]],[[5844,4990],[10,8],[31,-1],[56,4]],[[6061,7840],[-22,-5],[-18,-19],[-26,-3],[-24,-22],[1,-37],[14,-14],[28,4],[-5,-21],[-31,-11],[-37,-34],[-16,12],[6,28],[-30,17],[5,12],[26,19],[-8,14],[-43,15],[-2,22],[-25,-8],[-11,-32],[-21,-44]],[[3517,3063],[-12,-38],[-31,-32],[-21,11],[-15,-6],[-26,25],[-18,-1],[-17,32]],[[679,6185],[-4,-10],[-7,8],[1,17],[-4,21],[1,7],[5,10],[-2,11],[1,6],[3,-1],[10,-10],[5,-5],[5,-8],[7,-21],[-1,-3],[-11,-13],[-9,-9]],[[664,6277],[-9,-4],[-5,12],[-3,5],[0,4],[3,5],[9,-6],[8,-9],[-3,-7]],[[646,6309],[-1,-7],[-15,2],[2,7],[14,-2]],[[621,6317],[-2,-3],[-2,1],[-9,2],[-4,13],[-1,2],[7,8],[3,-3],[8,-20]],[[574,6356],[-4,-6],[-9,11],[1,4],[5,6],[6,-1],[1,-14]],[[3135,7724],[5,-19],[-30,-29],[-29,-20],[-29,-18],[-15,-35],[-4,-13],[-1,-31],[10,-32],[11,-1],[-3,21],[8,-13],[-2,-17],[-19,-9],[-13,1],[-20,-10],[-12,-3],[-17,-3],[-23,-17],[41,11],[8,-11],[-39,-18],[-17,0],[0,7],[-8,-16],[8,-3],[-6,-43],[-20,-45],[-2,15],[-6,3],[-9,15],[5,-32],[7,-10],[1,-23],[-9,-23],[-16,-47],[-2,3],[8,40],[-14,22],[-3,49],[-5,-25],[5,-38],[-18,10],[19,-19],[1,-57],[8,-4],[3,-20],[4,-59],[-17,-44],[-29,-18],[-18,-34],[-14,-4],[-14,-22],[-4,-20],[-31,-38],[-16,-28],[-13,-35],[-4,-42],[5,-41],[9,-51],[13,-41],[0,-26],[13,-69],[-1,-39],[-1,-23],[-7,-36],[-8,-8],[-14,7],[-4,26],[-11,14],[-15,51],[-13,45],[-4,23],[6,39],[-8,33],[-22,49],[-10,9],[-28,-27],[-5,3],[-14,28],[-17,14],[-32,-7],[-24,7],[-21,-5],[-12,-9],[5,-15],[0,-24],[5,-12],[-5,-8],[-10,9],[-11,-11],[-20,2],[-20,31],[-25,-8],[-20,14],[-17,-4],[-24,-14],[-25,-44],[-27,-25],[-16,-28],[-6,-27],[0,-41],[1,-28],[5,-20]],[[1746,6980],[-4,30],[-18,34],[-13,7],[-3,17],[-16,3],[-10,16],[-26,6],[-7,9],[-3,32],[-27,60],[-23,82],[1,14],[-13,19],[-21,50],[-4,48],[-15,32],[6,49],[-1,51],[-8,45],[10,56],[4,53],[3,54],[-5,79],[-9,51],[-8,27],[4,12],[40,-20],[15,-56],[7,15],[-5,49],[-9,48]],[[750,8432],[-28,-23],[-14,15],[-4,28],[25,21],[15,9],[18,-4],[12,-18],[-24,-28]],[[401,8597],[-18,-9],[-18,11],[-17,16],[28,10],[22,-6],[3,-22]],[[230,8826],[17,-12],[17,6],[23,-15],[27,-8],[-2,-7],[-21,-12],[-21,13],[-11,11],[-24,-4],[-7,5],[2,23]],[[1374,8295],[-15,22],[-25,19],[-8,52],[-36,47],[-15,56],[-26,4],[-44,2],[-33,17],[-57,61],[-27,11],[-49,21],[-38,-5],[-55,27],[-33,25],[-30,-12],[5,-41],[-15,-4],[-32,-12],[-25,-20],[-30,-13],[-4,35],[12,58],[30,18],[-8,15],[-35,-33],[-19,-39],[-40,-42],[20,-29],[-26,-42],[-30,-25],[-28,-18],[-7,-26],[-43,-31],[-9,-28],[-32,-25],[-20,5],[-25,-17],[-29,-20],[-23,-20],[-47,-16],[-5,9],[31,28],[27,18],[29,33],[35,6],[14,25],[38,35],[6,12],[21,21],[5,44],[14,35],[-32,-18],[-9,11],[-15,-22],[-18,30],[-8,-21],[-10,29],[-28,-23],[-17,0],[-3,35],[5,21],[-17,22],[-37,-12],[-23,28],[-19,14],[0,34],[-22,25],[11,34],[23,33],[10,30],[22,4],[19,-9],[23,28],[20,-5],[21,19],[-5,27],[-16,10],[21,23],[-17,-1],[-30,-13],[-8,-13],[-22,13],[-39,-6],[-41,14],[-12,24],[-35,34],[39,25],[62,29],[23,0],[-4,-30],[59,2],[-23,37],[-34,23],[-20,29],[-26,25],[-38,19],[15,31],[49,2],[35,27],[7,29],[28,28],[28,6],[52,27],[26,-4],[42,31],[42,-12],[21,-27],[12,11],[47,-3],[-2,-14],[43,-10],[28,6],[59,-18],[53,-6],[21,-8],[37,10],[42,-18],[31,-8]],[[3018,5753],[-1,-14],[-16,-7],[9,-26],[0,-31],[-12,-35],[10,-47],[12,4],[6,43],[-8,21],[-2,45],[35,24],[-4,27],[10,19],[10,-41],[19,-1],[18,-33],[1,-20],[25,0],[30,6],[16,-27],[21,-7],[16,18],[0,15],[34,4],[34,1],[-24,-18],[10,-28],[22,-4],[21,-29],[4,-48],[15,2],[11,-14]],[[8001,6331],[-37,-51],[-24,-56],[-6,-41],[22,-62],[25,-77],[26,-37],[17,-47],[12,-109],[-3,-104],[-24,-39],[-31,-38],[-23,-49],[-35,-55],[-10,37],[8,40],[-21,34]],[[9661,4085],[-9,-8],[-9,26],[1,16],[17,-34]],[[9641,4175],[4,-47],[-7,7],[-6,-3],[-4,16],[0,45],[13,-18]],[[6475,6041],[-21,-16],[-5,-26],[-1,-20],[-27,-25],[-45,-28],[-24,-41],[-13,-3],[-8,3],[-16,-25],[-18,-11],[-23,-3],[-7,-3],[-6,-16],[-8,-4],[-4,-15],[-14,1],[-9,-8],[-19,3],[-7,35],[1,32],[-5,17],[-5,44],[-8,24],[5,3],[-2,27],[3,12],[-1,25]],[[5817,3752],[11,0],[14,-10],[9,7],[15,-6]],[[5911,3478],[-7,-43],[-3,-49],[-7,-27],[-19,-30],[-5,-8],[-12,-30],[-8,-31],[-16,-42],[-31,-61],[-20,-36],[-21,-26],[-29,-23],[-14,-3],[-3,-17],[-17,9],[-14,-11],[-30,11],[-17,-7],[-12,3],[-28,-23],[-24,-10],[-17,-22],[-13,-1],[-11,21],[-10,1],[-12,26],[-1,-8],[-4,16],[0,34],[-9,40],[9,11],[0,45],[-19,55],[-14,50],[0,1],[-20,76]],[[5840,4141],[-21,-8],[-15,-23],[-4,-21],[-10,-4],[-24,-49],[-15,-38],[-10,-2],[-9,7],[-31,7]]],
transform:{scale:[.036003600360036005,.016927109510951093],translate:[-180,-85.609038]}},m.prototype.abwTopo="__ABW__",m.prototype.afgTopo="__AFG__",m.prototype.agoTopo="__AGO__",m.prototype.aiaTopo="__AIA__",m.prototype.albTopo="__ALB__",m.prototype.aldTopo="__ALD__",m.prototype.andTopo="__AND__",m.prototype.areTopo="__ARE__",m.prototype.argTopo="__ARG__",m.prototype.armTopo="__ARM__",m.prototype.asmTopo="__ASM__",m.prototype.ataTopo="__ATA__",m.prototype.atcTopo="__ATC__",m.prototype.atfTopo="__ATF__",m.prototype.atgTopo="__ATG__",m.prototype.ausTopo="__AUS__",m.prototype.autTopo="__AUT__",m.prototype.azeTopo="__AZE__",m.prototype.bdiTopo="__BDI__",m.prototype.belTopo="__BEL__",m.prototype.benTopo="__BEN__",m.prototype.bfaTopo="__BFA__",m.prototype.bgdTopo="__BGD__",m.prototype.bgrTopo="__BGR__",m.prototype.bhrTopo="__BHR__",m.prototype.bhsTopo="__BHS__",m.prototype.bihTopo="__BIH__",m.prototype.bjnTopo="__BJN__",m.prototype.blmTopo="__BLM__",m.prototype.blrTopo="__BLR__",m.prototype.blzTopo="__BLZ__",m.prototype.bmuTopo="__BMU__",m.prototype.bolTopo="__BOL__",m.prototype.braTopo="__BRA__",m.prototype.brbTopo="__BRB__",m.prototype.brnTopo="__BRN__",m.prototype.btnTopo="__BTN__",m.prototype.norTopo="__NOR__",m.prototype.bwaTopo="__BWA__",m.prototype.cafTopo="__CAF__",m.prototype.canTopo="__CAN__",m.prototype.cheTopo="__CHE__",m.prototype.chlTopo="__CHL__",m.prototype.chnTopo="__CHN__",m.prototype.civTopo="__CIV__",m.prototype.clpTopo="__CLP__",m.prototype.cmrTopo="__CMR__",m.prototype.codTopo="__COD__",m.prototype.cogTopo="__COG__",m.prototype.cokTopo="__COK__",m.prototype.colTopo="__COL__",m.prototype.comTopo="__COM__",m.prototype.cpvTopo="__CPV__",m.prototype.criTopo="__CRI__",m.prototype.csiTopo="__CSI__",m.prototype.cubTopo="__CUB__",m.prototype.cuwTopo="__CUW__",m.prototype.cymTopo="__CYM__",m.prototype.cynTopo="__CYN__",m.prototype.cypTopo="__CYP__",m.prototype.czeTopo="__CZE__",m.prototype.deuTopo="__DEU__",m.prototype.djiTopo="__DJI__",m.prototype.dmaTopo="__DMA__",m.prototype.dnkTopo="__DNK__",m.prototype.domTopo="__DOM__",m.prototype.dzaTopo="__DZA__",m.prototype.ecuTopo="__ECU__",m.prototype.egyTopo="__EGY__",m.prototype.eriTopo="__ERI__",m.prototype.esbTopo="__ESB__",m.prototype.espTopo="__ESP__",m.prototype.estTopo="__EST__",m.prototype.ethTopo="__ETH__",m.prototype.finTopo="__FIN__",m.prototype.fjiTopo="__FJI__",m.prototype.flkTopo="__FLK__",m.prototype.fraTopo="__FRA__",m.prototype.froTopo="__FRO__",m.prototype.fsmTopo="__FSM__",m.prototype.gabTopo="__GAB__",m.prototype.psxTopo="__PSX__",m.prototype.gbrTopo="__GBR__",m.prototype.geoTopo="__GEO__",m.prototype.ggyTopo="__GGY__",m.prototype.ghaTopo="__GHA__",m.prototype.gibTopo="__GIB__",m.prototype.ginTopo="__GIN__",m.prototype.gmbTopo="__GMB__",m.prototype.gnbTopo="__GNB__",m.prototype.gnqTopo="__GNQ__",m.prototype.grcTopo="__GRC__",m.prototype.grdTopo="__GRD__",m.prototype.grlTopo="__GRL__",m.prototype.gtmTopo="__GTM__",m.prototype.gumTopo="__GUM__",m.prototype.guyTopo="__GUY__",m.prototype.hkgTopo="__HKG__",m.prototype.hmdTopo="__HMD__",m.prototype.hndTopo="__HND__",m.prototype.hrvTopo="__HRV__",m.prototype.htiTopo="__HTI__",m.prototype.hunTopo="__HUN__",m.prototype.idnTopo="__IDN__",m.prototype.imnTopo="__IMN__",m.prototype.indTopo="__IND__",m.prototype.ioaTopo="__IOA__",m.prototype.iotTopo="__IOT__",m.prototype.irlTopo="__IRL__",m.prototype.irnTopo="__IRN__",m.prototype.irqTopo="__IRQ__",m.prototype.islTopo="__ISL__",m.prototype.isrTopo="__ISR__",m.prototype.itaTopo="__ITA__",m.prototype.jamTopo="__JAM__",m.prototype.jeyTopo="__JEY__",m.prototype.jorTopo="__JOR__",m.prototype.jpnTopo="__JPN__",m.prototype.kabTopo="__KAB__",m.prototype.kasTopo="__KAS__",m.prototype.kazTopo="__KAZ__",m.prototype.kenTopo="__KEN__",m.prototype.kgzTopo="__KGZ__",m.prototype.khmTopo="__KHM__",m.prototype.kirTopo="__KIR__",m.prototype.knaTopo="__KNA__",m.prototype.korTopo="__KOR__",m.prototype.kosTopo="__KOS__",m.prototype.kwtTopo="__KWT__",m.prototype.laoTopo="__LAO__",m.prototype.lbnTopo="__LBN__",m.prototype.lbrTopo="__LBR__",m.prototype.lbyTopo="__LBY__",m.prototype.lcaTopo="__LCA__",m.prototype.lieTopo="__LIE__",m.prototype.lkaTopo="__LKA__",m.prototype.lsoTopo="__LSO__",m.prototype.ltuTopo="__LTU__",m.prototype.luxTopo="__LUX__",m.prototype.lvaTopo="__LVA__",m.prototype.macTopo="__MAC__",m.prototype.mafTopo="__MAF__",m.prototype.marTopo="__MAR__",m.prototype.mcoTopo="__MCO__",m.prototype.mdaTopo="__MDA__",m.prototype.mdgTopo="__MDG__",m.prototype.mdvTopo="__MDV__",m.prototype.mexTopo="__MEX__",m.prototype.mhlTopo="__MHL__",m.prototype.mkdTopo="__MKD__",m.prototype.mliTopo="__MLI__",m.prototype.mltTopo="__MLT__",m.prototype.mmrTopo="__MMR__",m.prototype.mneTopo="__MNE__",m.prototype.mngTopo="__MNG__",m.prototype.mnpTopo="__MNP__",m.prototype.mozTopo="__MOZ__",m.prototype.mrtTopo="__MRT__",m.prototype.msrTopo="__MSR__",m.prototype.musTopo="__MUS__",m.prototype.mwiTopo="__MWI__",m.prototype.mysTopo="__MYS__",m.prototype.namTopo="__NAM__",m.prototype.nclTopo="__NCL__",m.prototype.nerTopo="__NER__",m.prototype.nfkTopo="__NFK__",m.prototype.ngaTopo="__NGA__",m.prototype.nicTopo="__NIC__",m.prototype.niuTopo="__NIU__",m.prototype.nldTopo="__NLD__",m.prototype.nplTopo="__NPL__",m.prototype.nruTopo="__NRU__",m.prototype.nulTopo="__NUL__",m.prototype.nzlTopo="__NZL__",m.prototype.omnTopo="__OMN__",m.prototype.pakTopo="__PAK__",m.prototype.panTopo="__PAN__",m.prototype.pcnTopo="__PCN__",m.prototype.perTopo="__PER__",m.prototype.pgaTopo="__PGA__",m.prototype.phlTopo="__PHL__",m.prototype.plwTopo="__PLW__",m.prototype.pngTopo="__PNG__",m.prototype.polTopo="__POL__",m.prototype.priTopo="__PRI__",m.prototype.prkTopo="__PRK__",m.prototype.prtTopo="__PRT__",m.prototype.pryTopo="__PRY__",m.prototype.pyfTopo="__PYF__",m.prototype.qatTopo="__QAT__",m.prototype.rouTopo="__ROU__",m.prototype.rusTopo="__RUS__",m.prototype.rwaTopo="__RWA__",m.prototype.sahTopo="__SAH__",m.prototype.sauTopo="__SAU__",m.prototype.scrTopo="__SCR__",m.prototype.sdnTopo="__SDN__",m.prototype.sdsTopo="__SDS__",m.prototype.senTopo="__SEN__",m.prototype.serTopo="__SER__",m.prototype.sgpTopo="__SGP__",m.prototype.sgsTopo="__SGS__",m.prototype.shnTopo="__SHN__",m.prototype.slbTopo="__SLB__",m.prototype.sleTopo="__SLE__",m.prototype.slvTopo="__SLV__",m.prototype.smrTopo="__SMR__",m.prototype.solTopo="__SOL__",m.prototype.somTopo="__SOM__",m.prototype.spmTopo="__SPM__",m.prototype.srbTopo="__SRB__",m.prototype.stpTopo="__STP__",m.prototype.surTopo="__SUR__",m.prototype.svkTopo="__SVK__",m.prototype.svnTopo="__SVN__",m.prototype.sweTopo="__SWE__",m.prototype.swzTopo="__SWZ__",m.prototype.sxmTopo="__SXM__",m.prototype.sycTopo="__SYC__",m.prototype.syrTopo="__SYR__",m.prototype.tcaTopo="__TCA__",m.prototype.tcdTopo="__TCD__",m.prototype.tgoTopo="__TGO__",m.prototype.thaTopo="__THA__",m.prototype.tjkTopo="__TJK__",m.prototype.tkmTopo="__TKM__",m.prototype.tlsTopo="__TLS__",m.prototype.tonTopo="__TON__",m.prototype.ttoTopo="__TTO__",m.prototype.tunTopo="__TUN__",m.prototype.turTopo="__TUR__",m.prototype.tuvTopo="__TUV__",m.prototype.twnTopo="__TWN__",m.prototype.tzaTopo="__TZA__",m.prototype.ugaTopo="__UGA__",m.prototype.ukrTopo="__UKR__",m.prototype.umiTopo="__UMI__",m.prototype.uryTopo="__URY__",m.prototype.usaTopo="__USA__",m.prototype.usgTopo="__USG__",m.prototype.uzbTopo="__UZB__",m.prototype.vatTopo="__VAT__",m.prototype.vctTopo="__VCT__",m.prototype.venTopo="__VEN__",m.prototype.vgbTopo="__VGB__",m.prototype.virTopo="__VIR__",m.prototype.vnmTopo="__VNM__",m.prototype.vutTopo="__VUT__",m.prototype.wlfTopo="__WLF__",m.prototype.wsbTopo="__WSB__",m.prototype.wsmTopo="__WSM__",m.prototype.yemTopo="__YEM__",m.prototype.zafTopo="__ZAF__",m.prototype.zmbTopo="__ZMB__",m.prototype.zweTopo="__ZWE__",m.prototype.latLngToXY=function(a,b){return this.projection([b,a])},m.prototype.addLayer=function(a,b,c){var d;return d=c?this.svg.insert("g",":first-child"):this.svg.append("g"),d.attr("id",b||"").attr("class",a||"")},m.prototype.updateChoropleth=function(a,b){var c=this.svg;b&&b.reset===!0&&c.selectAll(".datamaps-subunit").attr("data-info",function(){return"{}"}).transition().style("fill",this.options.fills.defaultFill);for(var d in a)if(a.hasOwnProperty(d)){var e,f=a[d];if(!d)continue;if(e="string"==typeof f?f:"string"==typeof f.color?f.color:"string"==typeof f.fillColor?f.fillColor:this.options.fills[f.fillKey],f===Object(f)){this.options.data[d]=l(f,this.options.data[d]||{});this.svg.select("."+d).attr("data-info",JSON.stringify(this.options.data[d]))}c.selectAll("."+d).transition().style("fill",e)}},m.prototype.updatePopup=function(a,b,c){var d=this;a.on("mousemove",null),a.on("mousemove",function(){var e=n.mouse(d.options.element);n.select(d.svg[0][0].parentNode).select(".datamaps-hoverover").style("top",e[1]+30+"px").html(function(){var d=JSON.parse(a.attr("data-info"));try{return c.popupTemplate(b,d)}catch(e){return""}}).style("left",e[0]+"px")}),n.select(d.svg[0][0].parentNode).select(".datamaps-hoverover").style("display","block")},m.prototype.addPlugin=function(a,b){var c=this;"undefined"==typeof m.prototype[a]&&(m.prototype[a]=function(d,e,f,g){var h;"undefined"==typeof g&&(g=!1),"function"==typeof e&&(f=e,e=void 0),e=l(e||{},c.options[a+"Config"]),!g&&this.options[a+"Layer"]?(h=this.options[a+"Layer"],e=e||this.options[a+"Options"]):(h=this.addLayer(a),this.options[a+"Layer"]=h,this.options[a+"Options"]=e),b.apply(this,[h,d,e]),f&&f(h)})}, true?(n=__webpack_require__(/*! d3 */ "./node_modules/d3/d3.js"),o=__webpack_require__(/*! topojson */ "./node_modules/topojson/index.js"),module.exports=m):undefined,window.jQuery&&(window.jQuery.fn.datamaps=function(a,b){a=a||{},a.element=this[0];var c=new m(a);return"function"==typeof b&&b(c,a),this})}();

/***/ }),

/***/ "./node_modules/d3-color/src/color.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/color.js ***!
  \********************************************/
/*! exports provided: Color, darker, brighter, default, rgbConvert, rgb, Rgb, hslConvert, hsl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Color", function() { return Color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "darker", function() { return darker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "brighter", function() { return brighter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return color; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbConvert", function() { return rgbConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Rgb", function() { return Rgb; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslConvert", function() { return hslConvert; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return hsl; });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define.js */ "./node_modules/d3-color/src/define.js");


function Color() {}

var darker = 0.7;
var brighter = 1 / darker;

var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");

var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Color, color, {
  copy: function(channels) {
    return Object.assign(new this.constructor, this, channels);
  },
  displayable: function() {
    return this.rgb().displayable();
  },
  hex: color_formatHex, // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
      : null) // invalid hex
      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
      : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
      : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb;
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Rgb, rgb, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function() {
    return this;
  },
  displayable: function() {
    return (-0.5 <= this.r && this.r < 255.5)
        && (-0.5 <= this.g && this.g < 255.5)
        && (-0.5 <= this.b && this.b < 255.5)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  hex: rgb_formatHex, // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(")
      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
      + Math.max(0, Math.min(255, Math.round(this.b) || 0))
      + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;
  else if (l <= 0 || l >= 1) h = s = NaN;
  else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl;
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;
  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;
    else if (g === max) h = (b - r) / s + 2;
    else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }
  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Hsl, hsl, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(Color, {
  brighter: function(k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(
      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
      hsl2rgb(h, m1, m2),
      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
      this.opacity
    );
  },
  displayable: function() {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
        && (0 <= this.l && this.l <= 1)
        && (0 <= this.opacity && this.opacity <= 1);
  },
  formatHsl: function() {
    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(")
        + (this.h || 0) + ", "
        + (this.s || 0) * 100 + "%, "
        + (this.l || 0) * 100 + "%"
        + (a === 1 ? ")" : ", " + a + ")");
  }
}));

/* From FvD 13.37, CSS Color Module Level 3 */
function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60
      : h < 180 ? m2
      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
      : m1) * 255;
}


/***/ }),

/***/ "./node_modules/d3-color/src/cubehelix.js":
/*!************************************************!*\
  !*** ./node_modules/d3-color/src/cubehelix.js ***!
  \************************************************/
/*! exports provided: default, Cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cubehelix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cubehelix", function() { return Cubehelix; });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define.js */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-color/src/math.js");




var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color_js__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
      h = s ? Math.atan2(k, bl) * _math_js__WEBPACK_IMPORTED_MODULE_2__["rad2deg"] - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Cubehelix, cubehelix, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color_js__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    k = k == null ? _color_js__WEBPACK_IMPORTED_MODULE_1__["brighter"] : Math.pow(_color_js__WEBPACK_IMPORTED_MODULE_1__["brighter"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function(k) {
    k = k == null ? _color_js__WEBPACK_IMPORTED_MODULE_1__["darker"] : Math.pow(_color_js__WEBPACK_IMPORTED_MODULE_1__["darker"], k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function() {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math_js__WEBPACK_IMPORTED_MODULE_2__["deg2rad"],
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color_js__WEBPACK_IMPORTED_MODULE_1__["Rgb"](
      255 * (l + a * (A * cosh + B * sinh)),
      255 * (l + a * (C * cosh + D * sinh)),
      255 * (l + a * (E * cosh)),
      this.opacity
    );
  }
}));


/***/ }),

/***/ "./node_modules/d3-color/src/define.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-color/src/define.js ***!
  \*********************************************/
/*! exports provided: default, extend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "extend", function() { return extend; });
/* harmony default export */ __webpack_exports__["default"] = (function(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
});

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);
  for (var key in definition) prototype[key] = definition[key];
  return prototype;
}


/***/ }),

/***/ "./node_modules/d3-color/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-color/src/index.js ***!
  \********************************************/
/*! exports provided: color, rgb, hsl, lab, hcl, lch, gray, cubehelix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-color/src/color.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "color", function() { return _color_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rgb", function() { return _color_js__WEBPACK_IMPORTED_MODULE_0__["rgb"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hsl", function() { return _color_js__WEBPACK_IMPORTED_MODULE_0__["hsl"]; });

/* harmony import */ var _lab_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lab.js */ "./node_modules/d3-color/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lab", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_1__["hcl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_1__["lch"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_1__["gray"]; });

/* harmony import */ var _cubehelix_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cubehelix.js */ "./node_modules/d3-color/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cubehelix", function() { return _cubehelix_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });






/***/ }),

/***/ "./node_modules/d3-color/src/lab.js":
/*!******************************************!*\
  !*** ./node_modules/d3-color/src/lab.js ***!
  \******************************************/
/*! exports provided: gray, default, Lab, lch, hcl, Hcl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gray", function() { return gray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Lab", function() { return Lab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lch", function() { return lch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hcl", function() { return hcl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Hcl", function() { return Hcl; });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./define.js */ "./node_modules/d3-color/src/define.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-color/src/color.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-color/src/math.js");




// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color_js__WEBPACK_IMPORTED_MODULE_1__["Rgb"])) o = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["rgbConvert"])(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;
  if (r === g && g === b) x = z = y; else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Lab, lab, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color_js__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function(k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function() {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color_js__WEBPACK_IMPORTED_MODULE_1__["Rgb"](
      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),
      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),
      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),
      this.opacity
    );
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * _math_js__WEBPACK_IMPORTED_MODULE_2__["rad2deg"];
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math_js__WEBPACK_IMPORTED_MODULE_2__["deg2rad"];
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Hcl, hcl, Object(_define_js__WEBPACK_IMPORTED_MODULE_0__["extend"])(_color_js__WEBPACK_IMPORTED_MODULE_1__["Color"], {
  brighter: function(k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function(k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function() {
    return hcl2lab(this).rgb();
  }
}));


/***/ }),

/***/ "./node_modules/d3-color/src/math.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-color/src/math.js ***!
  \*******************************************/
/*! exports provided: deg2rad, rad2deg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deg2rad", function() { return deg2rad; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rad2deg", function() { return rad2deg; });
var deg2rad = Math.PI / 180;
var rad2deg = 180 / Math.PI;


/***/ }),

/***/ "./node_modules/d3-interpolate/src/array.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/array.js ***!
  \**************************************************/
/*! exports provided: default, genericArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "genericArray", function() { return genericArray; });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./numberArray.js */ "./node_modules/d3-interpolate/src/numberArray.js");



/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return (Object(_numberArray_js__WEBPACK_IMPORTED_MODULE_1__["isNumberArray"])(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_1__["default"] : genericArray)(a, b);
});

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = Object(_value_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a[i], b[i]);
  for (; i < nb; ++i) c[i] = b[i];

  return function(t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);
    return c;
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/basis.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basis.js ***!
  \**************************************************/
/*! exports provided: basis, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "basis", function() { return basis; });
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1, t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0
      + (4 - 6 * t2 + 3 * t3) * v1
      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2
      + t3 * v3) / 6;
}

/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  var n = values.length - 1;
  return function(t) {
    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/basisClosed.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-interpolate/src/basisClosed.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-interpolate/src/basis.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  var n = values.length;
  return function(t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return Object(_basis_js__WEBPACK_IMPORTED_MODULE_0__["basis"])((t - i / n) * n, v0, v1, v2, v3);
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/color.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/color.js ***!
  \**************************************************/
/*! exports provided: hue, gamma, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hue", function() { return hue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gamma", function() { return gamma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nogamma; });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-interpolate/src/constant.js");


function linear(a, d) {
  return function(t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function(a, b) {
    return b - a ? exponential(a, b, y) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_0__["default"])(isNaN(a) ? b : a);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/constant.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/constant.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/cubehelix.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/cubehelix.js ***!
  \******************************************************/
/*! exports provided: default, cubehelixLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cubehelixLong", function() { return cubehelixLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");



function cubehelix(hue) {
  return (function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(end)).h),
          s = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
          l = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
          opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
      return function(t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;

    return cubehelix;
  })(1);
}

/* harmony default export */ __webpack_exports__["default"] = (cubehelix(_color_js__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var cubehelixLong = cubehelix(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/date.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/date.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var d = new Date;
  return a = +a, b = +b, function(t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/discrete.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/discrete.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hcl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hcl.js ***!
  \************************************************/
/*! exports provided: default, hclLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hclLong", function() { return hclLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");



function hcl(hue) {
  return function(start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hcl"])(end)).h),
        c = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.c, end.c),
        l = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ __webpack_exports__["default"] = (hcl(_color_js__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hclLong = hcl(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hsl.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hsl.js ***!
  \************************************************/
/*! exports provided: default, hslLong */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hslLong", function() { return hslLong; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");



function hsl(hue) {
  return function(start, end) {
    var h = hue((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(start)).h, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["hsl"])(end)).h),
        s = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.s, end.s),
        l = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.l, end.l),
        opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }
}

/* harmony default export */ __webpack_exports__["default"] = (hsl(_color_js__WEBPACK_IMPORTED_MODULE_1__["hue"]));
var hslLong = hsl(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"]);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/hue.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/hue.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var i = Object(_color_js__WEBPACK_IMPORTED_MODULE_0__["hue"])(+a, +b);
  return function(t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/index.js ***!
  \**************************************************/
/*! exports provided: interpolate, interpolateArray, interpolateBasis, interpolateBasisClosed, interpolateDate, interpolateDiscrete, interpolateHue, interpolateNumber, interpolateNumberArray, interpolateObject, interpolateRound, interpolateString, interpolateTransformCss, interpolateTransformSvg, interpolateZoom, interpolateRgb, interpolateRgbBasis, interpolateRgbBasisClosed, interpolateHsl, interpolateHslLong, interpolateLab, interpolateHcl, interpolateHclLong, interpolateCubehelix, interpolateCubehelixLong, piecewise, quantize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolate", function() { return _value_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-interpolate/src/array.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateArray", function() { return _array_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasis", function() { return _basis_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./basisClosed.js */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBasisClosed", function() { return _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./date.js */ "./node_modules/d3-interpolate/src/date.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDate", function() { return _date_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _discrete_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./discrete.js */ "./node_modules/d3-interpolate/src/discrete.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateDiscrete", function() { return _discrete_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _hue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hue.js */ "./node_modules/d3-interpolate/src/hue.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHue", function() { return _hue_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-interpolate/src/number.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumber", function() { return _number_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./numberArray.js */ "./node_modules/d3-interpolate/src/numberArray.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateNumberArray", function() { return _numberArray_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./object.js */ "./node_modules/d3-interpolate/src/object.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateObject", function() { return _object_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./round.js */ "./node_modules/d3-interpolate/src/round.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRound", function() { return _round_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./string.js */ "./node_modules/d3-interpolate/src/string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateString", function() { return _string_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _transform_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./transform/index.js */ "./node_modules/d3-interpolate/src/transform/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return _transform_index_js__WEBPACK_IMPORTED_MODULE_12__["interpolateTransformCss"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return _transform_index_js__WEBPACK_IMPORTED_MODULE_12__["interpolateTransformSvg"]; });

/* harmony import */ var _zoom_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./zoom.js */ "./node_modules/d3-interpolate/src/zoom.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateZoom", function() { return _zoom_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./rgb.js */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgb", function() { return _rgb_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasis", function() { return _rgb_js__WEBPACK_IMPORTED_MODULE_14__["rgbBasis"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRgbBasisClosed", function() { return _rgb_js__WEBPACK_IMPORTED_MODULE_14__["rgbBasisClosed"]; });

/* harmony import */ var _hsl_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./hsl.js */ "./node_modules/d3-interpolate/src/hsl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHsl", function() { return _hsl_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHslLong", function() { return _hsl_js__WEBPACK_IMPORTED_MODULE_15__["hslLong"]; });

/* harmony import */ var _lab_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./lab.js */ "./node_modules/d3-interpolate/src/lab.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateLab", function() { return _lab_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _hcl_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./hcl.js */ "./node_modules/d3-interpolate/src/hcl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHcl", function() { return _hcl_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateHclLong", function() { return _hcl_js__WEBPACK_IMPORTED_MODULE_17__["hclLong"]; });

/* harmony import */ var _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./cubehelix.js */ "./node_modules/d3-interpolate/src/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelix", function() { return _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixLong", function() { return _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__["cubehelixLong"]; });

/* harmony import */ var _piecewise_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./piecewise.js */ "./node_modules/d3-interpolate/src/piecewise.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "piecewise", function() { return _piecewise_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _quantize_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./quantize.js */ "./node_modules/d3-interpolate/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return _quantize_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });
























/***/ }),

/***/ "./node_modules/d3-interpolate/src/lab.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/lab.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return lab; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");



function lab(start, end) {
  var l = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(start)).l, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["lab"])(end)).l),
      a = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.a, end.a),
      b = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.b, end.b),
      opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_1__["default"])(start.opacity, end.opacity);
  return function(t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/number.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/number.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a = +a, b = +b, function(t) {
    return a * (1 - t) + b * t;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/numberArray.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-interpolate/src/numberArray.js ***!
  \********************************************************/
/*! exports provided: default, isNumberArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isNumberArray", function() { return isNumberArray; });
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function(t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;
    return c;
  };
});

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/object.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/object.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./value.js */ "./node_modules/d3-interpolate/src/value.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var i = {},
      c = {},
      k;

  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = Object(_value_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function(t) {
    for (k in i) c[k] = i[k](t);
    return c;
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/piecewise.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-interpolate/src/piecewise.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return piecewise; });
function piecewise(interpolate, values) {
  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);
  while (i < n) I[i] = interpolate(v, v = values[++i]);
  return function(t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/quantize.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-interpolate/src/quantize.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(interpolator, n) {
  var samples = new Array(n);
  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));
  return samples;
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/rgb.js":
/*!************************************************!*\
  !*** ./node_modules/d3-interpolate/src/rgb.js ***!
  \************************************************/
/*! exports provided: default, rgbBasis, rgbBasisClosed */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasis", function() { return rgbBasis; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rgbBasisClosed", function() { return rgbBasisClosed; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./basis.js */ "./node_modules/d3-interpolate/src/basis.js");
/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./basisClosed.js */ "./node_modules/d3-interpolate/src/basisClosed.js");
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./color.js */ "./node_modules/d3-interpolate/src/color.js");





/* harmony default export */ __webpack_exports__["default"] = ((function rgbGamma(y) {
  var color = Object(_color_js__WEBPACK_IMPORTED_MODULE_3__["gamma"])(y);

  function rgb(start, end) {
    var r = color((start = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(start)).r, (end = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = Object(_color_js__WEBPACK_IMPORTED_MODULE_3__["default"])(start.opacity, end.opacity);
    return function(t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;

  return rgb;
})(1));

function rgbSpline(spline) {
  return function(colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i, color;
    for (i = 0; i < n; ++i) {
      color = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }
    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function(t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis_js__WEBPACK_IMPORTED_MODULE_1__["default"]);
var rgbBasisClosed = rgbSpline(_basisClosed_js__WEBPACK_IMPORTED_MODULE_2__["default"]);


/***/ }),

/***/ "./node_modules/d3-interpolate/src/round.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/round.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a = +a, b = +b, function(t) {
    return Math.round(a * (1 - t) + b * t);
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/string.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-interpolate/src/string.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-interpolate/src/number.js");


var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function() {
    return b;
  };
}

function one(b) {
  return function(t) {
    return b(t) + "";
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
      am, // current match in a
      bm, // current match in b
      bs, // string preceding current number in b, if any
      i = -1, // index in s
      s = [], // string constants and placeholders
      q = []; // number interpolators

  // Coerce inputs to strings.
  a = a + "", b = b + "";

  // Interpolate pairs of numbers in a & b.
  while ((am = reA.exec(a))
      && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) { // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }
    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else { // interpolate non-matching numbers
      s[++i] = null;
      q.push({i: i, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(am, bm)});
    }
    bi = reB.lastIndex;
  }

  // Add remains of b.
  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  }

  // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.
  return s.length < 2 ? (q[0]
      ? one(q[0].x)
      : zero(b))
      : (b = q.length, function(t) {
          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
          return s.join("");
        });
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/decompose.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/decompose.js ***!
  \****************************************************************/
/*! exports provided: identity, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "identity", function() { return identity; });
var degrees = 180 / Math.PI;

var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};

/* harmony default export */ __webpack_exports__["default"] = (function(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/index.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/index.js ***!
  \************************************************************/
/*! exports provided: interpolateTransformCss, interpolateTransformSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformCss", function() { return interpolateTransformCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "interpolateTransformSvg", function() { return interpolateTransformSvg; });
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../number.js */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse.js */ "./node_modules/d3-interpolate/src/transform/parse.js");



function interpolateTransform(parse, pxComma, pxParen, degParen) {

  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({i: i - 4, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)}, {i: i - 2, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)});
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
      q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)});
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(a, b)});
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({i: i - 4, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(xa, xb)}, {i: i - 2, x: Object(_number_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ya, yb)});
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function(a, b) {
    var s = [], // string constants and placeholders
        q = []; // number interpolators
    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__["parseCss"], "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__["parseSvg"], ", ", ")", ")");


/***/ }),

/***/ "./node_modules/d3-interpolate/src/transform/parse.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-interpolate/src/transform/parse.js ***!
  \************************************************************/
/*! exports provided: parseCss, parseSvg */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseCss", function() { return parseCss; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parseSvg", function() { return parseSvg; });
/* harmony import */ var _decompose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decompose.js */ "./node_modules/d3-interpolate/src/transform/decompose.js");


var cssNode,
    cssRoot,
    cssView,
    svgNode;

function parseCss(value) {
  if (value === "none") return _decompose_js__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return Object(_decompose_js__WEBPACK_IMPORTED_MODULE_0__["default"])(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}

function parseSvg(value) {
  if (value == null) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__["identity"];
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__["identity"];
  value = value.matrix;
  return Object(_decompose_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value.a, value.b, value.c, value.d, value.e, value.f);
}


/***/ }),

/***/ "./node_modules/d3-interpolate/src/value.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-interpolate/src/value.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rgb.js */ "./node_modules/d3-interpolate/src/rgb.js");
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-interpolate/src/array.js");
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date.js */ "./node_modules/d3-interpolate/src/date.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-interpolate/src/number.js");
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./object.js */ "./node_modules/d3-interpolate/src/object.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string.js */ "./node_modules/d3-interpolate/src/string.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-interpolate/src/constant.js");
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./numberArray.js */ "./node_modules/d3-interpolate/src/numberArray.js");










/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var t = typeof b, c;
  return b == null || t === "boolean" ? Object(_constant_js__WEBPACK_IMPORTED_MODULE_7__["default"])(b)
      : (t === "number" ? _number_js__WEBPACK_IMPORTED_MODULE_4__["default"]
      : t === "string" ? ((c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["color"])(b)) ? (b = c, _rgb_js__WEBPACK_IMPORTED_MODULE_1__["default"]) : _string_js__WEBPACK_IMPORTED_MODULE_6__["default"])
      : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_0__["color"] ? _rgb_js__WEBPACK_IMPORTED_MODULE_1__["default"]
      : b instanceof Date ? _date_js__WEBPACK_IMPORTED_MODULE_3__["default"]
      : Object(_numberArray_js__WEBPACK_IMPORTED_MODULE_8__["isNumberArray"])(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_8__["default"]
      : Array.isArray(b) ? _array_js__WEBPACK_IMPORTED_MODULE_2__["genericArray"]
      : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object_js__WEBPACK_IMPORTED_MODULE_5__["default"]
      : _number_js__WEBPACK_IMPORTED_MODULE_4__["default"])(a, b);
});


/***/ }),

/***/ "./node_modules/d3-interpolate/src/zoom.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-interpolate/src/zoom.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}

// p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]
/* harmony default export */ __webpack_exports__["default"] = (function(p0, p1) {
  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S;

  // Special case for u0 ≅ u1.
  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;
    i = function(t) {
      return [
        ux0 + t * dx,
        uy0 + t * dy,
        w0 * Math.exp(rho * t * S)
      ];
    }
  }

  // General case.
  else {
    var d1 = Math.sqrt(d2),
        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
    S = (r1 - r0) / rho;
    i = function(t) {
      var s = t * S,
          coshr0 = cosh(r0),
          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
      return [
        ux0 + u * dx,
        uy0 + u * dy,
        w0 * coshr0 / cosh(rho * s + r0)
      ];
    }
  }

  i.duration = S * 1000;

  return i;
});


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Accent.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Dark2.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Paired.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set1.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set2.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Set3.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/categorical/category10.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/categorical/category10.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


/* harmony default export */ __webpack_exports__["default"] = (Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/colors.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/colors.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(specifier) {
  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;
  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);
  return colors;
});


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/BrBG.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "d8b365f5f5f55ab4ac",
  "a6611adfc27d80cdc1018571",
  "a6611adfc27df5f5f580cdc1018571",
  "8c510ad8b365f6e8c3c7eae55ab4ac01665e",
  "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e",
  "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e",
  "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e",
  "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30",
  "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PRGn.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "af8dc3f7f7f77fbf7b",
  "7b3294c2a5cfa6dba0008837",
  "7b3294c2a5cff7f7f7a6dba0008837",
  "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837",
  "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837",
  "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837",
  "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837",
  "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b",
  "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PiYG.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e9a3c9f7f7f7a1d76a",
  "d01c8bf1b6dab8e1864dac26",
  "d01c8bf1b6daf7f7f7b8e1864dac26",
  "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221",
  "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221",
  "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221",
  "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221",
  "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419",
  "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/PuOr.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "998ec3f7f7f7f1a340",
  "5e3c99b2abd2fdb863e66101",
  "5e3c99b2abd2f7f7f7fdb863e66101",
  "542788998ec3d8daebfee0b6f1a340b35806",
  "542788998ec3d8daebf7f7f7fee0b6f1a340b35806",
  "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806",
  "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806",
  "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08",
  "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdBu.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ef8a62f7f7f767a9cf",
  "ca0020f4a58292c5de0571b0",
  "ca0020f4a582f7f7f792c5de0571b0",
  "b2182bef8a62fddbc7d1e5f067a9cf2166ac",
  "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac",
  "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac",
  "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac",
  "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061",
  "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdGy.js ***!
  \***************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ef8a62ffffff999999",
  "ca0020f4a582bababa404040",
  "ca0020f4a582ffffffbababa404040",
  "b2182bef8a62fddbc7e0e0e09999994d4d4d",
  "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d",
  "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d",
  "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d",
  "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a",
  "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js ***!
  \*****************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fc8d59ffffbf91bfdb",
  "d7191cfdae61abd9e92c7bb6",
  "d7191cfdae61ffffbfabd9e92c7bb6",
  "d73027fc8d59fee090e0f3f891bfdb4575b4",
  "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4",
  "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4",
  "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4",
  "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695",
  "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js ***!
  \*****************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fc8d59ffffbf91cf60",
  "d7191cfdae61a6d96a1a9641",
  "d7191cfdae61ffffbfa6d96a1a9641",
  "d73027fc8d59fee08bd9ef8b91cf601a9850",
  "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850",
  "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850",
  "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850",
  "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837",
  "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/diverging/Spectral.js ***!
  \*******************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fc8d59ffffbf99d594",
  "d7191cfdae61abdda42b83ba",
  "d7191cfdae61ffffbfabdda42b83ba",
  "d53e4ffc8d59fee08be6f59899d5943288bd",
  "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd",
  "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd",
  "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd",
  "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2",
  "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/index.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/index.js ***!
  \******************************************************/
/*! exports provided: schemeCategory10, schemeAccent, schemeDark2, schemePaired, schemePastel1, schemePastel2, schemeSet1, schemeSet2, schemeSet3, schemeTableau10, interpolateBrBG, schemeBrBG, interpolatePRGn, schemePRGn, interpolatePiYG, schemePiYG, interpolatePuOr, schemePuOr, interpolateRdBu, schemeRdBu, interpolateRdGy, schemeRdGy, interpolateRdYlBu, schemeRdYlBu, interpolateRdYlGn, schemeRdYlGn, interpolateSpectral, schemeSpectral, interpolateBuGn, schemeBuGn, interpolateBuPu, schemeBuPu, interpolateGnBu, schemeGnBu, interpolateOrRd, schemeOrRd, interpolatePuBuGn, schemePuBuGn, interpolatePuBu, schemePuBu, interpolatePuRd, schemePuRd, interpolateRdPu, schemeRdPu, interpolateYlGnBu, schemeYlGnBu, interpolateYlGn, schemeYlGn, interpolateYlOrBr, schemeYlOrBr, interpolateYlOrRd, schemeYlOrRd, interpolateBlues, schemeBlues, interpolateGreens, schemeGreens, interpolateGreys, schemeGreys, interpolatePurples, schemePurples, interpolateReds, schemeReds, interpolateOranges, schemeOranges, interpolateCividis, interpolateCubehelixDefault, interpolateRainbow, interpolateWarm, interpolateCool, interpolateSinebow, interpolateTurbo, interpolateViridis, interpolateMagma, interpolateInferno, interpolatePlasma */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _categorical_category10_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./categorical/category10.js */ "./node_modules/d3-scale-chromatic/src/categorical/category10.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeCategory10", function() { return _categorical_category10_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _categorical_Accent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./categorical/Accent.js */ "./node_modules/d3-scale-chromatic/src/categorical/Accent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeAccent", function() { return _categorical_Accent_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _categorical_Dark2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./categorical/Dark2.js */ "./node_modules/d3-scale-chromatic/src/categorical/Dark2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeDark2", function() { return _categorical_Dark2_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _categorical_Paired_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./categorical/Paired.js */ "./node_modules/d3-scale-chromatic/src/categorical/Paired.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePaired", function() { return _categorical_Paired_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _categorical_Pastel1_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./categorical/Pastel1.js */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel1", function() { return _categorical_Pastel1_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _categorical_Pastel2_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./categorical/Pastel2.js */ "./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePastel2", function() { return _categorical_Pastel2_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _categorical_Set1_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./categorical/Set1.js */ "./node_modules/d3-scale-chromatic/src/categorical/Set1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet1", function() { return _categorical_Set1_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _categorical_Set2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./categorical/Set2.js */ "./node_modules/d3-scale-chromatic/src/categorical/Set2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet2", function() { return _categorical_Set2_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _categorical_Set3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./categorical/Set3.js */ "./node_modules/d3-scale-chromatic/src/categorical/Set3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSet3", function() { return _categorical_Set3_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _categorical_Tableau10_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./categorical/Tableau10.js */ "./node_modules/d3-scale-chromatic/src/categorical/Tableau10.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeTableau10", function() { return _categorical_Tableau10_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _diverging_BrBG_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./diverging/BrBG.js */ "./node_modules/d3-scale-chromatic/src/diverging/BrBG.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBrBG", function() { return _diverging_BrBG_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBrBG", function() { return _diverging_BrBG_js__WEBPACK_IMPORTED_MODULE_10__["scheme"]; });

/* harmony import */ var _diverging_PRGn_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./diverging/PRGn.js */ "./node_modules/d3-scale-chromatic/src/diverging/PRGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePRGn", function() { return _diverging_PRGn_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePRGn", function() { return _diverging_PRGn_js__WEBPACK_IMPORTED_MODULE_11__["scheme"]; });

/* harmony import */ var _diverging_PiYG_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./diverging/PiYG.js */ "./node_modules/d3-scale-chromatic/src/diverging/PiYG.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePiYG", function() { return _diverging_PiYG_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePiYG", function() { return _diverging_PiYG_js__WEBPACK_IMPORTED_MODULE_12__["scheme"]; });

/* harmony import */ var _diverging_PuOr_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./diverging/PuOr.js */ "./node_modules/d3-scale-chromatic/src/diverging/PuOr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuOr", function() { return _diverging_PuOr_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuOr", function() { return _diverging_PuOr_js__WEBPACK_IMPORTED_MODULE_13__["scheme"]; });

/* harmony import */ var _diverging_RdBu_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./diverging/RdBu.js */ "./node_modules/d3-scale-chromatic/src/diverging/RdBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdBu", function() { return _diverging_RdBu_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdBu", function() { return _diverging_RdBu_js__WEBPACK_IMPORTED_MODULE_14__["scheme"]; });

/* harmony import */ var _diverging_RdGy_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./diverging/RdGy.js */ "./node_modules/d3-scale-chromatic/src/diverging/RdGy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdGy", function() { return _diverging_RdGy_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdGy", function() { return _diverging_RdGy_js__WEBPACK_IMPORTED_MODULE_15__["scheme"]; });

/* harmony import */ var _diverging_RdYlBu_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./diverging/RdYlBu.js */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlBu", function() { return _diverging_RdYlBu_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlBu", function() { return _diverging_RdYlBu_js__WEBPACK_IMPORTED_MODULE_16__["scheme"]; });

/* harmony import */ var _diverging_RdYlGn_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./diverging/RdYlGn.js */ "./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdYlGn", function() { return _diverging_RdYlGn_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdYlGn", function() { return _diverging_RdYlGn_js__WEBPACK_IMPORTED_MODULE_17__["scheme"]; });

/* harmony import */ var _diverging_Spectral_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./diverging/Spectral.js */ "./node_modules/d3-scale-chromatic/src/diverging/Spectral.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSpectral", function() { return _diverging_Spectral_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeSpectral", function() { return _diverging_Spectral_js__WEBPACK_IMPORTED_MODULE_18__["scheme"]; });

/* harmony import */ var _sequential_multi_BuGn_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./sequential-multi/BuGn.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuGn", function() { return _sequential_multi_BuGn_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuGn", function() { return _sequential_multi_BuGn_js__WEBPACK_IMPORTED_MODULE_19__["scheme"]; });

/* harmony import */ var _sequential_multi_BuPu_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./sequential-multi/BuPu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBuPu", function() { return _sequential_multi_BuPu_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBuPu", function() { return _sequential_multi_BuPu_js__WEBPACK_IMPORTED_MODULE_20__["scheme"]; });

/* harmony import */ var _sequential_multi_GnBu_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./sequential-multi/GnBu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGnBu", function() { return _sequential_multi_GnBu_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGnBu", function() { return _sequential_multi_GnBu_js__WEBPACK_IMPORTED_MODULE_21__["scheme"]; });

/* harmony import */ var _sequential_multi_OrRd_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sequential-multi/OrRd.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOrRd", function() { return _sequential_multi_OrRd_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOrRd", function() { return _sequential_multi_OrRd_js__WEBPACK_IMPORTED_MODULE_22__["scheme"]; });

/* harmony import */ var _sequential_multi_PuBuGn_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./sequential-multi/PuBuGn.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBuGn", function() { return _sequential_multi_PuBuGn_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBuGn", function() { return _sequential_multi_PuBuGn_js__WEBPACK_IMPORTED_MODULE_23__["scheme"]; });

/* harmony import */ var _sequential_multi_PuBu_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./sequential-multi/PuBu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuBu", function() { return _sequential_multi_PuBu_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuBu", function() { return _sequential_multi_PuBu_js__WEBPACK_IMPORTED_MODULE_24__["scheme"]; });

/* harmony import */ var _sequential_multi_PuRd_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./sequential-multi/PuRd.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePuRd", function() { return _sequential_multi_PuRd_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePuRd", function() { return _sequential_multi_PuRd_js__WEBPACK_IMPORTED_MODULE_25__["scheme"]; });

/* harmony import */ var _sequential_multi_RdPu_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./sequential-multi/RdPu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRdPu", function() { return _sequential_multi_RdPu_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeRdPu", function() { return _sequential_multi_RdPu_js__WEBPACK_IMPORTED_MODULE_26__["scheme"]; });

/* harmony import */ var _sequential_multi_YlGnBu_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./sequential-multi/YlGnBu.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGnBu", function() { return _sequential_multi_YlGnBu_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGnBu", function() { return _sequential_multi_YlGnBu_js__WEBPACK_IMPORTED_MODULE_27__["scheme"]; });

/* harmony import */ var _sequential_multi_YlGn_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./sequential-multi/YlGn.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlGn", function() { return _sequential_multi_YlGn_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlGn", function() { return _sequential_multi_YlGn_js__WEBPACK_IMPORTED_MODULE_28__["scheme"]; });

/* harmony import */ var _sequential_multi_YlOrBr_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./sequential-multi/YlOrBr.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrBr", function() { return _sequential_multi_YlOrBr_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrBr", function() { return _sequential_multi_YlOrBr_js__WEBPACK_IMPORTED_MODULE_29__["scheme"]; });

/* harmony import */ var _sequential_multi_YlOrRd_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./sequential-multi/YlOrRd.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateYlOrRd", function() { return _sequential_multi_YlOrRd_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeYlOrRd", function() { return _sequential_multi_YlOrRd_js__WEBPACK_IMPORTED_MODULE_30__["scheme"]; });

/* harmony import */ var _sequential_single_Blues_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./sequential-single/Blues.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateBlues", function() { return _sequential_single_Blues_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeBlues", function() { return _sequential_single_Blues_js__WEBPACK_IMPORTED_MODULE_31__["scheme"]; });

/* harmony import */ var _sequential_single_Greens_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./sequential-single/Greens.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreens", function() { return _sequential_single_Greens_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreens", function() { return _sequential_single_Greens_js__WEBPACK_IMPORTED_MODULE_32__["scheme"]; });

/* harmony import */ var _sequential_single_Greys_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./sequential-single/Greys.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateGreys", function() { return _sequential_single_Greys_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeGreys", function() { return _sequential_single_Greys_js__WEBPACK_IMPORTED_MODULE_33__["scheme"]; });

/* harmony import */ var _sequential_single_Purples_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./sequential-single/Purples.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePurples", function() { return _sequential_single_Purples_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemePurples", function() { return _sequential_single_Purples_js__WEBPACK_IMPORTED_MODULE_34__["scheme"]; });

/* harmony import */ var _sequential_single_Reds_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./sequential-single/Reds.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateReds", function() { return _sequential_single_Reds_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeReds", function() { return _sequential_single_Reds_js__WEBPACK_IMPORTED_MODULE_35__["scheme"]; });

/* harmony import */ var _sequential_single_Oranges_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./sequential-single/Oranges.js */ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateOranges", function() { return _sequential_single_Oranges_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "schemeOranges", function() { return _sequential_single_Oranges_js__WEBPACK_IMPORTED_MODULE_36__["scheme"]; });

/* harmony import */ var _sequential_multi_cividis_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./sequential-multi/cividis.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCividis", function() { return _sequential_multi_cividis_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _sequential_multi_cubehelix_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./sequential-multi/cubehelix.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCubehelixDefault", function() { return _sequential_multi_cubehelix_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _sequential_multi_rainbow_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./sequential-multi/rainbow.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateRainbow", function() { return _sequential_multi_rainbow_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateWarm", function() { return _sequential_multi_rainbow_js__WEBPACK_IMPORTED_MODULE_39__["warm"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateCool", function() { return _sequential_multi_rainbow_js__WEBPACK_IMPORTED_MODULE_39__["cool"]; });

/* harmony import */ var _sequential_multi_sinebow_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./sequential-multi/sinebow.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateSinebow", function() { return _sequential_multi_sinebow_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _sequential_multi_turbo_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./sequential-multi/turbo.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateTurbo", function() { return _sequential_multi_turbo_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./sequential-multi/viridis.js */ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateViridis", function() { return _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateMagma", function() { return _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__["magma"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolateInferno", function() { return _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__["inferno"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "interpolatePlasma", function() { return _sequential_multi_viridis_js__WEBPACK_IMPORTED_MODULE_42__["plasma"]; });














































/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/ramp.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/ramp.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");


/* harmony default export */ __webpack_exports__["default"] = (function(scheme) {
  return Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_0__["interpolateRgbBasis"])(scheme[scheme.length - 1]);
});


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e5f5f999d8c92ca25f",
  "edf8fbb2e2e266c2a4238b45",
  "edf8fbb2e2e266c2a42ca25f006d2c",
  "edf8fbccece699d8c966c2a42ca25f006d2c",
  "edf8fbccece699d8c966c2a441ae76238b45005824",
  "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824",
  "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e0ecf49ebcda8856a7",
  "edf8fbb3cde38c96c688419d",
  "edf8fbb3cde38c96c68856a7810f7c",
  "edf8fbbfd3e69ebcda8c96c68856a7810f7c",
  "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b",
  "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b",
  "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e0f3dba8ddb543a2ca",
  "f0f9e8bae4bc7bccc42b8cbe",
  "f0f9e8bae4bc7bccc443a2ca0868ac",
  "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac",
  "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e",
  "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e",
  "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fee8c8fdbb84e34a33",
  "fef0d9fdcc8afc8d59d7301f",
  "fef0d9fdcc8afc8d59e34a33b30000",
  "fef0d9fdd49efdbb84fc8d59e34a33b30000",
  "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000",
  "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000",
  "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ece7f2a6bddb2b8cbe",
  "f1eef6bdc9e174a9cf0570b0",
  "f1eef6bdc9e174a9cf2b8cbe045a8d",
  "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d",
  "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b",
  "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b",
  "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ece2f0a6bddb1c9099",
  "f6eff7bdc9e167a9cf02818a",
  "f6eff7bdc9e167a9cf1c9099016c59",
  "f6eff7d0d1e6a6bddb67a9cf1c9099016c59",
  "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450",
  "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450",
  "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e7e1efc994c7dd1c77",
  "f1eef6d7b5d8df65b0ce1256",
  "f1eef6d7b5d8df65b0dd1c77980043",
  "f1eef6d4b9dac994c7df65b0dd1c77980043",
  "f1eef6d4b9dac994c7df65b0e7298ace125691003f",
  "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f",
  "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fde0ddfa9fb5c51b8a",
  "feebe2fbb4b9f768a1ae017e",
  "feebe2fbb4b9f768a1c51b8a7a0177",
  "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177",
  "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177",
  "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177",
  "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js ***!
  \**********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "f7fcb9addd8e31a354",
  "ffffccc2e69978c679238443",
  "ffffccc2e69978c67931a354006837",
  "ffffccd9f0a3addd8e78c67931a354006837",
  "ffffccd9f0a3addd8e78c67941ab5d238443005a32",
  "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32",
  "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "edf8b17fcdbb2c7fb8",
  "ffffcca1dab441b6c4225ea8",
  "ffffcca1dab441b6c42c7fb8253494",
  "ffffccc7e9b47fcdbb41b6c42c7fb8253494",
  "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84",
  "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84",
  "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fff7bcfec44fd95f0e",
  "ffffd4fed98efe9929cc4c02",
  "ffffd4fed98efe9929d95f0e993404",
  "ffffd4fee391fec44ffe9929d95f0e993404",
  "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04",
  "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04",
  "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "ffeda0feb24cf03b20",
  "ffffb2fecc5cfd8d3ce31a1c",
  "ffffb2fecc5cfd8d3cf03b20bd0026",
  "ffffb2fed976feb24cfd8d3cf03b20bd0026",
  "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026",
  "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026",
  "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb("
      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))
      + ")";
});


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");



/* harmony default export */ __webpack_exports__["default"] = (Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(300, 0.5, 0.0), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(-240, 0.5, 1.0)));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js ***!
  \*************************************************************************/
/*! exports provided: warm, cool, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warm", function() { return warm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cool", function() { return cool; });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-interpolate */ "./node_modules/d3-interpolate/src/index.js");



var warm = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(-100, 0.75, 0.35), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(80, 1.50, 0.8));

var cool = Object(d3_interpolate__WEBPACK_IMPORTED_MODULE_1__["interpolateCubehelixLong"])(Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(260, 0.75, 0.35), Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])(80, 1.50, 0.8));

var c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["cubehelix"])();

/* harmony default export */ __webpack_exports__["default"] = (function(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
});


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-color */ "./node_modules/d3-color/src/index.js");


var c = Object(d3_color__WEBPACK_IMPORTED_MODULE_0__["rgb"])(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

/* harmony default export */ __webpack_exports__["default"] = (function(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
});


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb("
      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", "
      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))
      + ")";
});


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js ***!
  \*************************************************************************/
/*! exports provided: default, magma, inferno, plasma */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "magma", function() { return magma; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inferno", function() { return inferno; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "plasma", function() { return plasma; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");


function ramp(range) {
  var n = range.length;
  return function(t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (ramp(Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725")));

var magma = ramp(Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));

var inferno = ramp(Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));

var plasma = ramp(Object(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"])("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "deebf79ecae13182bd",
  "eff3ffbdd7e76baed62171b5",
  "eff3ffbdd7e76baed63182bd08519c",
  "eff3ffc6dbef9ecae16baed63182bd08519c",
  "eff3ffc6dbef9ecae16baed64292c62171b5084594",
  "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594",
  "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js ***!
  \*************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "e5f5e0a1d99b31a354",
  "edf8e9bae4b374c476238b45",
  "edf8e9bae4b374c47631a354006d2c",
  "edf8e9c7e9c0a1d99b74c47631a354006d2c",
  "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32",
  "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32",
  "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js ***!
  \************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "f0f0f0bdbdbd636363",
  "f7f7f7cccccc969696525252",
  "f7f7f7cccccc969696636363252525",
  "f7f7f7d9d9d9bdbdbd969696636363252525",
  "f7f7f7d9d9d9bdbdbd969696737373525252252525",
  "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525",
  "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js ***!
  \**************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fee6cefdae6be6550d",
  "feeddefdbe85fd8d3cd94701",
  "feeddefdbe85fd8d3ce6550da63603",
  "feeddefdd0a2fdae6bfd8d3ce6550da63603",
  "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04",
  "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04",
  "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js":
/*!**************************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js ***!
  \**************************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "efedf5bcbddc756bb1",
  "f2f0f7cbc9e29e9ac86a51a3",
  "f2f0f7cbc9e29e9ac8756bb154278f",
  "f2f0f7dadaebbcbddc9e9ac8756bb154278f",
  "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486",
  "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486",
  "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js":
/*!***********************************************************************!*\
  !*** ./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js ***!
  \***********************************************************************/
/*! exports provided: scheme, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "scheme", function() { return scheme; });
/* harmony import */ var _colors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../colors.js */ "./node_modules/d3-scale-chromatic/src/colors.js");
/* harmony import */ var _ramp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ramp.js */ "./node_modules/d3-scale-chromatic/src/ramp.js");



var scheme = new Array(3).concat(
  "fee0d2fc9272de2d26",
  "fee5d9fcae91fb6a4acb181d",
  "fee5d9fcae91fb6a4ade2d26a50f15",
  "fee5d9fcbba1fc9272fb6a4ade2d26a50f15",
  "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d",
  "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d",
  "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d"
).map(_colors_js__WEBPACK_IMPORTED_MODULE_0__["default"]);

/* harmony default export */ __webpack_exports__["default"] = (Object(_ramp_js__WEBPACK_IMPORTED_MODULE_1__["default"])(scheme));


/***/ }),

/***/ "./node_modules/d3/d3.js":
/*!*******************************!*\
  !*** ./node_modules/d3/d3.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {
  var d3 = {
    version: "3.5.17"
  };
  var d3_arraySlice = [].slice, d3_array = function(list) {
    return d3_arraySlice.call(list);
  };
  var d3_document = this.document;
  function d3_documentElement(node) {
    return node && (node.ownerDocument || node.document || node).documentElement;
  }
  function d3_window(node) {
    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);
  }
  if (d3_document) {
    try {
      d3_array(d3_document.documentElement.childNodes)[0].nodeType;
    } catch (e) {
      d3_array = function(list) {
        var i = list.length, array = new Array(i);
        while (i--) array[i] = list[i];
        return array;
      };
    }
  }
  if (!Date.now) Date.now = function() {
    return +new Date();
  };
  if (d3_document) {
    try {
      d3_document.createElement("DIV").style.setProperty("opacity", 0, "");
    } catch (error) {
      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
      d3_element_prototype.setAttribute = function(name, value) {
        d3_element_setAttribute.call(this, name, value + "");
      };
      d3_element_prototype.setAttributeNS = function(space, local, value) {
        d3_element_setAttributeNS.call(this, space, local, value + "");
      };
      d3_style_prototype.setProperty = function(name, value, priority) {
        d3_style_setProperty.call(this, name, value + "", priority);
      };
    }
  }
  d3.ascending = d3_ascending;
  function d3_ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }
  d3.descending = function(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  };
  d3.min = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
    }
    return a;
  };
  d3.max = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
    }
    return a;
  };
  d3.extent = function(array, f) {
    var i = -1, n = array.length, a, b, c;
    if (arguments.length === 1) {
      while (++i < n) if ((b = array[i]) != null && b >= b) {
        a = c = b;
        break;
      }
      while (++i < n) if ((b = array[i]) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    } else {
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {
        a = c = b;
        break;
      }
      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    }
    return [ a, c ];
  };
  function d3_number(x) {
    return x === null ? NaN : +x;
  }
  function d3_numeric(x) {
    return !isNaN(x);
  }
  d3.sum = function(array, f) {
    var s = 0, n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = +array[i])) s += a;
    } else {
      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;
    }
    return s;
  };
  d3.mean = function(array, f) {
    var s = 0, n = array.length, a, i = -1, j = n;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;
    } else {
      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;
    }
    if (j) return s / j;
  };
  d3.quantile = function(values, p) {
    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
    return e ? v + e * (values[h] - v) : v;
  };
  d3.median = function(array, f) {
    var numbers = [], n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);
    } else {
      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);
    }
    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);
  };
  d3.variance = function(array, f) {
    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;
    if (arguments.length === 1) {
      while (++i < n) {
        if (d3_numeric(a = d3_number(array[i]))) {
          d = a - m;
          m += d / ++j;
          s += d * (a - m);
        }
      }
    } else {
      while (++i < n) {
        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {
          d = a - m;
          m += d / ++j;
          s += d * (a - m);
        }
      }
    }
    if (j > 1) return s / (j - 1);
  };
  d3.deviation = function() {
    var v = d3.variance.apply(this, arguments);
    return v ? Math.sqrt(v) : v;
  };
  function d3_bisector(compare) {
    return {
      left: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
        }
        return lo;
      },
      right: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
        }
        return lo;
      }
    };
  }
  var d3_bisect = d3_bisector(d3_ascending);
  d3.bisectLeft = d3_bisect.left;
  d3.bisect = d3.bisectRight = d3_bisect.right;
  d3.bisector = function(f) {
    return d3_bisector(f.length === 1 ? function(d, x) {
      return d3_ascending(f(d), x);
    } : f);
  };
  d3.shuffle = function(array, i0, i1) {
    if ((m = arguments.length) < 3) {
      i1 = array.length;
      if (m < 2) i0 = 0;
    }
    var m = i1 - i0, t, i;
    while (m) {
      i = Math.random() * m-- | 0;
      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;
    }
    return array;
  };
  d3.permute = function(array, indexes) {
    var i = indexes.length, permutes = new Array(i);
    while (i--) permutes[i] = array[indexes[i]];
    return permutes;
  };
  d3.pairs = function(array) {
    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
    return pairs;
  };
  d3.transpose = function(matrix) {
    if (!(n = matrix.length)) return [];
    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {
      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {
        row[j] = matrix[j][i];
      }
    }
    return transpose;
  };
  function d3_transposeLength(d) {
    return d.length;
  }
  d3.zip = function() {
    return d3.transpose(arguments);
  };
  d3.keys = function(map) {
    var keys = [];
    for (var key in map) keys.push(key);
    return keys;
  };
  d3.values = function(map) {
    var values = [];
    for (var key in map) values.push(map[key]);
    return values;
  };
  d3.entries = function(map) {
    var entries = [];
    for (var key in map) entries.push({
      key: key,
      value: map[key]
    });
    return entries;
  };
  d3.merge = function(arrays) {
    var n = arrays.length, m, i = -1, j = 0, merged, array;
    while (++i < n) j += arrays[i].length;
    merged = new Array(j);
    while (--n >= 0) {
      array = arrays[n];
      m = array.length;
      while (--m >= 0) {
        merged[--j] = array[m];
      }
    }
    return merged;
  };
  var abs = Math.abs;
  d3.range = function(start, stop, step) {
    if (arguments.length < 3) {
      step = 1;
      if (arguments.length < 2) {
        stop = start;
        start = 0;
      }
    }
    if ((stop - start) / step === Infinity) throw new Error("infinite range");
    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
    start *= k, stop *= k, step *= k;
    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
    return range;
  };
  function d3_range_integerScale(x) {
    var k = 1;
    while (x * k % 1) k *= 10;
    return k;
  }
  function d3_class(ctor, properties) {
    for (var key in properties) {
      Object.defineProperty(ctor.prototype, key, {
        value: properties[key],
        enumerable: false
      });
    }
  }
  d3.map = function(object, f) {
    var map = new d3_Map();
    if (object instanceof d3_Map) {
      object.forEach(function(key, value) {
        map.set(key, value);
      });
    } else if (Array.isArray(object)) {
      var i = -1, n = object.length, o;
      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);
    } else {
      for (var key in object) map.set(key, object[key]);
    }
    return map;
  };
  function d3_Map() {
    this._ = Object.create(null);
  }
  var d3_map_proto = "__proto__", d3_map_zero = "\x00";
  d3_class(d3_Map, {
    has: d3_map_has,
    get: function(key) {
      return this._[d3_map_escape(key)];
    },
    set: function(key, value) {
      return this._[d3_map_escape(key)] = value;
    },
    remove: d3_map_remove,
    keys: d3_map_keys,
    values: function() {
      var values = [];
      for (var key in this._) values.push(this._[key]);
      return values;
    },
    entries: function() {
      var entries = [];
      for (var key in this._) entries.push({
        key: d3_map_unescape(key),
        value: this._[key]
      });
      return entries;
    },
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);
    }
  });
  function d3_map_escape(key) {
    return (key += "") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;
  }
  function d3_map_unescape(key) {
    return (key += "")[0] === d3_map_zero ? key.slice(1) : key;
  }
  function d3_map_has(key) {
    return d3_map_escape(key) in this._;
  }
  function d3_map_remove(key) {
    return (key = d3_map_escape(key)) in this._ && delete this._[key];
  }
  function d3_map_keys() {
    var keys = [];
    for (var key in this._) keys.push(d3_map_unescape(key));
    return keys;
  }
  function d3_map_size() {
    var size = 0;
    for (var key in this._) ++size;
    return size;
  }
  function d3_map_empty() {
    for (var key in this._) return false;
    return true;
  }
  d3.nest = function() {
    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
    function map(mapType, array, depth) {
      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
      while (++i < n) {
        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
          values.push(object);
        } else {
          valuesByKey.set(keyValue, [ object ]);
        }
      }
      if (mapType) {
        object = mapType();
        setter = function(keyValue, values) {
          object.set(keyValue, map(mapType, values, depth));
        };
      } else {
        object = {};
        setter = function(keyValue, values) {
          object[keyValue] = map(mapType, values, depth);
        };
      }
      valuesByKey.forEach(setter);
      return object;
    }
    function entries(map, depth) {
      if (depth >= keys.length) return map;
      var array = [], sortKey = sortKeys[depth++];
      map.forEach(function(key, keyMap) {
        array.push({
          key: key,
          values: entries(keyMap, depth)
        });
      });
      return sortKey ? array.sort(function(a, b) {
        return sortKey(a.key, b.key);
      }) : array;
    }
    nest.map = function(array, mapType) {
      return map(mapType, array, 0);
    };
    nest.entries = function(array) {
      return entries(map(d3.map, array, 0), 0);
    };
    nest.key = function(d) {
      keys.push(d);
      return nest;
    };
    nest.sortKeys = function(order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    };
    nest.sortValues = function(order) {
      sortValues = order;
      return nest;
    };
    nest.rollup = function(f) {
      rollup = f;
      return nest;
    };
    return nest;
  };
  d3.set = function(array) {
    var set = new d3_Set();
    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
    return set;
  };
  function d3_Set() {
    this._ = Object.create(null);
  }
  d3_class(d3_Set, {
    has: d3_map_has,
    add: function(key) {
      this._[d3_map_escape(key += "")] = true;
      return key;
    },
    remove: d3_map_remove,
    values: d3_map_keys,
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var key in this._) f.call(this, d3_map_unescape(key));
    }
  });
  d3.behavior = {};
  function d3_identity(d) {
    return d;
  }
  d3.rebind = function(target, source) {
    var i = 1, n = arguments.length, method;
    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
    return target;
  };
  function d3_rebind(target, source, method) {
    return function() {
      var value = method.apply(source, arguments);
      return value === source ? target : value;
    };
  }
  function d3_vendorSymbol(object, name) {
    if (name in object) return name;
    name = name.charAt(0).toUpperCase() + name.slice(1);
    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
      var prefixName = d3_vendorPrefixes[i] + name;
      if (prefixName in object) return prefixName;
    }
  }
  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
  function d3_noop() {}
  d3.dispatch = function() {
    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    return dispatch;
  };
  function d3_dispatch() {}
  d3_dispatch.prototype.on = function(type, listener) {
    var i = type.indexOf("."), name = "";
    if (i >= 0) {
      name = type.slice(i + 1);
      type = type.slice(0, i);
    }
    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
    if (arguments.length === 2) {
      if (listener == null) for (type in this) {
        if (this.hasOwnProperty(type)) this[type].on(name, null);
      }
      return this;
    }
  };
  function d3_dispatch_event(dispatch) {
    var listeners = [], listenerByName = new d3_Map();
    function event() {
      var z = listeners, i = -1, n = z.length, l;
      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
      return dispatch;
    }
    event.on = function(name, listener) {
      var l = listenerByName.get(name), i;
      if (arguments.length < 2) return l && l.on;
      if (l) {
        l.on = null;
        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
        listenerByName.remove(name);
      }
      if (listener) listeners.push(listenerByName.set(name, {
        on: listener
      }));
      return dispatch;
    };
    return event;
  }
  d3.event = null;
  function d3_eventPreventDefault() {
    d3.event.preventDefault();
  }
  function d3_eventSource() {
    var e = d3.event, s;
    while (s = e.sourceEvent) e = s;
    return e;
  }
  function d3_eventDispatch(target) {
    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    dispatch.of = function(thiz, argumentz) {
      return function(e1) {
        try {
          var e0 = e1.sourceEvent = d3.event;
          e1.target = target;
          d3.event = e1;
          dispatch[e1.type].apply(thiz, argumentz);
        } finally {
          d3.event = e0;
        }
      };
    };
    return dispatch;
  }
  d3.requote = function(s) {
    return s.replace(d3_requote_re, "\\$&");
  };
  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
  var d3_subclass = {}.__proto__ ? function(object, prototype) {
    object.__proto__ = prototype;
  } : function(object, prototype) {
    for (var property in prototype) object[property] = prototype[property];
  };
  function d3_selection(groups) {
    d3_subclass(groups, d3_selectionPrototype);
    return groups;
  }
  var d3_select = function(s, n) {
    return n.querySelector(s);
  }, d3_selectAll = function(s, n) {
    return n.querySelectorAll(s);
  }, d3_selectMatches = function(n, s) {
    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, "matchesSelector")];
    d3_selectMatches = function(n, s) {
      return d3_selectMatcher.call(n, s);
    };
    return d3_selectMatches(n, s);
  };
  if (typeof Sizzle === "function") {
    d3_select = function(s, n) {
      return Sizzle(s, n)[0] || null;
    };
    d3_selectAll = Sizzle;
    d3_selectMatches = Sizzle.matchesSelector;
  }
  d3.selection = function() {
    return d3.select(d3_document.documentElement);
  };
  var d3_selectionPrototype = d3.selection.prototype = [];
  d3_selectionPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, group, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selector(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_select(selector, this);
    };
  }
  d3_selectionPrototype.selectAll = function(selector) {
    var subgroups = [], subgroup, node;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
          subgroup.parentNode = node;
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selectorAll(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_selectAll(selector, this);
    };
  }
  var d3_nsXhtml = "http://www.w3.org/1999/xhtml";
  var d3_nsPrefix = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: d3_nsXhtml,
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };
  d3.ns = {
    prefix: d3_nsPrefix,
    qualify: function(name) {
      var i = name.indexOf(":"), prefix = name;
      if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
      return d3_nsPrefix.hasOwnProperty(prefix) ? {
        space: d3_nsPrefix[prefix],
        local: name
      } : name;
    }
  };
  d3_selectionPrototype.attr = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node();
        name = d3.ns.qualify(name);
        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
      }
      for (value in name) this.each(d3_selection_attr(value, name[value]));
      return this;
    }
    return this.each(d3_selection_attr(name, value));
  };
  function d3_selection_attr(name, value) {
    name = d3.ns.qualify(name);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrConstant() {
      this.setAttribute(name, value);
    }
    function attrConstantNS() {
      this.setAttributeNS(name.space, name.local, value);
    }
    function attrFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
    }
    function attrFunctionNS() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
    }
    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
  }
  function d3_collapse(s) {
    return s.trim().replace(/\s+/g, " ");
  }
  d3_selectionPrototype.classed = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
        if (value = node.classList) {
          while (++i < n) if (!value.contains(name[i])) return false;
        } else {
          value = node.getAttribute("class");
          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
        }
        return true;
      }
      for (value in name) this.each(d3_selection_classed(value, name[value]));
      return this;
    }
    return this.each(d3_selection_classed(name, value));
  };
  function d3_selection_classedRe(name) {
    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
  }
  function d3_selection_classes(name) {
    return (name + "").trim().split(/^|\s+/);
  }
  function d3_selection_classed(name, value) {
    name = d3_selection_classes(name).map(d3_selection_classedName);
    var n = name.length;
    function classedConstant() {
      var i = -1;
      while (++i < n) name[i](this, value);
    }
    function classedFunction() {
      var i = -1, x = value.apply(this, arguments);
      while (++i < n) name[i](this, x);
    }
    return typeof value === "function" ? classedFunction : classedConstant;
  }
  function d3_selection_classedName(name) {
    var re = d3_selection_classedRe(name);
    return function(node, value) {
      if (c = node.classList) return value ? c.add(name) : c.remove(name);
      var c = node.getAttribute("class") || "";
      if (value) {
        re.lastIndex = 0;
        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
      } else {
        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
      }
    };
  }
  d3_selectionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
        return this;
      }
      if (n < 2) {
        var node = this.node();
        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);
      }
      priority = "";
    }
    return this.each(d3_selection_style(name, value, priority));
  };
  function d3_selection_style(name, value, priority) {
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleConstant() {
      this.style.setProperty(name, value, priority);
    }
    function styleFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
    }
    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
  }
  d3_selectionPrototype.property = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") return this.node()[name];
      for (value in name) this.each(d3_selection_property(value, name[value]));
      return this;
    }
    return this.each(d3_selection_property(name, value));
  };
  function d3_selection_property(name, value) {
    function propertyNull() {
      delete this[name];
    }
    function propertyConstant() {
      this[name] = value;
    }
    function propertyFunction() {
      var x = value.apply(this, arguments);
      if (x == null) delete this[name]; else this[name] = x;
    }
    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
  }
  d3_selectionPrototype.text = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    } : value == null ? function() {
      this.textContent = "";
    } : function() {
      this.textContent = value;
    }) : this.node().textContent;
  };
  d3_selectionPrototype.html = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    } : value == null ? function() {
      this.innerHTML = "";
    } : function() {
      this.innerHTML = value;
    }) : this.node().innerHTML;
  };
  d3_selectionPrototype.append = function(name) {
    name = d3_selection_creator(name);
    return this.select(function() {
      return this.appendChild(name.apply(this, arguments));
    });
  };
  function d3_selection_creator(name) {
    function create() {
      var document = this.ownerDocument, namespace = this.namespaceURI;
      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);
    }
    function createNS() {
      return this.ownerDocument.createElementNS(name.space, name.local);
    }
    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;
  }
  d3_selectionPrototype.insert = function(name, before) {
    name = d3_selection_creator(name);
    before = d3_selection_selector(before);
    return this.select(function() {
      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
    });
  };
  d3_selectionPrototype.remove = function() {
    return this.each(d3_selectionRemove);
  };
  function d3_selectionRemove() {
    var parent = this.parentNode;
    if (parent) parent.removeChild(this);
  }
  d3_selectionPrototype.data = function(value, key) {
    var i = -1, n = this.length, group, node;
    if (!arguments.length) {
      value = new Array(n = (group = this[0]).length);
      while (++i < n) {
        if (node = group[i]) {
          value[i] = node.__data__;
        }
      }
      return value;
    }
    function bind(group, groupData) {
      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
      if (key) {
        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;
        for (i = -1; ++i < n; ) {
          if (node = group[i]) {
            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {
              exitNodes[i] = node;
            } else {
              nodeByKeyValue.set(keyValue, node);
            }
            keyValues[i] = keyValue;
          }
        }
        for (i = -1; ++i < m; ) {
          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          } else if (node !== true) {
            updateNodes[i] = node;
            node.__data__ = nodeData;
          }
          nodeByKeyValue.set(keyValue, true);
        }
        for (i = -1; ++i < n; ) {
          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {
            exitNodes[i] = group[i];
          }
        }
      } else {
        for (i = -1; ++i < n0; ) {
          node = group[i];
          nodeData = groupData[i];
          if (node) {
            node.__data__ = nodeData;
            updateNodes[i] = node;
          } else {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
        }
        for (;i < m; ++i) {
          enterNodes[i] = d3_selection_dataNode(groupData[i]);
        }
        for (;i < n; ++i) {
          exitNodes[i] = group[i];
        }
      }
      enterNodes.update = updateNodes;
      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
      enter.push(enterNodes);
      update.push(updateNodes);
      exit.push(exitNodes);
    }
    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
    if (typeof value === "function") {
      while (++i < n) {
        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
      }
    } else {
      while (++i < n) {
        bind(group = this[i], value);
      }
    }
    update.enter = function() {
      return enter;
    };
    update.exit = function() {
      return exit;
    };
    return update;
  };
  function d3_selection_dataNode(data) {
    return {
      __data__: data
    };
  }
  d3_selectionPrototype.datum = function(value) {
    return arguments.length ? this.property("__data__", value) : this.property("__data__");
  };
  d3_selectionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_filter(selector) {
    return function() {
      return d3_selectMatches(this, selector);
    };
  }
  d3_selectionPrototype.order = function() {
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
        if (node = group[i]) {
          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
          next = node;
        }
      }
    }
    return this;
  };
  d3_selectionPrototype.sort = function(comparator) {
    comparator = d3_selection_sortComparator.apply(this, arguments);
    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
    return this.order();
  };
  function d3_selection_sortComparator(comparator) {
    if (!arguments.length) comparator = d3_ascending;
    return function(a, b) {
      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
    };
  }
  d3_selectionPrototype.each = function(callback) {
    return d3_selection_each(this, function(node, i, j) {
      callback.call(node, node.__data__, i, j);
    });
  };
  function d3_selection_each(groups, callback) {
    for (var j = 0, m = groups.length; j < m; j++) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
        if (node = group[i]) callback(node, i, j);
      }
    }
    return groups;
  }
  d3_selectionPrototype.call = function(callback) {
    var args = d3_array(arguments);
    callback.apply(args[0] = this, args);
    return this;
  };
  d3_selectionPrototype.empty = function() {
    return !this.node();
  };
  d3_selectionPrototype.node = function() {
    for (var j = 0, m = this.length; j < m; j++) {
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        var node = group[i];
        if (node) return node;
      }
    }
    return null;
  };
  d3_selectionPrototype.size = function() {
    var n = 0;
    d3_selection_each(this, function() {
      ++n;
    });
    return n;
  };
  function d3_selection_enter(selection) {
    d3_subclass(selection, d3_selection_enterPrototype);
    return selection;
  }
  var d3_selection_enterPrototype = [];
  d3.selection.enter = d3_selection_enter;
  d3.selection.enter.prototype = d3_selection_enterPrototype;
  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
  d3_selection_enterPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, upgroup, group, node;
    for (var j = -1, m = this.length; ++j < m; ) {
      upgroup = (group = this[j]).update;
      subgroups.push(subgroup = []);
      subgroup.parentNode = group.parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
          subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  d3_selection_enterPrototype.insert = function(name, before) {
    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
    return d3_selectionPrototype.insert.call(this, name, before);
  };
  function d3_selection_enterInsertBefore(enter) {
    var i0, j0;
    return function(d, i, j) {
      var group = enter[j].update, n = group.length, node;
      if (j != j0) j0 = j, i0 = 0;
      if (i >= i0) i0 = i + 1;
      while (!(node = group[i0]) && ++i0 < n) ;
      return node;
    };
  }
  d3.select = function(node) {
    var group;
    if (typeof node === "string") {
      group = [ d3_select(node, d3_document) ];
      group.parentNode = d3_document.documentElement;
    } else {
      group = [ node ];
      group.parentNode = d3_documentElement(node);
    }
    return d3_selection([ group ]);
  };
  d3.selectAll = function(nodes) {
    var group;
    if (typeof nodes === "string") {
      group = d3_array(d3_selectAll(nodes, d3_document));
      group.parentNode = d3_document.documentElement;
    } else {
      group = d3_array(nodes);
      group.parentNode = null;
    }
    return d3_selection([ group ]);
  };
  d3_selectionPrototype.on = function(type, listener, capture) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof type !== "string") {
        if (n < 2) listener = false;
        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
        return this;
      }
      if (n < 2) return (n = this.node()["__on" + type]) && n._;
      capture = false;
    }
    return this.each(d3_selection_on(type, listener, capture));
  };
  function d3_selection_on(type, listener, capture) {
    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
    if (i > 0) type = type.slice(0, i);
    var filter = d3_selection_onFilters.get(type);
    if (filter) type = filter, wrap = d3_selection_onFilter;
    function onRemove() {
      var l = this[name];
      if (l) {
        this.removeEventListener(type, l, l.$);
        delete this[name];
      }
    }
    function onAdd() {
      var l = wrap(listener, d3_array(arguments));
      onRemove.call(this);
      this.addEventListener(type, this[name] = l, l.$ = capture);
      l._ = listener;
    }
    function removeAll() {
      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
      for (var name in this) {
        if (match = name.match(re)) {
          var l = this[name];
          this.removeEventListener(match[1], l, l.$);
          delete this[name];
        }
      }
    }
    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
  }
  var d3_selection_onFilters = d3.map({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  });
  if (d3_document) {
    d3_selection_onFilters.forEach(function(k) {
      if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
    });
  }
  function d3_selection_onListener(listener, argumentz) {
    return function(e) {
      var o = d3.event;
      d3.event = e;
      argumentz[0] = this.__data__;
      try {
        listener.apply(this, argumentz);
      } finally {
        d3.event = o;
      }
    };
  }
  function d3_selection_onFilter(listener, argumentz) {
    var l = d3_selection_onListener(listener, argumentz);
    return function(e) {
      var target = this, related = e.relatedTarget;
      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
        l.call(target, e);
      }
    };
  }
  var d3_event_dragSelect, d3_event_dragId = 0;
  function d3_event_dragSuppress(node) {
    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window(node)).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
    if (d3_event_dragSelect == null) {
      d3_event_dragSelect = "onselectstart" in node ? false : d3_vendorSymbol(node.style, "userSelect");
    }
    if (d3_event_dragSelect) {
      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];
      style[d3_event_dragSelect] = "none";
    }
    return function(suppressClick) {
      w.on(name, null);
      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
      if (suppressClick) {
        var off = function() {
          w.on(click, null);
        };
        w.on(click, function() {
          d3_eventPreventDefault();
          off();
        }, true);
        setTimeout(off, 0);
      }
    };
  }
  d3.mouse = function(container) {
    return d3_mousePoint(container, d3_eventSource());
  };
  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;
  function d3_mousePoint(container, e) {
    if (e.changedTouches) e = e.changedTouches[0];
    var svg = container.ownerSVGElement || container;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      if (d3_mouse_bug44083 < 0) {
        var window = d3_window(container);
        if (window.scrollX || window.scrollY) {
          svg = d3.select("body").append("svg").style({
            position: "absolute",
            top: 0,
            left: 0,
            margin: 0,
            padding: 0,
            border: "none"
          }, "important");
          var ctm = svg[0][0].getScreenCTM();
          d3_mouse_bug44083 = !(ctm.f || ctm.e);
          svg.remove();
        }
      }
      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, 
      point.y = e.clientY;
      point = point.matrixTransform(container.getScreenCTM().inverse());
      return [ point.x, point.y ];
    }
    var rect = container.getBoundingClientRect();
    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
  }
  d3.touch = function(container, touches, identifier) {
    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
      if ((touch = touches[i]).identifier === identifier) {
        return d3_mousePoint(container, touch);
      }
    }
  };
  d3.behavior.drag = function() {
    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, "touchmove", "touchend");
    function drag() {
      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
    }
    function dragstart(id, position, subject, move, end) {
      return function() {
        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);
        if (origin) {
          dragOffset = origin.apply(that, arguments);
          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
        } else {
          dragOffset = [ 0, 0 ];
        }
        dispatch({
          type: "dragstart"
        });
        function moved() {
          var position1 = position(parent, dragId), dx, dy;
          if (!position1) return;
          dx = position1[0] - position0[0];
          dy = position1[1] - position0[1];
          dragged |= dx | dy;
          position0 = position1;
          dispatch({
            type: "drag",
            x: position1[0] + dragOffset[0],
            y: position1[1] + dragOffset[1],
            dx: dx,
            dy: dy
          });
        }
        function ended() {
          if (!position(parent, dragId)) return;
          dragSubject.on(move + dragName, null).on(end + dragName, null);
          dragRestore(dragged);
          dispatch({
            type: "dragend"
          });
        }
      };
    }
    drag.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return drag;
    };
    return d3.rebind(drag, event, "on");
  };
  function d3_behavior_dragTouchId() {
    return d3.event.changedTouches[0].identifier;
  }
  d3.touches = function(container, touches) {
    if (arguments.length < 2) touches = d3_eventSource().touches;
    return touches ? d3_array(touches).map(function(touch) {
      var point = d3_mousePoint(container, touch);
      point.identifier = touch.identifier;
      return point;
    }) : [];
  };
  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;
  function d3_sgn(x) {
    return x > 0 ? 1 : x < 0 ? -1 : 0;
  }
  function d3_cross2d(a, b, c) {
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
  }
  function d3_acos(x) {
    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
  }
  function d3_asin(x) {
    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
  }
  function d3_sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
  }
  function d3_cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
  }
  function d3_tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
  }
  function d3_haversin(x) {
    return (x = Math.sin(x / 2)) * x;
  }
  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
  d3.interpolateZoom = function(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
    if (d2 < ε2) {
      S = Math.log(w1 / w0) / ρ;
      i = function(t) {
        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];
      };
    } else {
      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / ρ;
      i = function(t) {
        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
      };
    }
    i.duration = S * 1e3;
    return i;
  };
  d3.behavior.zoom = function() {
    var view = {
      x: 0,
      y: 0,
      k: 1
    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
    if (!d3_behavior_zoomWheel) {
      d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
      }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
        return d3.event.wheelDelta;
      }, "mousewheel") : (d3_behavior_zoomDelta = function() {
        return -d3.event.detail;
      }, "MozMousePixelScroll");
    }
    function zoom(g) {
      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
    }
    zoom.event = function(g) {
      g.each(function() {
        var dispatch = event.of(this, arguments), view1 = view;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.zoom", function() {
            view = this.__chart__ || {
              x: 0,
              y: 0,
              k: 1
            };
            zoomstarted(dispatch);
          }).tween("zoom:zoom", function() {
            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
            return function(t) {
              var l = i(t), k = dx / l[2];
              this.__chart__ = view = {
                x: cx - l[0] * k,
                y: cy - l[1] * k,
                k: k
              };
              zoomed(dispatch);
            };
          }).each("interrupt.zoom", function() {
            zoomended(dispatch);
          }).each("end.zoom", function() {
            zoomended(dispatch);
          });
        } else {
          this.__chart__ = view;
          zoomstarted(dispatch);
          zoomed(dispatch);
          zoomended(dispatch);
        }
      });
    };
    zoom.translate = function(_) {
      if (!arguments.length) return [ view.x, view.y ];
      view = {
        x: +_[0],
        y: +_[1],
        k: view.k
      };
      rescale();
      return zoom;
    };
    zoom.scale = function(_) {
      if (!arguments.length) return view.k;
      view = {
        x: view.x,
        y: view.y,
        k: null
      };
      scaleTo(+_);
      rescale();
      return zoom;
    };
    zoom.scaleExtent = function(_) {
      if (!arguments.length) return scaleExtent;
      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.center = function(_) {
      if (!arguments.length) return center;
      center = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.size = function(_) {
      if (!arguments.length) return size;
      size = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.duration = function(_) {
      if (!arguments.length) return duration;
      duration = +_;
      return zoom;
    };
    zoom.x = function(z) {
      if (!arguments.length) return x1;
      x1 = z;
      x0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    zoom.y = function(z) {
      if (!arguments.length) return y1;
      y1 = z;
      y0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    function location(p) {
      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
    }
    function point(l) {
      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
    }
    function scaleTo(s) {
      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
    }
    function translateTo(p, l) {
      l = point(l);
      view.x += p[0] - l[0];
      view.y += p[1] - l[1];
    }
    function zoomTo(that, p, l, k) {
      that.__chart__ = {
        x: view.x,
        y: view.y,
        k: view.k
      };
      scaleTo(Math.pow(2, k));
      translateTo(center0 = p, l);
      that = d3.select(that);
      if (duration > 0) that = that.transition().duration(duration);
      that.call(zoom.event);
    }
    function rescale() {
      if (x1) x1.domain(x0.range().map(function(x) {
        return (x - view.x) / view.k;
      }).map(x0.invert));
      if (y1) y1.domain(y0.range().map(function(y) {
        return (y - view.y) / view.k;
      }).map(y0.invert));
    }
    function zoomstarted(dispatch) {
      if (!zooming++) dispatch({
        type: "zoomstart"
      });
    }
    function zoomed(dispatch) {
      rescale();
      dispatch({
        type: "zoom",
        scale: view.k,
        translate: [ view.x, view.y ]
      });
    }
    function zoomended(dispatch) {
      if (!--zooming) dispatch({
        type: "zoomend"
      }), center0 = null;
    }
    function mousedowned() {
      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);
      d3_selection_interrupt.call(that);
      zoomstarted(dispatch);
      function moved() {
        dragged = 1;
        translateTo(d3.mouse(that), location0);
        zoomed(dispatch);
      }
      function ended() {
        subject.on(mousemove, null).on(mouseup, null);
        dragRestore(dragged);
        zoomended(dispatch);
      }
    }
    function touchstarted() {
      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);
      started();
      zoomstarted(dispatch);
      subject.on(mousedown, null).on(touchstart, started);
      function relocate() {
        var touches = d3.touches(that);
        scale0 = view.k;
        touches.forEach(function(t) {
          if (t.identifier in locations0) locations0[t.identifier] = location(t);
        });
        return touches;
      }
      function started() {
        var target = d3.event.target;
        d3.select(target).on(touchmove, moved).on(touchend, ended);
        targets.push(target);
        var changed = d3.event.changedTouches;
        for (var i = 0, n = changed.length; i < n; ++i) {
          locations0[changed[i].identifier] = null;
        }
        var touches = relocate(), now = Date.now();
        if (touches.length === 1) {
          if (now - touchtime < 500) {
            var p = touches[0];
            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);
            d3_eventPreventDefault();
          }
          touchtime = now;
        } else if (touches.length > 1) {
          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
          distance0 = dx * dx + dy * dy;
        }
      }
      function moved() {
        var touches = d3.touches(that), p0, l0, p1, l1;
        d3_selection_interrupt.call(that);
        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
          p1 = touches[i];
          if (l1 = locations0[p1.identifier]) {
            if (l0) break;
            p0 = p1, l0 = l1;
          }
        }
        if (l1) {
          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
          scaleTo(scale1 * scale0);
        }
        touchtime = null;
        translateTo(p0, l0);
        zoomed(dispatch);
      }
      function ended() {
        if (d3.event.touches.length) {
          var changed = d3.event.changedTouches;
          for (var i = 0, n = changed.length; i < n; ++i) {
            delete locations0[changed[i].identifier];
          }
          for (var identifier in locations0) {
            return void relocate();
          }
        }
        d3.selectAll(targets).on(zoomName, null);
        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
        dragRestore();
        zoomended(dispatch);
      }
    }
    function mousewheeled() {
      var dispatch = event.of(this, arguments);
      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), 
      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);
      mousewheelTimer = setTimeout(function() {
        mousewheelTimer = null;
        zoomended(dispatch);
      }, 50);
      d3_eventPreventDefault();
      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
      translateTo(center0, translate0);
      zoomed(dispatch);
    }
    function dblclicked() {
      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;
      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);
    }
    return d3.rebind(zoom, event, "on");
  };
  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;
  d3.color = d3_color;
  function d3_color() {}
  d3_color.prototype.toString = function() {
    return this.rgb() + "";
  };
  d3.hsl = d3_hsl;
  function d3_hsl(h, s, l) {
    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);
  }
  var d3_hslPrototype = d3_hsl.prototype = new d3_color();
  d3_hslPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, this.l / k);
  };
  d3_hslPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_hsl(this.h, this.s, k * this.l);
  };
  d3_hslPrototype.rgb = function() {
    return d3_hsl_rgb(this.h, this.s, this.l);
  };
  function d3_hsl_rgb(h, s, l) {
    var m1, m2;
    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
    l = l < 0 ? 0 : l > 1 ? 1 : l;
    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
    m1 = 2 * l - m2;
    function v(h) {
      if (h > 360) h -= 360; else if (h < 0) h += 360;
      if (h < 60) return m1 + (m2 - m1) * h / 60;
      if (h < 180) return m2;
      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
      return m1;
    }
    function vv(h) {
      return Math.round(v(h) * 255);
    }
    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));
  }
  d3.hcl = d3_hcl;
  function d3_hcl(h, c, l) {
    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);
  }
  var d3_hclPrototype = d3_hcl.prototype = new d3_color();
  d3_hclPrototype.brighter = function(k) {
    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.darker = function(k) {
    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.rgb = function() {
    return d3_hcl_lab(this.h, this.c, this.l).rgb();
  };
  function d3_hcl_lab(h, c, l) {
    if (isNaN(h)) h = 0;
    if (isNaN(c)) c = 0;
    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
  }
  d3.lab = d3_lab;
  function d3_lab(l, a, b) {
    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);
  }
  var d3_lab_K = 18;
  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
  var d3_labPrototype = d3_lab.prototype = new d3_color();
  d3_labPrototype.brighter = function(k) {
    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.darker = function(k) {
    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.rgb = function() {
    return d3_lab_rgb(this.l, this.a, this.b);
  };
  function d3_lab_rgb(l, a, b) {
    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
    x = d3_lab_xyz(x) * d3_lab_X;
    y = d3_lab_xyz(y) * d3_lab_Y;
    z = d3_lab_xyz(z) * d3_lab_Z;
    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
  }
  function d3_lab_hcl(l, a, b) {
    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);
  }
  function d3_lab_xyz(x) {
    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
  }
  function d3_xyz_lab(x) {
    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
  }
  function d3_xyz_rgb(r) {
    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
  }
  d3.rgb = d3_rgb;
  function d3_rgb(r, g, b) {
    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);
  }
  function d3_rgbNumber(value) {
    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);
  }
  function d3_rgbString(value) {
    return d3_rgbNumber(value) + "";
  }
  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();
  d3_rgbPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    var r = this.r, g = this.g, b = this.b, i = 30;
    if (!r && !g && !b) return new d3_rgb(i, i, i);
    if (r && r < i) r = i;
    if (g && g < i) g = i;
    if (b && b < i) b = i;
    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));
  };
  d3_rgbPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return new d3_rgb(k * this.r, k * this.g, k * this.b);
  };
  d3_rgbPrototype.hsl = function() {
    return d3_rgb_hsl(this.r, this.g, this.b);
  };
  d3_rgbPrototype.toString = function() {
    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
  };
  function d3_rgb_hex(v) {
    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
  }
  function d3_rgb_parse(format, rgb, hsl) {
    var r = 0, g = 0, b = 0, m1, m2, color;
    m1 = /([a-z]+)\((.*)\)/.exec(format = format.toLowerCase());
    if (m1) {
      m2 = m1[2].split(",");
      switch (m1[1]) {
       case "hsl":
        {
          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
        }

       case "rgb":
        {
          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
        }
      }
    }
    if (color = d3_rgb_names.get(format)) {
      return rgb(color.r, color.g, color.b);
    }
    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.slice(1), 16))) {
      if (format.length === 4) {
        r = (color & 3840) >> 4;
        r = r >> 4 | r;
        g = color & 240;
        g = g >> 4 | g;
        b = color & 15;
        b = b << 4 | b;
      } else if (format.length === 7) {
        r = (color & 16711680) >> 16;
        g = (color & 65280) >> 8;
        b = color & 255;
      }
    }
    return rgb(r, g, b);
  }
  function d3_rgb_hsl(r, g, b) {
    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
    if (d) {
      s = l < .5 ? d / (max + min) : d / (2 - max - min);
      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
      h *= 60;
    } else {
      h = NaN;
      s = l > 0 && l < 1 ? 0 : h;
    }
    return new d3_hsl(h, s, l);
  }
  function d3_rgb_lab(r, g, b) {
    r = d3_rgb_xyz(r);
    g = d3_rgb_xyz(g);
    b = d3_rgb_xyz(b);
    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
  }
  function d3_rgb_xyz(r) {
    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
  }
  function d3_rgb_parseNumber(c) {
    var f = parseFloat(c);
    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
  }
  var d3_rgb_names = d3.map({
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    rebeccapurple: 6697881,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  });
  d3_rgb_names.forEach(function(key, value) {
    d3_rgb_names.set(key, d3_rgbNumber(value));
  });
  function d3_functor(v) {
    return typeof v === "function" ? v : function() {
      return v;
    };
  }
  d3.functor = d3_functor;
  d3.xhr = d3_xhrType(d3_identity);
  function d3_xhrType(response) {
    return function(url, mimeType, callback) {
      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
      mimeType = null;
      return d3_xhr(url, mimeType, response, callback);
    };
  }
  function d3_xhr(url, mimeType, response, callback) {
    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
    if (this.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
      request.readyState > 3 && respond();
    };
    function respond() {
      var status = request.status, result;
      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {
        try {
          result = response.call(xhr, request);
        } catch (e) {
          dispatch.error.call(xhr, e);
          return;
        }
        dispatch.load.call(xhr, result);
      } else {
        dispatch.error.call(xhr, request);
      }
    }
    request.onprogress = function(event) {
      var o = d3.event;
      d3.event = event;
      try {
        dispatch.progress.call(xhr, request);
      } finally {
        d3.event = o;
      }
    };
    xhr.header = function(name, value) {
      name = (name + "").toLowerCase();
      if (arguments.length < 2) return headers[name];
      if (value == null) delete headers[name]; else headers[name] = value + "";
      return xhr;
    };
    xhr.mimeType = function(value) {
      if (!arguments.length) return mimeType;
      mimeType = value == null ? null : value + "";
      return xhr;
    };
    xhr.responseType = function(value) {
      if (!arguments.length) return responseType;
      responseType = value;
      return xhr;
    };
    xhr.response = function(value) {
      response = value;
      return xhr;
    };
    [ "get", "post" ].forEach(function(method) {
      xhr[method] = function() {
        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
      };
    });
    xhr.send = function(method, data, callback) {
      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
      request.open(method, url, true);
      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
      if (responseType != null) request.responseType = responseType;
      if (callback != null) xhr.on("error", callback).on("load", function(request) {
        callback(null, request);
      });
      dispatch.beforesend.call(xhr, request);
      request.send(data == null ? null : data);
      return xhr;
    };
    xhr.abort = function() {
      request.abort();
      return xhr;
    };
    d3.rebind(xhr, dispatch, "on");
    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
  }
  function d3_xhr_fixCallback(callback) {
    return callback.length === 1 ? function(error, request) {
      callback(error == null ? request : null);
    } : callback;
  }
  function d3_xhrHasResponse(request) {
    var type = request.responseType;
    return type && type !== "text" ? request.response : request.responseText;
  }
  d3.dsv = function(delimiter, mimeType) {
    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
    function dsv(url, row, callback) {
      if (arguments.length < 3) callback = row, row = null;
      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
      xhr.row = function(_) {
        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
      };
      return xhr;
    }
    function response(request) {
      return dsv.parse(request.responseText);
    }
    function typedResponse(f) {
      return function(request) {
        return dsv.parse(request.responseText, f);
      };
    }
    dsv.parse = function(text, f) {
      var o;
      return dsv.parseRows(text, function(row, i) {
        if (o) return o(row, i - 1);
        var a = new Function("d", "return {" + row.map(function(name, i) {
          return JSON.stringify(name) + ": d[" + i + "]";
        }).join(",") + "}");
        o = f ? function(row, i) {
          return f(a(row), i);
        } : a;
      });
    };
    dsv.parseRows = function(text, f) {
      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
      function token() {
        if (I >= N) return EOF;
        if (eol) return eol = false, EOL;
        var j = I;
        if (text.charCodeAt(j) === 34) {
          var i = j;
          while (i++ < N) {
            if (text.charCodeAt(i) === 34) {
              if (text.charCodeAt(i + 1) !== 34) break;
              ++i;
            }
          }
          I = i + 2;
          var c = text.charCodeAt(i + 1);
          if (c === 13) {
            eol = true;
            if (text.charCodeAt(i + 2) === 10) ++I;
          } else if (c === 10) {
            eol = true;
          }
          return text.slice(j + 1, i).replace(/""/g, '"');
        }
        while (I < N) {
          var c = text.charCodeAt(I++), k = 1;
          if (c === 10) eol = true; else if (c === 13) {
            eol = true;
            if (text.charCodeAt(I) === 10) ++I, ++k;
          } else if (c !== delimiterCode) continue;
          return text.slice(j, I - k);
        }
        return text.slice(j);
      }
      while ((t = token()) !== EOF) {
        var a = [];
        while (t !== EOL && t !== EOF) {
          a.push(t);
          t = token();
        }
        if (f && (a = f(a, n++)) == null) continue;
        rows.push(a);
      }
      return rows;
    };
    dsv.format = function(rows) {
      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
      var fieldSet = new d3_Set(), fields = [];
      rows.forEach(function(row) {
        for (var field in row) {
          if (!fieldSet.has(field)) {
            fields.push(fieldSet.add(field));
          }
        }
      });
      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
        return fields.map(function(field) {
          return formatValue(row[field]);
        }).join(delimiter);
      })).join("\n");
    };
    dsv.formatRows = function(rows) {
      return rows.map(formatRow).join("\n");
    };
    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }
    function formatValue(text) {
      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
    }
    return dsv;
  };
  d3.csv = d3.dsv(",", "text/csv");
  d3.tsv = d3.dsv("	", "text/tab-separated-values");
  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, "requestAnimationFrame")] || function(callback) {
    setTimeout(callback, 17);
  };
  d3.timer = function() {
    d3_timer.apply(this, arguments);
  };
  function d3_timer(callback, delay, then) {
    var n = arguments.length;
    if (n < 2) delay = 0;
    if (n < 3) then = Date.now();
    var time = then + delay, timer = {
      c: callback,
      t: time,
      n: null
    };
    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
    d3_timer_queueTail = timer;
    if (!d3_timer_interval) {
      d3_timer_timeout = clearTimeout(d3_timer_timeout);
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
    return timer;
  }
  function d3_timer_step() {
    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
    if (delay > 24) {
      if (isFinite(delay)) {
        clearTimeout(d3_timer_timeout);
        d3_timer_timeout = setTimeout(d3_timer_step, delay);
      }
      d3_timer_interval = 0;
    } else {
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  }
  d3.timer.flush = function() {
    d3_timer_mark();
    d3_timer_sweep();
  };
  function d3_timer_mark() {
    var now = Date.now(), timer = d3_timer_queueHead;
    while (timer) {
      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;
      timer = timer.n;
    }
    return now;
  }
  function d3_timer_sweep() {
    var t0, t1 = d3_timer_queueHead, time = Infinity;
    while (t1) {
      if (t1.c) {
        if (t1.t < time) time = t1.t;
        t1 = (t0 = t1).n;
      } else {
        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
      }
    }
    d3_timer_queueTail = t0;
    return time;
  }
  function d3_format_precision(x, p) {
    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
  }
  d3.round = function(x, n) {
    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
  };
  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
  d3.formatPrefix = function(value, precision) {
    var i = 0;
    if (value = +value) {
      if (value < 0) value *= -1;
      if (precision) value = d3.round(value, d3_format_precision(value, precision));
      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
    }
    return d3_formatPrefixes[8 + i / 3];
  };
  function d3_formatPrefix(d, i) {
    var k = Math.pow(10, abs(8 - i) * 3);
    return {
      scale: i > 8 ? function(d) {
        return d / k;
      } : function(d) {
        return d * k;
      },
      symbol: d
    };
  }
  function d3_locale_numberFormat(locale) {
    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {
      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;
      while (i > 0 && g > 0) {
        if (length + g + 1 > width) g = Math.max(1, width - length);
        t.push(value.substring(i -= g, i + g));
        if ((length += g + 1) > width) break;
        g = locale_grouping[j = (j + 1) % locale_grouping.length];
      }
      return t.reverse().join(locale_thousands);
    } : d3_identity;
    return function(specifier) {
      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "-", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false, exponent = true;
      if (precision) precision = +precision.substring(1);
      if (zfill || fill === "0" && align === "=") {
        zfill = fill = "0";
        align = "=";
      }
      switch (type) {
       case "n":
        comma = true;
        type = "g";
        break;

       case "%":
        scale = 100;
        suffix = "%";
        type = "f";
        break;

       case "p":
        scale = 100;
        suffix = "%";
        type = "r";
        break;

       case "b":
       case "o":
       case "x":
       case "X":
        if (symbol === "#") prefix = "0" + type.toLowerCase();

       case "c":
        exponent = false;

       case "d":
        integer = true;
        precision = 0;
        break;

       case "s":
        scale = -1;
        type = "r";
        break;
      }
      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
      if (type == "r" && !precision) type = "g";
      if (precision != null) {
        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
      }
      type = d3_format_types.get(type) || d3_format_typeDefault;
      var zcomma = zfill && comma;
      return function(value) {
        var fullSuffix = suffix;
        if (integer && value % 1) return "";
        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign === "-" ? "" : sign;
        if (scale < 0) {
          var unit = d3.formatPrefix(value, precision);
          value = unit.scale(value);
          fullSuffix = unit.symbol + suffix;
        } else {
          value *= scale;
        }
        value = type(value, precision);
        var i = value.lastIndexOf("."), before, after;
        if (i < 0) {
          var j = exponent ? value.lastIndexOf("e") : -1;
          if (j < 0) before = value, after = ""; else before = value.substring(0, j), after = value.substring(j);
        } else {
          before = value.substring(0, i);
          after = locale_decimal + value.substring(i + 1);
        }
        if (!zfill && comma) before = formatGroup(before, Infinity);
        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);
        negative += prefix;
        value = before + after;
        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
      };
    };
  }
  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
  var d3_format_types = d3.map({
    b: function(x) {
      return x.toString(2);
    },
    c: function(x) {
      return String.fromCharCode(x);
    },
    o: function(x) {
      return x.toString(8);
    },
    x: function(x) {
      return x.toString(16);
    },
    X: function(x) {
      return x.toString(16).toUpperCase();
    },
    g: function(x, p) {
      return x.toPrecision(p);
    },
    e: function(x, p) {
      return x.toExponential(p);
    },
    f: function(x, p) {
      return x.toFixed(p);
    },
    r: function(x, p) {
      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
    }
  });
  function d3_format_typeDefault(x) {
    return x + "";
  }
  var d3_time = d3.time = {}, d3_date = Date;
  function d3_date_utc() {
    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
  }
  d3_date_utc.prototype = {
    getDate: function() {
      return this._.getUTCDate();
    },
    getDay: function() {
      return this._.getUTCDay();
    },
    getFullYear: function() {
      return this._.getUTCFullYear();
    },
    getHours: function() {
      return this._.getUTCHours();
    },
    getMilliseconds: function() {
      return this._.getUTCMilliseconds();
    },
    getMinutes: function() {
      return this._.getUTCMinutes();
    },
    getMonth: function() {
      return this._.getUTCMonth();
    },
    getSeconds: function() {
      return this._.getUTCSeconds();
    },
    getTime: function() {
      return this._.getTime();
    },
    getTimezoneOffset: function() {
      return 0;
    },
    valueOf: function() {
      return this._.valueOf();
    },
    setDate: function() {
      d3_time_prototype.setUTCDate.apply(this._, arguments);
    },
    setDay: function() {
      d3_time_prototype.setUTCDay.apply(this._, arguments);
    },
    setFullYear: function() {
      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
    },
    setHours: function() {
      d3_time_prototype.setUTCHours.apply(this._, arguments);
    },
    setMilliseconds: function() {
      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
    },
    setMinutes: function() {
      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
    },
    setMonth: function() {
      d3_time_prototype.setUTCMonth.apply(this._, arguments);
    },
    setSeconds: function() {
      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
    },
    setTime: function() {
      d3_time_prototype.setTime.apply(this._, arguments);
    }
  };
  var d3_time_prototype = Date.prototype;
  function d3_time_interval(local, step, number) {
    function round(date) {
      var d0 = local(date), d1 = offset(d0, 1);
      return date - d0 < d1 - date ? d0 : d1;
    }
    function ceil(date) {
      step(date = local(new d3_date(date - 1)), 1);
      return date;
    }
    function offset(date, k) {
      step(date = new d3_date(+date), k);
      return date;
    }
    function range(t0, t1, dt) {
      var time = ceil(t0), times = [];
      if (dt > 1) {
        while (time < t1) {
          if (!(number(time) % dt)) times.push(new Date(+time));
          step(time, 1);
        }
      } else {
        while (time < t1) times.push(new Date(+time)), step(time, 1);
      }
      return times;
    }
    function range_utc(t0, t1, dt) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = t0;
        return range(utc, t1, dt);
      } finally {
        d3_date = Date;
      }
    }
    local.floor = local;
    local.round = round;
    local.ceil = ceil;
    local.offset = offset;
    local.range = range;
    var utc = local.utc = d3_time_interval_utc(local);
    utc.floor = utc;
    utc.round = d3_time_interval_utc(round);
    utc.ceil = d3_time_interval_utc(ceil);
    utc.offset = d3_time_interval_utc(offset);
    utc.range = range_utc;
    return local;
  }
  function d3_time_interval_utc(method) {
    return function(date, k) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = date;
        return method(utc, k)._;
      } finally {
        d3_date = Date;
      }
    };
  }
  d3_time.year = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setMonth(0, 1);
    return date;
  }, function(date, offset) {
    date.setFullYear(date.getFullYear() + offset);
  }, function(date) {
    return date.getFullYear();
  });
  d3_time.years = d3_time.year.range;
  d3_time.years.utc = d3_time.year.utc.range;
  d3_time.day = d3_time_interval(function(date) {
    var day = new d3_date(2e3, 0);
    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
    return day;
  }, function(date, offset) {
    date.setDate(date.getDate() + offset);
  }, function(date) {
    return date.getDate() - 1;
  });
  d3_time.days = d3_time.day.range;
  d3_time.days.utc = d3_time.day.utc.range;
  d3_time.dayOfYear = function(date) {
    var year = d3_time.year(date);
    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
  };
  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
    i = 7 - i;
    var interval = d3_time[day] = d3_time_interval(function(date) {
      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
      return date;
    }, function(date, offset) {
      date.setDate(date.getDate() + Math.floor(offset) * 7);
    }, function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
    });
    d3_time[day + "s"] = interval.range;
    d3_time[day + "s"].utc = interval.utc.range;
    d3_time[day + "OfYear"] = function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
    };
  });
  d3_time.week = d3_time.sunday;
  d3_time.weeks = d3_time.sunday.range;
  d3_time.weeks.utc = d3_time.sunday.utc.range;
  d3_time.weekOfYear = d3_time.sundayOfYear;
  function d3_locale_timeFormat(locale) {
    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
    function d3_time_format(template) {
      var n = template.length;
      function format(date) {
        var string = [], i = -1, j = 0, c, p, f;
        while (++i < n) {
          if (template.charCodeAt(i) === 37) {
            string.push(template.slice(j, i));
            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
            string.push(c);
            j = i + 1;
          }
        }
        string.push(template.slice(j, i));
        return string.join("");
      }
      format.parse = function(string) {
        var d = {
          y: 1900,
          m: 0,
          d: 1,
          H: 0,
          M: 0,
          S: 0,
          L: 0,
          Z: null
        }, i = d3_time_parse(d, template, string, 0);
        if (i != string.length) return null;
        if ("p" in d) d.H = d.H % 12 + d.p * 12;
        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("W" in d || "U" in d) {
          if (!("w" in d)) d.w = "W" in d ? 1 : 0;
          date.setFullYear(d.y, 0, 1);
          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
        } else date.setFullYear(d.y, d.m, d.d);
        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);
        return localZ ? date._ : date;
      };
      format.toString = function() {
        return template;
      };
      return format;
    }
    function d3_time_parse(date, template, string, j) {
      var c, p, t, i = 0, n = template.length, m = string.length;
      while (i < n) {
        if (j >= m) return -1;
        c = template.charCodeAt(i++);
        if (c === 37) {
          t = template.charAt(i++);
          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
          if (!p || (j = p(date, string, j)) < 0) return -1;
        } else if (c != string.charCodeAt(j++)) {
          return -1;
        }
      }
      return j;
    }
    d3_time_format.utc = function(template) {
      var local = d3_time_format(template);
      function format(date) {
        try {
          d3_date = d3_date_utc;
          var utc = new d3_date();
          utc._ = date;
          return local(utc);
        } finally {
          d3_date = Date;
        }
      }
      format.parse = function(string) {
        try {
          d3_date = d3_date_utc;
          var date = local.parse(string);
          return date && date._;
        } finally {
          d3_date = Date;
        }
      };
      format.toString = local.toString;
      return format;
    };
    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
    locale_periods.forEach(function(p, i) {
      d3_time_periodLookup.set(p.toLowerCase(), i);
    });
    var d3_time_formats = {
      a: function(d) {
        return locale_shortDays[d.getDay()];
      },
      A: function(d) {
        return locale_days[d.getDay()];
      },
      b: function(d) {
        return locale_shortMonths[d.getMonth()];
      },
      B: function(d) {
        return locale_months[d.getMonth()];
      },
      c: d3_time_format(locale_dateTime),
      d: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      e: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      H: function(d, p) {
        return d3_time_formatPad(d.getHours(), p, 2);
      },
      I: function(d, p) {
        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
      },
      j: function(d, p) {
        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
      },
      L: function(d, p) {
        return d3_time_formatPad(d.getMilliseconds(), p, 3);
      },
      m: function(d, p) {
        return d3_time_formatPad(d.getMonth() + 1, p, 2);
      },
      M: function(d, p) {
        return d3_time_formatPad(d.getMinutes(), p, 2);
      },
      p: function(d) {
        return locale_periods[+(d.getHours() >= 12)];
      },
      S: function(d, p) {
        return d3_time_formatPad(d.getSeconds(), p, 2);
      },
      U: function(d, p) {
        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
      },
      w: function(d) {
        return d.getDay();
      },
      W: function(d, p) {
        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
      },
      x: d3_time_format(locale_date),
      X: d3_time_format(locale_time),
      y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
      },
      Y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
      },
      Z: d3_time_zone,
      "%": function() {
        return "%";
      }
    };
    var d3_time_parsers = {
      a: d3_time_parseWeekdayAbbrev,
      A: d3_time_parseWeekday,
      b: d3_time_parseMonthAbbrev,
      B: d3_time_parseMonth,
      c: d3_time_parseLocaleFull,
      d: d3_time_parseDay,
      e: d3_time_parseDay,
      H: d3_time_parseHour24,
      I: d3_time_parseHour24,
      j: d3_time_parseDayOfYear,
      L: d3_time_parseMilliseconds,
      m: d3_time_parseMonthNumber,
      M: d3_time_parseMinutes,
      p: d3_time_parseAmPm,
      S: d3_time_parseSeconds,
      U: d3_time_parseWeekNumberSunday,
      w: d3_time_parseWeekdayNumber,
      W: d3_time_parseWeekNumberMonday,
      x: d3_time_parseLocaleDate,
      X: d3_time_parseLocaleTime,
      y: d3_time_parseYear,
      Y: d3_time_parseFullYear,
      Z: d3_time_parseZone,
      "%": d3_time_parseLiteralPercent
    };
    function d3_time_parseWeekdayAbbrev(date, string, i) {
      d3_time_dayAbbrevRe.lastIndex = 0;
      var n = d3_time_dayAbbrevRe.exec(string.slice(i));
      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseWeekday(date, string, i) {
      d3_time_dayRe.lastIndex = 0;
      var n = d3_time_dayRe.exec(string.slice(i));
      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonthAbbrev(date, string, i) {
      d3_time_monthAbbrevRe.lastIndex = 0;
      var n = d3_time_monthAbbrevRe.exec(string.slice(i));
      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonth(date, string, i) {
      d3_time_monthRe.lastIndex = 0;
      var n = d3_time_monthRe.exec(string.slice(i));
      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseLocaleFull(date, string, i) {
      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
    }
    function d3_time_parseLocaleDate(date, string, i) {
      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
    }
    function d3_time_parseLocaleTime(date, string, i) {
      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
    }
    function d3_time_parseAmPm(date, string, i) {
      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());
      return n == null ? -1 : (date.p = n, i);
    }
    return d3_time_format;
  }
  var d3_time_formatPads = {
    "-": "",
    _: " ",
    "0": "0"
  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
  function d3_time_formatPad(value, fill, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
  }
  function d3_time_formatRe(names) {
    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
  }
  function d3_time_formatLookup(names) {
    var map = new d3_Map(), i = -1, n = names.length;
    while (++i < n) map.set(names[i].toLowerCase(), i);
    return map;
  }
  function d3_time_parseWeekdayNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 1));
    return n ? (date.w = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberSunday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i));
    return n ? (date.U = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberMonday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i));
    return n ? (date.W = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseFullYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 4));
    return n ? (date.y = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
  }
  function d3_time_parseZone(date, string, i) {
    return /^[+-]\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, 
    i + 5) : -1;
  }
  function d3_time_expandYear(d) {
    return d + (d > 68 ? 1900 : 2e3);
  }
  function d3_time_parseMonthNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
  }
  function d3_time_parseDay(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.d = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseDayOfYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
    return n ? (date.j = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseHour24(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.H = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMinutes(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.M = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseSeconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 2));
    return n ? (date.S = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMilliseconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.slice(i, i + 3));
    return n ? (date.L = +n[0], i + n[0].length) : -1;
  }
  function d3_time_zone(d) {
    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = abs(z) / 60 | 0, zm = abs(z) % 60;
    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
  }
  function d3_time_parseLiteralPercent(date, string, i) {
    d3_time_percentRe.lastIndex = 0;
    var n = d3_time_percentRe.exec(string.slice(i, i + 1));
    return n ? i + n[0].length : -1;
  }
  function d3_time_formatMulti(formats) {
    var n = formats.length, i = -1;
    while (++i < n) formats[i][0] = this(formats[i][0]);
    return function(date) {
      var i = 0, f = formats[i];
      while (!f[1](date)) f = formats[++i];
      return f[0](date);
    };
  }
  d3.locale = function(locale) {
    return {
      numberFormat: d3_locale_numberFormat(locale),
      timeFormat: d3_locale_timeFormat(locale)
    };
  };
  var d3_locale_enUS = d3.locale({
    decimal: ".",
    thousands: ",",
    grouping: [ 3 ],
    currency: [ "$", "" ],
    dateTime: "%a %b %e %X %Y",
    date: "%m/%d/%Y",
    time: "%H:%M:%S",
    periods: [ "AM", "PM" ],
    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
  });
  d3.format = d3_locale_enUS.numberFormat;
  d3.geo = {};
  function d3_adder() {}
  d3_adder.prototype = {
    s: 0,
    t: 0,
    add: function(y) {
      d3_adderSum(y, this.t, d3_adderTemp);
      d3_adderSum(d3_adderTemp.s, this.s, this);
      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
    },
    reset: function() {
      this.s = this.t = 0;
    },
    valueOf: function() {
      return this.s;
    }
  };
  var d3_adderTemp = new d3_adder();
  function d3_adderSum(a, b, o) {
    var x = o.s = a + b, bv = x - a, av = x - bv;
    o.t = a - av + (b - bv);
  }
  d3.geo.stream = function(object, listener) {
    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
      d3_geo_streamObjectType[object.type](object, listener);
    } else {
      d3_geo_streamGeometry(object, listener);
    }
  };
  function d3_geo_streamGeometry(geometry, listener) {
    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
      d3_geo_streamGeometryType[geometry.type](geometry, listener);
    }
  }
  var d3_geo_streamObjectType = {
    Feature: function(feature, listener) {
      d3_geo_streamGeometry(feature.geometry, listener);
    },
    FeatureCollection: function(object, listener) {
      var features = object.features, i = -1, n = features.length;
      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
    }
  };
  var d3_geo_streamGeometryType = {
    Sphere: function(object, listener) {
      listener.sphere();
    },
    Point: function(object, listener) {
      object = object.coordinates;
      listener.point(object[0], object[1], object[2]);
    },
    MultiPoint: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
    },
    LineString: function(object, listener) {
      d3_geo_streamLine(object.coordinates, listener, 0);
    },
    MultiLineString: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
    },
    Polygon: function(object, listener) {
      d3_geo_streamPolygon(object.coordinates, listener);
    },
    MultiPolygon: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
    },
    GeometryCollection: function(object, listener) {
      var geometries = object.geometries, i = -1, n = geometries.length;
      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
    }
  };
  function d3_geo_streamLine(coordinates, listener, closed) {
    var i = -1, n = coordinates.length - closed, coordinate;
    listener.lineStart();
    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
    listener.lineEnd();
  }
  function d3_geo_streamPolygon(coordinates, listener) {
    var i = -1, n = coordinates.length;
    listener.polygonStart();
    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
    listener.polygonEnd();
  }
  d3.geo.area = function(object) {
    d3_geo_areaSum = 0;
    d3.geo.stream(object, d3_geo_area);
    return d3_geo_areaSum;
  };
  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
  var d3_geo_area = {
    sphere: function() {
      d3_geo_areaSum += 4 * π;
    },
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_areaRingSum.reset();
      d3_geo_area.lineStart = d3_geo_areaRingStart;
    },
    polygonEnd: function() {
      var area = 2 * d3_geo_areaRingSum;
      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
    }
  };
  function d3_geo_areaRingStart() {
    var λ00, φ00, λ0, cosφ0, sinφ0;
    d3_geo_area.point = function(λ, φ) {
      d3_geo_area.point = nextPoint;
      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
      sinφ0 = Math.sin(φ);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      φ = φ * d3_radians / 2 + π / 4;
      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
      d3_geo_areaRingSum.add(Math.atan2(v, u));
      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
    }
    d3_geo_area.lineEnd = function() {
      nextPoint(λ00, φ00);
    };
  }
  function d3_geo_cartesian(spherical) {
    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
  }
  function d3_geo_cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }
  function d3_geo_cartesianCross(a, b) {
    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
  }
  function d3_geo_cartesianAdd(a, b) {
    a[0] += b[0];
    a[1] += b[1];
    a[2] += b[2];
  }
  function d3_geo_cartesianScale(vector, k) {
    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
  }
  function d3_geo_cartesianNormalize(d) {
    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l;
    d[1] /= l;
    d[2] /= l;
  }
  function d3_geo_spherical(cartesian) {
    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
  }
  function d3_geo_sphericalEqual(a, b) {
    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
  }
  d3.geo.bounds = function() {
    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
    var bound = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        bound.point = ringPoint;
        bound.lineStart = ringStart;
        bound.lineEnd = ringEnd;
        dλSum = 0;
        d3_geo_area.polygonStart();
      },
      polygonEnd: function() {
        d3_geo_area.polygonEnd();
        bound.point = point;
        bound.lineStart = lineStart;
        bound.lineEnd = lineEnd;
        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
        range[0] = λ0, range[1] = λ1;
      }
    };
    function point(λ, φ) {
      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
      if (φ < φ0) φ0 = φ;
      if (φ > φ1) φ1 = φ;
    }
    function linePoint(λ, φ) {
      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
      if (p0) {
        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
        d3_geo_cartesianNormalize(inflection);
        inflection = d3_geo_spherical(inflection);
        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = inflection[1] * d3_degrees;
          if (φi > φ1) φ1 = φi;
        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = -inflection[1] * d3_degrees;
          if (φi < φ0) φ0 = φi;
        } else {
          if (φ < φ0) φ0 = φ;
          if (φ > φ1) φ1 = φ;
        }
        if (antimeridian) {
          if (λ < λ_) {
            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
          } else {
            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
          }
        } else {
          if (λ1 >= λ0) {
            if (λ < λ0) λ0 = λ;
            if (λ > λ1) λ1 = λ;
          } else {
            if (λ > λ_) {
              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
            } else {
              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
            }
          }
        }
      } else {
        point(λ, φ);
      }
      p0 = p, λ_ = λ;
    }
    function lineStart() {
      bound.point = linePoint;
    }
    function lineEnd() {
      range[0] = λ0, range[1] = λ1;
      bound.point = point;
      p0 = null;
    }
    function ringPoint(λ, φ) {
      if (p0) {
        var dλ = λ - λ_;
        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
      } else λ__ = λ, φ__ = φ;
      d3_geo_area.point(λ, φ);
      linePoint(λ, φ);
    }
    function ringStart() {
      d3_geo_area.lineStart();
    }
    function ringEnd() {
      ringPoint(λ__, φ__);
      d3_geo_area.lineEnd();
      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
      range[0] = λ0, range[1] = λ1;
      p0 = null;
    }
    function angle(λ0, λ1) {
      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
    }
    function compareRanges(a, b) {
      return a[0] - b[0];
    }
    function withinRange(x, range) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }
    return function(feature) {
      φ1 = λ1 = -(λ0 = φ0 = Infinity);
      ranges = [];
      d3.geo.stream(feature, bound);
      var n = ranges.length;
      if (n) {
        ranges.sort(compareRanges);
        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
          b = ranges[i];
          if (withinRange(b[0], a) || withinRange(b[1], a)) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }
        var best = -Infinity, dλ;
        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
          b = merged[i];
          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
        }
      }
      ranges = range = null;
      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
    };
  }();
  d3.geo.centroid = function(object) {
    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
    d3.geo.stream(object, d3_geo_centroid);
    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
    if (m < ε2) {
      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
      m = x * x + y * y + z * z;
      if (m < ε2) return [ NaN, NaN ];
    }
    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
  };
  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
  var d3_geo_centroid = {
    sphere: d3_noop,
    point: d3_geo_centroidPoint,
    lineStart: d3_geo_centroidLineStart,
    lineEnd: d3_geo_centroidLineEnd,
    polygonStart: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
    }
  };
  function d3_geo_centroidPoint(λ, φ) {
    λ *= d3_radians;
    var cosφ = Math.cos(φ *= d3_radians);
    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
  }
  function d3_geo_centroidPointXYZ(x, y, z) {
    ++d3_geo_centroidW0;
    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
  }
  function d3_geo_centroidLineStart() {
    var x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroid.point = nextPoint;
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_centroidLineEnd() {
    d3_geo_centroid.point = d3_geo_centroidPoint;
  }
  function d3_geo_centroidRingStart() {
    var λ00, φ00, x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ00 = λ, φ00 = φ;
      d3_geo_centroid.point = nextPoint;
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    d3_geo_centroid.lineEnd = function() {
      nextPoint(λ00, φ00);
      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
      d3_geo_centroid.point = d3_geo_centroidPoint;
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
      d3_geo_centroidX2 += v * cx;
      d3_geo_centroidY2 += v * cy;
      d3_geo_centroidZ2 += v * cz;
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_compose(a, b) {
    function compose(x, y) {
      return x = a(x, y), b(x[0], x[1]);
    }
    if (a.invert && b.invert) compose.invert = function(x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
    return compose;
  }
  function d3_true() {
    return true;
  }
  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
    var subject = [], clip = [];
    segments.forEach(function(segment) {
      if ((n = segment.length - 1) <= 0) return;
      var n, p0 = segment[0], p1 = segment[n];
      if (d3_geo_sphericalEqual(p0, p1)) {
        listener.lineStart();
        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
        listener.lineEnd();
        return;
      }
      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
      a.o = b;
      subject.push(a);
      clip.push(b);
      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
      a.o = b;
      subject.push(a);
      clip.push(b);
    });
    clip.sort(compare);
    d3_geo_clipPolygonLinkCircular(subject);
    d3_geo_clipPolygonLinkCircular(clip);
    if (!subject.length) return;
    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
      clip[i].e = entry = !entry;
    }
    var start = subject[0], points, point;
    while (1) {
      var current = start, isSubject = true;
      while (current.v) if ((current = current.n) === start) return;
      points = current.z;
      listener.lineStart();
      do {
        current.v = current.o.v = true;
        if (current.e) {
          if (isSubject) {
            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.n.x, 1, listener);
          }
          current = current.n;
        } else {
          if (isSubject) {
            points = current.p.z;
            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.p.x, -1, listener);
          }
          current = current.p;
        }
        current = current.o;
        points = current.z;
        isSubject = !isSubject;
      } while (!current.v);
      listener.lineEnd();
    }
  }
  function d3_geo_clipPolygonLinkCircular(array) {
    if (!(n = array.length)) return;
    var n, i = 0, a = array[0], b;
    while (++i < n) {
      a.n = b = array[i];
      b.p = a;
      a = b;
    }
    a.n = b = array[0];
    b.p = a;
  }
  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
    this.x = point;
    this.z = points;
    this.o = other;
    this.e = entry;
    this.v = false;
    this.n = this.p = null;
  }
  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
    return function(rotate, listener) {
      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          clip.point = pointRing;
          clip.lineStart = ringStart;
          clip.lineEnd = ringEnd;
          segments = [];
          polygon = [];
        },
        polygonEnd: function() {
          clip.point = point;
          clip.lineStart = lineStart;
          clip.lineEnd = lineEnd;
          segments = d3.merge(segments);
          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
          if (segments.length) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
          } else if (clipStartInside) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            interpolate(null, null, 1, listener);
            listener.lineEnd();
          }
          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
          segments = polygon = null;
        },
        sphere: function() {
          listener.polygonStart();
          listener.lineStart();
          interpolate(null, null, 1, listener);
          listener.lineEnd();
          listener.polygonEnd();
        }
      };
      function point(λ, φ) {
        var point = rotate(λ, φ);
        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
      }
      function pointLine(λ, φ) {
        var point = rotate(λ, φ);
        line.point(point[0], point[1]);
      }
      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }
      function lineEnd() {
        clip.point = point;
        line.lineEnd();
      }
      var segments;
      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
      function pointRing(λ, φ) {
        ring.push([ λ, φ ]);
        var point = rotate(λ, φ);
        ringListener.point(point[0], point[1]);
      }
      function ringStart() {
        ringListener.lineStart();
        ring = [];
      }
      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringListener.lineEnd();
        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (!n) return;
        if (clean & 1) {
          segment = ringSegments[0];
          var n = segment.length - 1, i = -1, point;
          if (n > 0) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            while (++i < n) listener.point((point = segment[i])[0], point[1]);
            listener.lineEnd();
          }
          return;
        }
        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
      }
      return clip;
    };
  }
  function d3_geo_clipSegmentLength1(segment) {
    return segment.length > 1;
  }
  function d3_geo_clipBufferListener() {
    var lines = [], line;
    return {
      lineStart: function() {
        lines.push(line = []);
      },
      point: function(λ, φ) {
        line.push([ λ, φ ]);
      },
      lineEnd: d3_noop,
      buffer: function() {
        var buffer = lines;
        lines = [];
        line = null;
        return buffer;
      },
      rejoin: function() {
        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
      }
    };
  }
  function d3_geo_clipSort(a, b) {
    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
  }
  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
  function d3_geo_clipAntimeridianLine(listener) {
    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
    return {
      lineStart: function() {
        listener.lineStart();
        clean = 1;
      },
      point: function(λ1, φ1) {
        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
        if (abs(dλ - π) < ε) {
          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          listener.point(λ1, φ0);
          clean = 0;
        } else if (sλ0 !== sλ1 && dλ >= π) {
          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          clean = 0;
        }
        listener.point(λ0 = λ1, φ0 = φ1);
        sλ0 = sλ1;
      },
      lineEnd: function() {
        listener.lineEnd();
        λ0 = φ0 = NaN;
      },
      clean: function() {
        return 2 - clean;
      }
    };
  }
  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
  }
  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
    var φ;
    if (from == null) {
      φ = direction * halfπ;
      listener.point(-π, φ);
      listener.point(0, φ);
      listener.point(π, φ);
      listener.point(π, 0);
      listener.point(π, -φ);
      listener.point(0, -φ);
      listener.point(-π, -φ);
      listener.point(-π, 0);
      listener.point(-π, φ);
    } else if (abs(from[0] - to[0]) > ε) {
      var s = from[0] < to[0] ? π : -π;
      φ = direction * s / 2;
      listener.point(-s, φ);
      listener.point(0, φ);
      listener.point(s, φ);
    } else {
      listener.point(to[0], to[1]);
    }
  }
  function d3_geo_pointInPolygon(point, polygon) {
    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
    d3_geo_areaRingSum.reset();
    for (var i = 0, n = polygon.length; i < n; ++i) {
      var ring = polygon[i], m = ring.length;
      if (!m) continue;
      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
      while (true) {
        if (j === m) j = 0;
        point = ring[j];
        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
          d3_geo_cartesianNormalize(arc);
          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
          d3_geo_cartesianNormalize(intersection);
          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
          }
        }
        if (!j++) break;
        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
      }
    }
    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;
  }
  function d3_geo_clipCircle(radius) {
    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
    function visible(λ, φ) {
      return Math.cos(λ) * Math.cos(φ) > cr;
    }
    function clipLine(listener) {
      var point0, c0, v0, v00, clean;
      return {
        lineStart: function() {
          v00 = v0 = false;
          clean = 1;
        },
        point: function(λ, φ) {
          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
          if (!point0 && (v00 = v0 = v)) listener.lineStart();
          if (v !== v0) {
            point2 = intersect(point0, point1);
            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
              point1[0] += ε;
              point1[1] += ε;
              v = visible(point1[0], point1[1]);
            }
          }
          if (v !== v0) {
            clean = 0;
            if (v) {
              listener.lineStart();
              point2 = intersect(point1, point0);
              listener.point(point2[0], point2[1]);
            } else {
              point2 = intersect(point0, point1);
              listener.point(point2[0], point2[1]);
              listener.lineEnd();
            }
            point0 = point2;
          } else if (notHemisphere && point0 && smallRadius ^ v) {
            var t;
            if (!(c & c0) && (t = intersect(point1, point0, true))) {
              clean = 0;
              if (smallRadius) {
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
              } else {
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
              }
            }
          }
          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
            listener.point(point1[0], point1[1]);
          }
          point0 = point1, v0 = v, c0 = c;
        },
        lineEnd: function() {
          if (v0) listener.lineEnd();
          point0 = null;
        },
        clean: function() {
          return clean | (v00 && v0) << 1;
        }
      };
    }
    function intersect(a, b, two) {
      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
      if (!determinant) return !two && a;
      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
      d3_geo_cartesianAdd(A, B);
      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
      if (t2 < 0) return;
      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
      d3_geo_cartesianAdd(q, A);
      q = d3_geo_spherical(q);
      if (!two) return q;
      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
        d3_geo_cartesianAdd(q1, A);
        return [ q, d3_geo_spherical(q1) ];
      }
    }
    function code(λ, φ) {
      var r = smallRadius ? radius : π - radius, code = 0;
      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
      return code;
    }
  }
  function d3_geom_clipLine(x0, y0, x1, y1) {
    return function(line) {
      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;
      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;
      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;
      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;
      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      if (t0 > 0) line.a = {
        x: ax + t0 * dx,
        y: ay + t0 * dy
      };
      if (t1 < 1) line.b = {
        x: ax + t1 * dx,
        y: ay + t1 * dy
      };
      return line;
    };
  }
  var d3_geo_clipExtentMAX = 1e9;
  d3.geo.clipExtent = function() {
    var x0, y0, x1, y1, stream, clip, clipExtent = {
      stream: function(output) {
        if (stream) stream.valid = false;
        stream = clip(output);
        stream.valid = true;
        return stream;
      },
      extent: function(_) {
        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
        if (stream) stream.valid = false, stream = null;
        return clipExtent;
      }
    };
    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
  };
  function d3_geo_clipExtent(x0, y0, x1, y1) {
    return function(listener) {
      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          listener = bufferListener;
          segments = [];
          polygon = [];
          clean = true;
        },
        polygonEnd: function() {
          listener = listener_;
          segments = d3.merge(segments);
          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
          if (inside || visible) {
            listener.polygonStart();
            if (inside) {
              listener.lineStart();
              interpolate(null, null, 1, listener);
              listener.lineEnd();
            }
            if (visible) {
              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
            }
            listener.polygonEnd();
          }
          segments = polygon = ring = null;
        }
      };
      function insidePolygon(p) {
        var wn = 0, n = polygon.length, y = p[1];
        for (var i = 0; i < n; ++i) {
          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
            b = v[j];
            if (a[1] <= y) {
              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
            } else {
              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
            }
            a = b;
          }
        }
        return wn !== 0;
      }
      function interpolate(from, to, direction, listener) {
        var a = 0, a1 = 0;
        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
          do {
            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          } while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          listener.point(to[0], to[1]);
        }
      }
      function pointVisible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }
      function point(x, y) {
        if (pointVisible(x, y)) listener.point(x, y);
      }
      var x__, y__, v__, x_, y_, v_, first, clean;
      function lineStart() {
        clip.point = linePoint;
        if (polygon) polygon.push(ring = []);
        first = true;
        v_ = false;
        x_ = y_ = NaN;
      }
      function lineEnd() {
        if (segments) {
          linePoint(x__, y__);
          if (v__ && v_) bufferListener.rejoin();
          segments.push(bufferListener.buffer());
        }
        clip.point = point;
        if (v_) listener.lineEnd();
      }
      function linePoint(x, y) {
        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
        var v = pointVisible(x, y);
        if (polygon) ring.push([ x, y ]);
        if (first) {
          x__ = x, y__ = y, v__ = v;
          first = false;
          if (v) {
            listener.lineStart();
            listener.point(x, y);
          }
        } else {
          if (v && v_) listener.point(x, y); else {
            var l = {
              a: {
                x: x_,
                y: y_
              },
              b: {
                x: x,
                y: y
              }
            };
            if (clipLine(l)) {
              if (!v_) {
                listener.lineStart();
                listener.point(l.a.x, l.a.y);
              }
              listener.point(l.b.x, l.b.y);
              if (!v) listener.lineEnd();
              clean = false;
            } else if (v) {
              listener.lineStart();
              listener.point(x, y);
              clean = false;
            }
          }
        }
        x_ = x, y_ = y, v_ = v;
      }
      return clip;
    };
    function corner(p, direction) {
      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
    }
    function compare(a, b) {
      return comparePoints(a.x, b.x);
    }
    function comparePoints(a, b) {
      var ca = corner(a, 1), cb = corner(b, 1);
      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
    }
  }
  function d3_geo_conic(projectAt) {
    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
    p.parallels = function(_) {
      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
    };
    return p;
  }
  function d3_geo_conicEqualArea(φ0, φ1) {
    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
    function forward(λ, φ) {
      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = ρ0 - y;
      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
    };
    return forward;
  }
  (d3.geo.conicEqualArea = function() {
    return d3_geo_conic(d3_geo_conicEqualArea);
  }).raw = d3_geo_conicEqualArea;
  d3.geo.albers = function() {
    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
  };
  d3.geo.albersUsa = function() {
    var lower48 = d3.geo.albers();
    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
    var point, pointStream = {
      point: function(x, y) {
        point = [ x, y ];
      }
    }, lower48Point, alaskaPoint, hawaiiPoint;
    function albersUsa(coordinates) {
      var x = coordinates[0], y = coordinates[1];
      point = null;
      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
      return point;
    }
    albersUsa.invert = function(coordinates) {
      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
    };
    albersUsa.stream = function(stream) {
      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
      return {
        point: function(x, y) {
          lower48Stream.point(x, y);
          alaskaStream.point(x, y);
          hawaiiStream.point(x, y);
        },
        sphere: function() {
          lower48Stream.sphere();
          alaskaStream.sphere();
          hawaiiStream.sphere();
        },
        lineStart: function() {
          lower48Stream.lineStart();
          alaskaStream.lineStart();
          hawaiiStream.lineStart();
        },
        lineEnd: function() {
          lower48Stream.lineEnd();
          alaskaStream.lineEnd();
          hawaiiStream.lineEnd();
        },
        polygonStart: function() {
          lower48Stream.polygonStart();
          alaskaStream.polygonStart();
          hawaiiStream.polygonStart();
        },
        polygonEnd: function() {
          lower48Stream.polygonEnd();
          alaskaStream.polygonEnd();
          hawaiiStream.polygonEnd();
        }
      };
    };
    albersUsa.precision = function(_) {
      if (!arguments.length) return lower48.precision();
      lower48.precision(_);
      alaska.precision(_);
      hawaii.precision(_);
      return albersUsa;
    };
    albersUsa.scale = function(_) {
      if (!arguments.length) return lower48.scale();
      lower48.scale(_);
      alaska.scale(_ * .35);
      hawaii.scale(_);
      return albersUsa.translate(lower48.translate());
    };
    albersUsa.translate = function(_) {
      if (!arguments.length) return lower48.translate();
      var k = lower48.scale(), x = +_[0], y = +_[1];
      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      return albersUsa;
    };
    return albersUsa.scale(1070);
  };
  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_pathAreaPolygon = 0;
      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
    }
  };
  function d3_geo_pathAreaRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathArea.point = function(x, y) {
      d3_geo_pathArea.point = nextPoint;
      x00 = x0 = x, y00 = y0 = y;
    };
    function nextPoint(x, y) {
      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
      x0 = x, y0 = y;
    }
    d3_geo_pathArea.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
  var d3_geo_pathBounds = {
    point: d3_geo_pathBoundsPoint,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_pathBoundsPoint(x, y) {
    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
  }
  function d3_geo_pathBuffer() {
    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointCircle = d3_geo_pathBufferCircle(_);
        return stream;
      },
      result: function() {
        if (buffer.length) {
          var result = buffer.join("");
          buffer = [];
          return result;
        }
      }
    };
    function point(x, y) {
      buffer.push("M", x, ",", y, pointCircle);
    }
    function pointLineStart(x, y) {
      buffer.push("M", x, ",", y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      buffer.push("L", x, ",", y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      buffer.push("Z");
    }
    return stream;
  }
  function d3_geo_pathBufferCircle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }
  var d3_geo_pathCentroid = {
    point: d3_geo_pathCentroidPoint,
    lineStart: d3_geo_pathCentroidLineStart,
    lineEnd: d3_geo_pathCentroidLineEnd,
    polygonStart: function() {
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
    }
  };
  function d3_geo_pathCentroidPoint(x, y) {
    d3_geo_centroidX0 += x;
    d3_geo_centroidY0 += y;
    ++d3_geo_centroidZ0;
  }
  function d3_geo_pathCentroidLineStart() {
    var x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
  }
  function d3_geo_pathCentroidLineEnd() {
    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
  }
  function d3_geo_pathCentroidRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      z = y0 * x - x0 * y;
      d3_geo_centroidX2 += z * (x0 + x);
      d3_geo_centroidY2 += z * (y0 + y);
      d3_geo_centroidZ2 += z * 3;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
    d3_geo_pathCentroid.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  function d3_geo_pathContext(context) {
    var pointRadius = 4.5;
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointRadius = _;
        return stream;
      },
      result: d3_noop
    };
    function point(x, y) {
      context.moveTo(x + pointRadius, y);
      context.arc(x, y, pointRadius, 0, τ);
    }
    function pointLineStart(x, y) {
      context.moveTo(x, y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      context.lineTo(x, y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      context.closePath();
    }
    return stream;
  }
  function d3_geo_resample(project) {
    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
    function resample(stream) {
      return (maxDepth ? resampleRecursive : resampleNone)(stream);
    }
    function resampleNone(stream) {
      return d3_geo_transformPoint(stream, function(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      });
    }
    function resampleRecursive(stream) {
      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
      var resample = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          stream.polygonStart();
          resample.lineStart = ringStart;
        },
        polygonEnd: function() {
          stream.polygonEnd();
          resample.lineStart = lineStart;
        }
      };
      function point(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      }
      function lineStart() {
        x0 = NaN;
        resample.point = linePoint;
        stream.lineStart();
      }
      function linePoint(λ, φ) {
        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
        stream.point(x0, y0);
      }
      function lineEnd() {
        resample.point = point;
        stream.lineEnd();
      }
      function ringStart() {
        lineStart();
        resample.point = ringPoint;
        resample.lineEnd = ringEnd;
      }
      function ringPoint(λ, φ) {
        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
        resample.point = linePoint;
      }
      function ringEnd() {
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
        resample.lineEnd = lineEnd;
        lineEnd();
      }
      return resample;
    }
    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
      if (d2 > 4 * δ2 && depth--) {
        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
          stream.point(x2, y2);
          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
        }
      }
    }
    resample.precision = function(_) {
      if (!arguments.length) return Math.sqrt(δ2);
      maxDepth = (δ2 = _ * _) > 0 && 16;
      return resample;
    };
    return resample;
  }
  d3.geo.path = function() {
    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
    function path(object) {
      if (object) {
        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
        d3.geo.stream(object, cacheStream);
      }
      return contextStream.result();
    }
    path.area = function(object) {
      d3_geo_pathAreaSum = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathArea));
      return d3_geo_pathAreaSum;
    };
    path.centroid = function(object) {
      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
    };
    path.bounds = function(object) {
      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
    };
    path.projection = function(_) {
      if (!arguments.length) return projection;
      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
      return reset();
    };
    path.context = function(_) {
      if (!arguments.length) return context;
      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
      return reset();
    };
    path.pointRadius = function(_) {
      if (!arguments.length) return pointRadius;
      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
      return path;
    };
    function reset() {
      cacheStream = null;
      return path;
    }
    return path.projection(d3.geo.albersUsa()).context(null);
  };
  function d3_geo_pathProjectStream(project) {
    var resample = d3_geo_resample(function(x, y) {
      return project([ x * d3_degrees, y * d3_degrees ]);
    });
    return function(stream) {
      return d3_geo_projectionRadians(resample(stream));
    };
  }
  d3.geo.transform = function(methods) {
    return {
      stream: function(stream) {
        var transform = new d3_geo_transform(stream);
        for (var k in methods) transform[k] = methods[k];
        return transform;
      }
    };
  };
  function d3_geo_transform(stream) {
    this.stream = stream;
  }
  d3_geo_transform.prototype = {
    point: function(x, y) {
      this.stream.point(x, y);
    },
    sphere: function() {
      this.stream.sphere();
    },
    lineStart: function() {
      this.stream.lineStart();
    },
    lineEnd: function() {
      this.stream.lineEnd();
    },
    polygonStart: function() {
      this.stream.polygonStart();
    },
    polygonEnd: function() {
      this.stream.polygonEnd();
    }
  };
  function d3_geo_transformPoint(stream, point) {
    return {
      point: point,
      sphere: function() {
        stream.sphere();
      },
      lineStart: function() {
        stream.lineStart();
      },
      lineEnd: function() {
        stream.lineEnd();
      },
      polygonStart: function() {
        stream.polygonStart();
      },
      polygonEnd: function() {
        stream.polygonEnd();
      }
    };
  }
  d3.geo.projection = d3_geo_projection;
  d3.geo.projectionMutator = d3_geo_projectionMutator;
  function d3_geo_projection(project) {
    return d3_geo_projectionMutator(function() {
      return project;
    })();
  }
  function d3_geo_projectionMutator(projectAt) {
    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
      x = project(x, y);
      return [ x[0] * k + δx, δy - x[1] * k ];
    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
    function projection(point) {
      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
      return [ point[0] * k + δx, δy - point[1] * k ];
    }
    function invert(point) {
      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
    }
    projection.stream = function(output) {
      if (stream) stream.valid = false;
      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
      stream.valid = true;
      return stream;
    };
    projection.clipAngle = function(_) {
      if (!arguments.length) return clipAngle;
      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
      return invalidate();
    };
    projection.clipExtent = function(_) {
      if (!arguments.length) return clipExtent;
      clipExtent = _;
      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
      return invalidate();
    };
    projection.scale = function(_) {
      if (!arguments.length) return k;
      k = +_;
      return reset();
    };
    projection.translate = function(_) {
      if (!arguments.length) return [ x, y ];
      x = +_[0];
      y = +_[1];
      return reset();
    };
    projection.center = function(_) {
      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
      λ = _[0] % 360 * d3_radians;
      φ = _[1] % 360 * d3_radians;
      return reset();
    };
    projection.rotate = function(_) {
      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
      δλ = _[0] % 360 * d3_radians;
      δφ = _[1] % 360 * d3_radians;
      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
      return reset();
    };
    d3.rebind(projection, projectResample, "precision");
    function reset() {
      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
      var center = project(λ, φ);
      δx = x - center[0] * k;
      δy = y + center[1] * k;
      return invalidate();
    }
    function invalidate() {
      if (stream) stream.valid = false, stream = null;
      return projection;
    }
    return function() {
      project = projectAt.apply(this, arguments);
      projection.invert = project.invert && invert;
      return reset();
    };
  }
  function d3_geo_projectionRadians(stream) {
    return d3_geo_transformPoint(stream, function(x, y) {
      stream.point(x * d3_radians, y * d3_radians);
    });
  }
  function d3_geo_equirectangular(λ, φ) {
    return [ λ, φ ];
  }
  (d3.geo.equirectangular = function() {
    return d3_geo_projection(d3_geo_equirectangular);
  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
  d3.geo.rotation = function(rotate) {
    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
    function forward(coordinates) {
      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    }
    forward.invert = function(coordinates) {
      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    };
    return forward;
  };
  function d3_geo_identityRotation(λ, φ) {
    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
  }
  d3_geo_identityRotation.invert = d3_geo_equirectangular;
  function d3_geo_rotation(δλ, δφ, δγ) {
    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
  }
  function d3_geo_forwardRotationλ(δλ) {
    return function(λ, φ) {
      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
    };
  }
  function d3_geo_rotationλ(δλ) {
    var rotation = d3_geo_forwardRotationλ(δλ);
    rotation.invert = d3_geo_forwardRotationλ(-δλ);
    return rotation;
  }
  function d3_geo_rotationφγ(δφ, δγ) {
    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
    function rotation(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
    }
    rotation.invert = function(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
    };
    return rotation;
  }
  d3.geo.circle = function() {
    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
    function circle() {
      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
      interpolate(null, null, 1, {
        point: function(x, y) {
          ring.push(x = rotate(x, y));
          x[0] *= d3_degrees, x[1] *= d3_degrees;
        }
      });
      return {
        type: "Polygon",
        coordinates: [ ring ]
      };
    }
    circle.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return circle;
    };
    circle.angle = function(x) {
      if (!arguments.length) return angle;
      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
      return circle;
    };
    circle.precision = function(_) {
      if (!arguments.length) return precision;
      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
      return circle;
    };
    return circle.angle(90);
  };
  function d3_geo_circleInterpolate(radius, precision) {
    var cr = Math.cos(radius), sr = Math.sin(radius);
    return function(from, to, direction, listener) {
      var step = direction * precision;
      if (from != null) {
        from = d3_geo_circleAngle(cr, from);
        to = d3_geo_circleAngle(cr, to);
        if (direction > 0 ? from < to : from > to) from += direction * τ;
      } else {
        from = radius + direction * τ;
        to = radius - .5 * step;
      }
      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
      }
    };
  }
  function d3_geo_circleAngle(cr, point) {
    var a = d3_geo_cartesian(point);
    a[0] -= cr;
    d3_geo_cartesianNormalize(a);
    var angle = d3_acos(-a[1]);
    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
  }
  d3.geo.distance = function(a, b) {
    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
  };
  d3.geo.graticule = function() {
    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
    function graticule() {
      return {
        type: "MultiLineString",
        coordinates: lines()
      };
    }
    function lines() {
      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
        return abs(x % DX) > ε;
      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
        return abs(y % DY) > ε;
      }).map(y));
    }
    graticule.lines = function() {
      return lines().map(function(coordinates) {
        return {
          type: "LineString",
          coordinates: coordinates
        };
      });
    };
    graticule.outline = function() {
      return {
        type: "Polygon",
        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
      };
    };
    graticule.extent = function(_) {
      if (!arguments.length) return graticule.minorExtent();
      return graticule.majorExtent(_).minorExtent(_);
    };
    graticule.majorExtent = function(_) {
      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
      X0 = +_[0][0], X1 = +_[1][0];
      Y0 = +_[0][1], Y1 = +_[1][1];
      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
      return graticule.precision(precision);
    };
    graticule.minorExtent = function(_) {
      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
      x0 = +_[0][0], x1 = +_[1][0];
      y0 = +_[0][1], y1 = +_[1][1];
      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
      return graticule.precision(precision);
    };
    graticule.step = function(_) {
      if (!arguments.length) return graticule.minorStep();
      return graticule.majorStep(_).minorStep(_);
    };
    graticule.majorStep = function(_) {
      if (!arguments.length) return [ DX, DY ];
      DX = +_[0], DY = +_[1];
      return graticule;
    };
    graticule.minorStep = function(_) {
      if (!arguments.length) return [ dx, dy ];
      dx = +_[0], dy = +_[1];
      return graticule;
    };
    graticule.precision = function(_) {
      if (!arguments.length) return precision;
      precision = +_;
      x = d3_geo_graticuleX(y0, y1, 90);
      y = d3_geo_graticuleY(x0, x1, precision);
      X = d3_geo_graticuleX(Y0, Y1, 90);
      Y = d3_geo_graticuleY(X0, X1, precision);
      return graticule;
    };
    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
  };
  function d3_geo_graticuleX(y0, y1, dy) {
    var y = d3.range(y0, y1 - ε, dy).concat(y1);
    return function(x) {
      return y.map(function(y) {
        return [ x, y ];
      });
    };
  }
  function d3_geo_graticuleY(x0, x1, dx) {
    var x = d3.range(x0, x1 - ε, dx).concat(x1);
    return function(y) {
      return x.map(function(x) {
        return [ x, y ];
      });
    };
  }
  function d3_source(d) {
    return d.source;
  }
  function d3_target(d) {
    return d.target;
  }
  d3.geo.greatArc = function() {
    var source = d3_source, source_, target = d3_target, target_;
    function greatArc() {
      return {
        type: "LineString",
        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
      };
    }
    greatArc.distance = function() {
      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
    };
    greatArc.source = function(_) {
      if (!arguments.length) return source;
      source = _, source_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.target = function(_) {
      if (!arguments.length) return target;
      target = _, target_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.precision = function() {
      return arguments.length ? greatArc : 0;
    };
    return greatArc;
  };
  d3.geo.interpolate = function(source, target) {
    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
  };
  function d3_geo_interpolate(x0, y0, x1, y1) {
    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
    var interpolate = d ? function(t) {
      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
    } : function() {
      return [ x0 * d3_degrees, y0 * d3_degrees ];
    };
    interpolate.distance = d;
    return interpolate;
  }
  d3.geo.length = function(object) {
    d3_geo_lengthSum = 0;
    d3.geo.stream(object, d3_geo_length);
    return d3_geo_lengthSum;
  };
  var d3_geo_lengthSum;
  var d3_geo_length = {
    sphere: d3_noop,
    point: d3_noop,
    lineStart: d3_geo_lengthLineStart,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_lengthLineStart() {
    var λ0, sinφ0, cosφ0;
    d3_geo_length.point = function(λ, φ) {
      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
      d3_geo_length.point = nextPoint;
    };
    d3_geo_length.lineEnd = function() {
      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
    };
    function nextPoint(λ, φ) {
      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
    }
  }
  function d3_geo_azimuthal(scale, angle) {
    function azimuthal(λ, φ) {
      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
    }
    azimuthal.invert = function(x, y) {
      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
    };
    return azimuthal;
  }
  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
    return Math.sqrt(2 / (1 + cosλcosφ));
  }, function(ρ) {
    return 2 * Math.asin(ρ / 2);
  });
  (d3.geo.azimuthalEqualArea = function() {
    return d3_geo_projection(d3_geo_azimuthalEqualArea);
  }).raw = d3_geo_azimuthalEqualArea;
  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
    var c = Math.acos(cosλcosφ);
    return c && c / Math.sin(c);
  }, d3_identity);
  (d3.geo.azimuthalEquidistant = function() {
    return d3_geo_projection(d3_geo_azimuthalEquidistant);
  }).raw = d3_geo_azimuthalEquidistant;
  function d3_geo_conicConformal(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), t = function(φ) {
      return Math.tan(π / 4 + φ / 2);
    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
    if (!n) return d3_geo_mercator;
    function forward(λ, φ) {
      if (F > 0) {
        if (φ < -halfπ + ε) φ = -halfπ + ε;
      } else {
        if (φ > halfπ - ε) φ = halfπ - ε;
      }
      var ρ = F / Math.pow(t(φ), n);
      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
    };
    return forward;
  }
  (d3.geo.conicConformal = function() {
    return d3_geo_conic(d3_geo_conicConformal);
  }).raw = d3_geo_conicConformal;
  function d3_geo_conicEquidistant(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
    if (abs(n) < ε) return d3_geo_equirectangular;
    function forward(λ, φ) {
      var ρ = G - φ;
      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = G - y;
      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
    };
    return forward;
  }
  (d3.geo.conicEquidistant = function() {
    return d3_geo_conic(d3_geo_conicEquidistant);
  }).raw = d3_geo_conicEquidistant;
  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / cosλcosφ;
  }, Math.atan);
  (d3.geo.gnomonic = function() {
    return d3_geo_projection(d3_geo_gnomonic);
  }).raw = d3_geo_gnomonic;
  function d3_geo_mercator(λ, φ) {
    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
  }
  d3_geo_mercator.invert = function(x, y) {
    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
  };
  function d3_geo_mercatorProjection(project) {
    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
    m.scale = function() {
      var v = scale.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.translate = function() {
      var v = translate.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.clipExtent = function(_) {
      var v = clipExtent.apply(m, arguments);
      if (v === m) {
        if (clipAuto = _ == null) {
          var k = π * scale(), t = translate();
          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
        }
      } else if (clipAuto) {
        v = null;
      }
      return v;
    };
    return m.clipExtent(null);
  }
  (d3.geo.mercator = function() {
    return d3_geo_mercatorProjection(d3_geo_mercator);
  }).raw = d3_geo_mercator;
  var d3_geo_orthographic = d3_geo_azimuthal(function() {
    return 1;
  }, Math.asin);
  (d3.geo.orthographic = function() {
    return d3_geo_projection(d3_geo_orthographic);
  }).raw = d3_geo_orthographic;
  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / (1 + cosλcosφ);
  }, function(ρ) {
    return 2 * Math.atan(ρ);
  });
  (d3.geo.stereographic = function() {
    return d3_geo_projection(d3_geo_stereographic);
  }).raw = d3_geo_stereographic;
  function d3_geo_transverseMercator(λ, φ) {
    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
  }
  d3_geo_transverseMercator.invert = function(x, y) {
    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
  };
  (d3.geo.transverseMercator = function() {
    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
    projection.center = function(_) {
      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);
    };
    projection.rotate = function(_) {
      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
      [ _[0], _[1], _[2] - 90 ]);
    };
    return rotate([ 0, 0, 90 ]);
  }).raw = d3_geo_transverseMercator;
  d3.geom = {};
  function d3_geom_pointX(d) {
    return d[0];
  }
  function d3_geom_pointY(d) {
    return d[1];
  }
  d3.geom.hull = function(vertices) {
    var x = d3_geom_pointX, y = d3_geom_pointY;
    if (arguments.length) return hull(vertices);
    function hull(data) {
      if (data.length < 3) return [];
      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
      for (i = 0; i < n; i++) {
        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
      }
      points.sort(d3_geom_hullOrder);
      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
      return polygon;
    }
    hull.x = function(_) {
      return arguments.length ? (x = _, hull) : x;
    };
    hull.y = function(_) {
      return arguments.length ? (y = _, hull) : y;
    };
    return hull;
  };
  function d3_geom_hullUpper(points) {
    var n = points.length, hull = [ 0, 1 ], hs = 2;
    for (var i = 2; i < n; i++) {
      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
      hull[hs++] = i;
    }
    return hull.slice(0, hs);
  }
  function d3_geom_hullOrder(a, b) {
    return a[0] - b[0] || a[1] - b[1];
  }
  d3.geom.polygon = function(coordinates) {
    d3_subclass(coordinates, d3_geom_polygonPrototype);
    return coordinates;
  };
  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
  d3_geom_polygonPrototype.area = function() {
    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
    while (++i < n) {
      a = b;
      b = this[i];
      area += a[1] * b[0] - a[0] * b[1];
    }
    return area * .5;
  };
  d3_geom_polygonPrototype.centroid = function(k) {
    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
    if (!arguments.length) k = -1 / (6 * this.area());
    while (++i < n) {
      a = b;
      b = this[i];
      c = a[0] * b[1] - b[0] * a[1];
      x += (a[0] + b[0]) * c;
      y += (a[1] + b[1]) * c;
    }
    return [ x * k, y * k ];
  };
  d3_geom_polygonPrototype.clip = function(subject) {
    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
    while (++i < n) {
      input = subject.slice();
      subject.length = 0;
      b = this[i];
      c = input[(m = input.length - closed) - 1];
      j = -1;
      while (++j < m) {
        d = input[j];
        if (d3_geom_polygonInside(d, a, b)) {
          if (!d3_geom_polygonInside(c, a, b)) {
            subject.push(d3_geom_polygonIntersect(c, d, a, b));
          }
          subject.push(d);
        } else if (d3_geom_polygonInside(c, a, b)) {
          subject.push(d3_geom_polygonIntersect(c, d, a, b));
        }
        c = d;
      }
      if (closed) subject.push(subject[0]);
      a = b;
    }
    return subject;
  };
  function d3_geom_polygonInside(p, a, b) {
    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
  }
  function d3_geom_polygonIntersect(c, d, a, b) {
    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
    return [ x1 + ua * x21, y1 + ua * y21 ];
  }
  function d3_geom_polygonClosed(coordinates) {
    var a = coordinates[0], b = coordinates[coordinates.length - 1];
    return !(a[0] - b[0] || a[1] - b[1]);
  }
  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
  function d3_geom_voronoiBeach() {
    d3_geom_voronoiRedBlackNode(this);
    this.edge = this.site = this.circle = null;
  }
  function d3_geom_voronoiCreateBeach(site) {
    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
    beach.site = site;
    return beach;
  }
  function d3_geom_voronoiDetachBeach(beach) {
    d3_geom_voronoiDetachCircle(beach);
    d3_geom_voronoiBeaches.remove(beach);
    d3_geom_voronoiBeachPool.push(beach);
    d3_geom_voronoiRedBlackNode(beach);
  }
  function d3_geom_voronoiRemoveBeach(beach) {
    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
      x: x,
      y: y
    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
    d3_geom_voronoiDetachBeach(beach);
    var lArc = previous;
    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
      previous = lArc.P;
      disappearing.unshift(lArc);
      d3_geom_voronoiDetachBeach(lArc);
      lArc = previous;
    }
    disappearing.unshift(lArc);
    d3_geom_voronoiDetachCircle(lArc);
    var rArc = next;
    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
      next = rArc.N;
      disappearing.push(rArc);
      d3_geom_voronoiDetachBeach(rArc);
      rArc = next;
    }
    disappearing.push(rArc);
    d3_geom_voronoiDetachCircle(rArc);
    var nArcs = disappearing.length, iArc;
    for (iArc = 1; iArc < nArcs; ++iArc) {
      rArc = disappearing[iArc];
      lArc = disappearing[iArc - 1];
      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
    }
    lArc = disappearing[0];
    rArc = disappearing[nArcs - 1];
    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiAddBeach(site) {
    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
    while (node) {
      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
      if (dxl > ε) node = node.L; else {
        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
        if (dxr > ε) {
          if (!node.R) {
            lArc = node;
            break;
          }
          node = node.R;
        } else {
          if (dxl > -ε) {
            lArc = node.P;
            rArc = node;
          } else if (dxr > -ε) {
            lArc = node;
            rArc = node.N;
          } else {
            lArc = rArc = node;
          }
          break;
        }
      }
    }
    var newArc = d3_geom_voronoiCreateBeach(site);
    d3_geom_voronoiBeaches.insert(lArc, newArc);
    if (!lArc && !rArc) return;
    if (lArc === rArc) {
      d3_geom_voronoiDetachCircle(lArc);
      rArc = d3_geom_voronoiCreateBeach(lArc.site);
      d3_geom_voronoiBeaches.insert(newArc, rArc);
      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      d3_geom_voronoiAttachCircle(lArc);
      d3_geom_voronoiAttachCircle(rArc);
      return;
    }
    if (!rArc) {
      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      return;
    }
    d3_geom_voronoiDetachCircle(lArc);
    d3_geom_voronoiDetachCircle(rArc);
    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
      x: (cy * hb - by * hc) / d + ax,
      y: (bx * hc - cx * hb) / d + ay
    };
    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
    if (!pby2) return rfocx;
    var lArc = arc.P;
    if (!lArc) return -Infinity;
    site = lArc.site;
    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
    if (!plby2) return lfocx;
    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
    return (rfocx + lfocx) / 2;
  }
  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
    var rArc = arc.N;
    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
    var site = arc.site;
    return site.y === directrix ? site.x : Infinity;
  }
  function d3_geom_voronoiCell(site) {
    this.site = site;
    this.edges = [];
  }
  d3_geom_voronoiCell.prototype.prepare = function() {
    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
    while (iHalfEdge--) {
      edge = halfEdges[iHalfEdge].edge;
      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
    }
    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
    return halfEdges.length;
  };
  function d3_geom_voronoiCloseCells(extent) {
    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
    while (iCell--) {
      cell = cells[iCell];
      if (!cell || !cell.prepare()) continue;
      halfEdges = cell.edges;
      nHalfEdges = halfEdges.length;
      iHalfEdge = 0;
      while (iHalfEdge < nHalfEdges) {
        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
            x: x0,
            y: abs(x2 - x0) < ε ? y2 : y1
          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
            x: abs(y2 - y1) < ε ? x2 : x1,
            y: y1
          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
            x: x1,
            y: abs(x2 - x1) < ε ? y2 : y0
          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
            x: abs(y2 - y0) < ε ? x2 : x0,
            y: y0
          } : null), cell.site, null));
          ++nHalfEdges;
        }
      }
    }
  }
  function d3_geom_voronoiHalfEdgeOrder(a, b) {
    return b.angle - a.angle;
  }
  function d3_geom_voronoiCircle() {
    d3_geom_voronoiRedBlackNode(this);
    this.x = this.y = this.arc = this.site = this.cy = null;
  }
  function d3_geom_voronoiAttachCircle(arc) {
    var lArc = arc.P, rArc = arc.N;
    if (!lArc || !rArc) return;
    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
    if (lSite === rSite) return;
    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
    var d = 2 * (ax * cy - ay * cx);
    if (d >= -ε2) return;
    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
    circle.arc = arc;
    circle.site = cSite;
    circle.x = x + bx;
    circle.y = cy + Math.sqrt(x * x + y * y);
    circle.cy = cy;
    arc.circle = circle;
    var before = null, node = d3_geom_voronoiCircles._;
    while (node) {
      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
        if (node.L) node = node.L; else {
          before = node.P;
          break;
        }
      } else {
        if (node.R) node = node.R; else {
          before = node;
          break;
        }
      }
    }
    d3_geom_voronoiCircles.insert(before, circle);
    if (!before) d3_geom_voronoiFirstCircle = circle;
  }
  function d3_geom_voronoiDetachCircle(arc) {
    var circle = arc.circle;
    if (circle) {
      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
      d3_geom_voronoiCircles.remove(circle);
      d3_geom_voronoiCirclePool.push(circle);
      d3_geom_voronoiRedBlackNode(circle);
      arc.circle = null;
    }
  }
  function d3_geom_voronoiClipEdges(extent) {
    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
    while (i--) {
      e = edges[i];
      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
        e.a = e.b = null;
        edges.splice(i, 1);
      }
    }
  }
  function d3_geom_voronoiConnectEdge(edge, extent) {
    var vb = edge.b;
    if (vb) return true;
    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
    if (ry === ly) {
      if (fx < x0 || fx >= x1) return;
      if (lx > rx) {
        if (!va) va = {
          x: fx,
          y: y0
        }; else if (va.y >= y1) return;
        vb = {
          x: fx,
          y: y1
        };
      } else {
        if (!va) va = {
          x: fx,
          y: y1
        }; else if (va.y < y0) return;
        vb = {
          x: fx,
          y: y0
        };
      }
    } else {
      fm = (lx - rx) / (ry - ly);
      fb = fy - fm * fx;
      if (fm < -1 || fm > 1) {
        if (lx > rx) {
          if (!va) va = {
            x: (y0 - fb) / fm,
            y: y0
          }; else if (va.y >= y1) return;
          vb = {
            x: (y1 - fb) / fm,
            y: y1
          };
        } else {
          if (!va) va = {
            x: (y1 - fb) / fm,
            y: y1
          }; else if (va.y < y0) return;
          vb = {
            x: (y0 - fb) / fm,
            y: y0
          };
        }
      } else {
        if (ly < ry) {
          if (!va) va = {
            x: x0,
            y: fm * x0 + fb
          }; else if (va.x >= x1) return;
          vb = {
            x: x1,
            y: fm * x1 + fb
          };
        } else {
          if (!va) va = {
            x: x1,
            y: fm * x1 + fb
          }; else if (va.x < x0) return;
          vb = {
            x: x0,
            y: fm * x0 + fb
          };
        }
      }
    }
    edge.a = va;
    edge.b = vb;
    return true;
  }
  function d3_geom_voronoiEdge(lSite, rSite) {
    this.l = lSite;
    this.r = rSite;
    this.a = this.b = null;
  }
  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, rSite);
    d3_geom_voronoiEdges.push(edge);
    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
    return edge;
  }
  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, null);
    edge.a = va;
    edge.b = vb;
    d3_geom_voronoiEdges.push(edge);
    return edge;
  }
  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
    if (!edge.a && !edge.b) {
      edge.a = vertex;
      edge.l = lSite;
      edge.r = rSite;
    } else if (edge.l === rSite) {
      edge.b = vertex;
    } else {
      edge.a = vertex;
    }
  }
  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
    var va = edge.a, vb = edge.b;
    this.edge = edge;
    this.site = lSite;
    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
  }
  d3_geom_voronoiHalfEdge.prototype = {
    start: function() {
      return this.edge.l === this.site ? this.edge.a : this.edge.b;
    },
    end: function() {
      return this.edge.l === this.site ? this.edge.b : this.edge.a;
    }
  };
  function d3_geom_voronoiRedBlackTree() {
    this._ = null;
  }
  function d3_geom_voronoiRedBlackNode(node) {
    node.U = node.C = node.L = node.R = node.P = node.N = null;
  }
  d3_geom_voronoiRedBlackTree.prototype = {
    insert: function(after, node) {
      var parent, grandpa, uncle;
      if (after) {
        node.P = after;
        node.N = after.N;
        if (after.N) after.N.P = node;
        after.N = node;
        if (after.R) {
          after = after.R;
          while (after.L) after = after.L;
          after.L = node;
        } else {
          after.R = node;
        }
        parent = after;
      } else if (this._) {
        after = d3_geom_voronoiRedBlackFirst(this._);
        node.P = null;
        node.N = after;
        after.P = after.L = node;
        parent = after;
      } else {
        node.P = node.N = null;
        this._ = node;
        parent = null;
      }
      node.L = node.R = null;
      node.U = parent;
      node.C = true;
      after = node;
      while (parent && parent.C) {
        grandpa = parent.U;
        if (parent === grandpa.L) {
          uncle = grandpa.R;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.R) {
              d3_geom_voronoiRedBlackRotateLeft(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
          }
        } else {
          uncle = grandpa.L;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.L) {
              d3_geom_voronoiRedBlackRotateRight(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
          }
        }
        parent = after.U;
      }
      this._.C = false;
    },
    remove: function(node) {
      if (node.N) node.N.P = node.P;
      if (node.P) node.P.N = node.N;
      node.N = node.P = null;
      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
      if (parent) {
        if (parent.L === node) parent.L = next; else parent.R = next;
      } else {
        this._ = next;
      }
      if (left && right) {
        red = next.C;
        next.C = node.C;
        next.L = left;
        left.U = next;
        if (next !== right) {
          parent = next.U;
          next.U = node.U;
          node = next.R;
          parent.L = node;
          next.R = right;
          right.U = next;
        } else {
          next.U = parent;
          parent = next;
          node = next.R;
        }
      } else {
        red = node.C;
        node = next;
      }
      if (node) node.U = parent;
      if (red) return;
      if (node && node.C) {
        node.C = false;
        return;
      }
      do {
        if (node === this._) break;
        if (node === parent.L) {
          sibling = parent.R;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            sibling = parent.R;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.R || !sibling.R.C) {
              sibling.L.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateRight(this, sibling);
              sibling = parent.R;
            }
            sibling.C = parent.C;
            parent.C = sibling.R.C = false;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            node = this._;
            break;
          }
        } else {
          sibling = parent.L;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            sibling = parent.L;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.L || !sibling.L.C) {
              sibling.R.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
              sibling = parent.L;
            }
            sibling.C = parent.C;
            parent.C = sibling.L.C = false;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            node = this._;
            break;
          }
        }
        sibling.C = true;
        node = parent;
        parent = parent.U;
      } while (!node.C);
      if (node) node.C = false;
    }
  };
  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
    var p = node, q = node.R, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.R = q.L;
    if (p.R) p.R.U = p;
    q.L = p;
  }
  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
    var p = node, q = node.L, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.L = q.R;
    if (p.L) p.L.U = p;
    q.R = p;
  }
  function d3_geom_voronoiRedBlackFirst(node) {
    while (node.L) node = node.L;
    return node;
  }
  function d3_geom_voronoi(sites, bbox) {
    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
    d3_geom_voronoiEdges = [];
    d3_geom_voronoiCells = new Array(sites.length);
    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
    while (true) {
      circle = d3_geom_voronoiFirstCircle;
      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
        if (site.x !== x0 || site.y !== y0) {
          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
          d3_geom_voronoiAddBeach(site);
          x0 = site.x, y0 = site.y;
        }
        site = sites.pop();
      } else if (circle) {
        d3_geom_voronoiRemoveBeach(circle.arc);
      } else {
        break;
      }
    }
    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
    var diagram = {
      cells: d3_geom_voronoiCells,
      edges: d3_geom_voronoiEdges
    };
    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
    return diagram;
  }
  function d3_geom_voronoiVertexOrder(a, b) {
    return b.y - a.y || b.x - a.x;
  }
  d3.geom.voronoi = function(points) {
    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
    if (points) return voronoi(points);
    function voronoi(data) {
      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
          var s = e.start();
          return [ s.x, s.y ];
        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
        polygon.point = data[i];
      });
      return polygons;
    }
    function sites(data) {
      return data.map(function(d, i) {
        return {
          x: Math.round(fx(d, i) / ε) * ε,
          y: Math.round(fy(d, i) / ε) * ε,
          i: i
        };
      });
    }
    voronoi.links = function(data) {
      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
        return edge.l && edge.r;
      }).map(function(edge) {
        return {
          source: data[edge.l.i],
          target: data[edge.r.i]
        };
      });
    };
    voronoi.triangles = function(data) {
      var triangles = [];
      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
        while (++j < m) {
          e0 = e1;
          s0 = s1;
          e1 = edges[j].edge;
          s1 = e1.l === site ? e1.r : e1.l;
          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
          }
        }
      });
      return triangles;
    };
    voronoi.x = function(_) {
      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
    };
    voronoi.y = function(_) {
      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
    };
    voronoi.clipExtent = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
      return voronoi;
    };
    voronoi.size = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
    };
    return voronoi;
  };
  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
  function d3_geom_voronoiTriangleArea(a, b, c) {
    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
  }
  d3.geom.delaunay = function(vertices) {
    return d3.geom.voronoi().triangles(vertices);
  };
  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
    if (compat = arguments.length) {
      x = d3_geom_quadtreeCompatX;
      y = d3_geom_quadtreeCompatY;
      if (compat === 3) {
        y2 = y1;
        x2 = x1;
        y1 = x1 = 0;
      }
      return quadtree(points);
    }
    function quadtree(data) {
      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
      if (x1 != null) {
        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
      } else {
        x2_ = y2_ = -(x1_ = y1_ = Infinity);
        xs = [], ys = [];
        n = data.length;
        if (compat) for (i = 0; i < n; ++i) {
          d = data[i];
          if (d.x < x1_) x1_ = d.x;
          if (d.y < y1_) y1_ = d.y;
          if (d.x > x2_) x2_ = d.x;
          if (d.y > y2_) y2_ = d.y;
          xs.push(d.x);
          ys.push(d.y);
        } else for (i = 0; i < n; ++i) {
          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
          if (x_ < x1_) x1_ = x_;
          if (y_ < y1_) y1_ = y_;
          if (x_ > x2_) x2_ = x_;
          if (y_ > y2_) y2_ = y_;
          xs.push(x_);
          ys.push(y_);
        }
      }
      var dx = x2_ - x1_, dy = y2_ - y1_;
      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
      function insert(n, d, x, y, x1, y1, x2, y2) {
        if (isNaN(x) || isNaN(y)) return;
        if (n.leaf) {
          var nx = n.x, ny = n.y;
          if (nx != null) {
            if (abs(nx - x) + abs(ny - y) < .01) {
              insertChild(n, d, x, y, x1, y1, x2, y2);
            } else {
              var nPoint = n.point;
              n.x = n.y = n.point = null;
              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
              insertChild(n, d, x, y, x1, y1, x2, y2);
            }
          } else {
            n.x = x, n.y = y, n.point = d;
          }
        } else {
          insertChild(n, d, x, y, x1, y1, x2, y2);
        }
      }
      function insertChild(n, d, x, y, x1, y1, x2, y2) {
        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;
        n.leaf = false;
        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
        if (right) x1 = xm; else x2 = xm;
        if (below) y1 = ym; else y2 = ym;
        insert(n, d, x, y, x1, y1, x2, y2);
      }
      var root = d3_geom_quadtreeNode();
      root.add = function(d) {
        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
      };
      root.visit = function(f) {
        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
      };
      root.find = function(point) {
        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);
      };
      i = -1;
      if (x1 == null) {
        while (++i < n) {
          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
        }
        --i;
      } else data.forEach(root.add);
      xs = ys = data = d = null;
      return root;
    }
    quadtree.x = function(_) {
      return arguments.length ? (x = _, quadtree) : x;
    };
    quadtree.y = function(_) {
      return arguments.length ? (y = _, quadtree) : y;
    };
    quadtree.extent = function(_) {
      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
      y2 = +_[1][1];
      return quadtree;
    };
    quadtree.size = function(_) {
      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
      return quadtree;
    };
    return quadtree;
  };
  function d3_geom_quadtreeCompatX(d) {
    return d.x;
  }
  function d3_geom_quadtreeCompatY(d) {
    return d.y;
  }
  function d3_geom_quadtreeNode() {
    return {
      leaf: true,
      nodes: [],
      point: null,
      x: null,
      y: null
    };
  }
  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
    if (!f(node, x1, y1, x2, y2)) {
      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
    }
  }
  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {
    var minDistance2 = Infinity, closestPoint;
    (function find(node, x1, y1, x2, y2) {
      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;
      if (point = node.point) {
        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;
        if (distance2 < minDistance2) {
          var distance = Math.sqrt(minDistance2 = distance2);
          x0 = x - distance, y0 = y - distance;
          x3 = x + distance, y3 = y + distance;
          closestPoint = point;
        }
      }
      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;
      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {
        if (node = children[i & 3]) switch (i & 3) {
         case 0:
          find(node, x1, y1, xm, ym);
          break;

         case 1:
          find(node, xm, y1, x2, ym);
          break;

         case 2:
          find(node, x1, ym, xm, y2);
          break;

         case 3:
          find(node, xm, ym, x2, y2);
          break;
        }
      }
    })(root, x0, y0, x3, y3);
    return closestPoint;
  }
  d3.interpolateRgb = d3_interpolateRgb;
  function d3_interpolateRgb(a, b) {
    a = d3.rgb(a);
    b = d3.rgb(b);
    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
    return function(t) {
      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
    };
  }
  d3.interpolateObject = d3_interpolateObject;
  function d3_interpolateObject(a, b) {
    var i = {}, c = {}, k;
    for (k in a) {
      if (k in b) {
        i[k] = d3_interpolate(a[k], b[k]);
      } else {
        c[k] = a[k];
      }
    }
    for (k in b) {
      if (!(k in a)) {
        c[k] = b[k];
      }
    }
    return function(t) {
      for (k in i) c[k] = i[k](t);
      return c;
    };
  }
  d3.interpolateNumber = d3_interpolateNumber;
  function d3_interpolateNumber(a, b) {
    a = +a, b = +b;
    return function(t) {
      return a * (1 - t) + b * t;
    };
  }
  d3.interpolateString = d3_interpolateString;
  function d3_interpolateString(a, b) {
    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
    a = a + "", b = b + "";
    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
      if ((bs = bm.index) > bi) {
        bs = b.slice(bi, bs);
        if (s[i]) s[i] += bs; else s[++i] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s[i]) s[i] += bm; else s[++i] = bm;
      } else {
        s[++i] = null;
        q.push({
          i: i,
          x: d3_interpolateNumber(am, bm)
        });
      }
      bi = d3_interpolate_numberB.lastIndex;
    }
    if (bi < b.length) {
      bs = b.slice(bi);
      if (s[i]) s[i] += bs; else s[++i] = bs;
    }
    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
      return b(t) + "";
    }) : function() {
      return b;
    } : (b = q.length, function(t) {
      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    });
  }
  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
  d3.interpolate = d3_interpolate;
  function d3_interpolate(a, b) {
    var i = d3.interpolators.length, f;
    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
    return f;
  }
  d3.interpolators = [ function(a, b) {
    var t = typeof b;
    return (t === "string" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\(|hsl\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
  } ];
  d3.interpolateArray = d3_interpolateArray;
  function d3_interpolateArray(a, b) {
    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
    for (;i < na; ++i) c[i] = a[i];
    for (;i < nb; ++i) c[i] = b[i];
    return function(t) {
      for (i = 0; i < n0; ++i) c[i] = x[i](t);
      return c;
    };
  }
  var d3_ease_default = function() {
    return d3_identity;
  };
  var d3_ease = d3.map({
    linear: d3_ease_default,
    poly: d3_ease_poly,
    quad: function() {
      return d3_ease_quad;
    },
    cubic: function() {
      return d3_ease_cubic;
    },
    sin: function() {
      return d3_ease_sin;
    },
    exp: function() {
      return d3_ease_exp;
    },
    circle: function() {
      return d3_ease_circle;
    },
    elastic: d3_ease_elastic,
    back: d3_ease_back,
    bounce: function() {
      return d3_ease_bounce;
    }
  });
  var d3_ease_mode = d3.map({
    "in": d3_identity,
    out: d3_ease_reverse,
    "in-out": d3_ease_reflect,
    "out-in": function(f) {
      return d3_ease_reflect(d3_ease_reverse(f));
    }
  });
  d3.ease = function(name) {
    var i = name.indexOf("-"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : "in";
    t = d3_ease.get(t) || d3_ease_default;
    m = d3_ease_mode.get(m) || d3_identity;
    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
  };
  function d3_ease_clamp(f) {
    return function(t) {
      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
    };
  }
  function d3_ease_reverse(f) {
    return function(t) {
      return 1 - f(1 - t);
    };
  }
  function d3_ease_reflect(f) {
    return function(t) {
      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
    };
  }
  function d3_ease_quad(t) {
    return t * t;
  }
  function d3_ease_cubic(t) {
    return t * t * t;
  }
  function d3_ease_cubicInOut(t) {
    if (t <= 0) return 0;
    if (t >= 1) return 1;
    var t2 = t * t, t3 = t2 * t;
    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
  }
  function d3_ease_poly(e) {
    return function(t) {
      return Math.pow(t, e);
    };
  }
  function d3_ease_sin(t) {
    return 1 - Math.cos(t * halfπ);
  }
  function d3_ease_exp(t) {
    return Math.pow(2, 10 * (t - 1));
  }
  function d3_ease_circle(t) {
    return 1 - Math.sqrt(1 - t * t);
  }
  function d3_ease_elastic(a, p) {
    var s;
    if (arguments.length < 2) p = .45;
    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
    return function(t) {
      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
    };
  }
  function d3_ease_back(s) {
    if (!s) s = 1.70158;
    return function(t) {
      return t * t * ((s + 1) * t - s);
    };
  }
  function d3_ease_bounce(t) {
    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
  }
  d3.interpolateHcl = d3_interpolateHcl;
  function d3_interpolateHcl(a, b) {
    a = d3.hcl(a);
    b = d3.hcl(b);
    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
    };
  }
  d3.interpolateHsl = d3_interpolateHsl;
  function d3_interpolateHsl(a, b) {
    a = d3.hsl(a);
    b = d3.hsl(b);
    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
    };
  }
  d3.interpolateLab = d3_interpolateLab;
  function d3_interpolateLab(a, b) {
    a = d3.lab(a);
    b = d3.lab(b);
    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
    return function(t) {
      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
    };
  }
  d3.interpolateRound = d3_interpolateRound;
  function d3_interpolateRound(a, b) {
    b -= a;
    return function(t) {
      return Math.round(a + b * t);
    };
  }
  d3.transform = function(string) {
    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
    return (d3.transform = function(string) {
      if (string != null) {
        g.setAttribute("transform", string);
        var t = g.transform.baseVal.consolidate();
      }
      return new d3_transform(t ? t.matrix : d3_transformIdentity);
    })(string);
  };
  function d3_transform(m) {
    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
    if (r0[0] * r1[1] < r1[0] * r0[1]) {
      r0[0] *= -1;
      r0[1] *= -1;
      kx *= -1;
      kz *= -1;
    }
    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
    this.translate = [ m.e, m.f ];
    this.scale = [ kx, ky ];
    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
  }
  d3_transform.prototype.toString = function() {
    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
  };
  function d3_transformDot(a, b) {
    return a[0] * b[0] + a[1] * b[1];
  }
  function d3_transformNormalize(a) {
    var k = Math.sqrt(d3_transformDot(a, a));
    if (k) {
      a[0] /= k;
      a[1] /= k;
    }
    return k;
  }
  function d3_transformCombine(a, b, k) {
    a[0] += k * b[0];
    a[1] += k * b[1];
    return a;
  }
  var d3_transformIdentity = {
    a: 1,
    b: 0,
    c: 0,
    d: 1,
    e: 0,
    f: 0
  };
  d3.interpolateTransform = d3_interpolateTransform;
  function d3_interpolateTransformPop(s) {
    return s.length ? s.pop() + "," : "";
  }
  function d3_interpolateTranslate(ta, tb, s, q) {
    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {
      var i = s.push("translate(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: d3_interpolateNumber(ta[0], tb[0])
      }, {
        i: i - 2,
        x: d3_interpolateNumber(ta[1], tb[1])
      });
    } else if (tb[0] || tb[1]) {
      s.push("translate(" + tb + ")");
    }
  }
  function d3_interpolateRotate(ra, rb, s, q) {
    if (ra !== rb) {
      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
      q.push({
        i: s.push(d3_interpolateTransformPop(s) + "rotate(", null, ")") - 2,
        x: d3_interpolateNumber(ra, rb)
      });
    } else if (rb) {
      s.push(d3_interpolateTransformPop(s) + "rotate(" + rb + ")");
    }
  }
  function d3_interpolateSkew(wa, wb, s, q) {
    if (wa !== wb) {
      q.push({
        i: s.push(d3_interpolateTransformPop(s) + "skewX(", null, ")") - 2,
        x: d3_interpolateNumber(wa, wb)
      });
    } else if (wb) {
      s.push(d3_interpolateTransformPop(s) + "skewX(" + wb + ")");
    }
  }
  function d3_interpolateScale(ka, kb, s, q) {
    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {
      var i = s.push(d3_interpolateTransformPop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: d3_interpolateNumber(ka[0], kb[0])
      }, {
        i: i - 2,
        x: d3_interpolateNumber(ka[1], kb[1])
      });
    } else if (kb[0] !== 1 || kb[1] !== 1) {
      s.push(d3_interpolateTransformPop(s) + "scale(" + kb + ")");
    }
  }
  function d3_interpolateTransform(a, b) {
    var s = [], q = [];
    a = d3.transform(a), b = d3.transform(b);
    d3_interpolateTranslate(a.translate, b.translate, s, q);
    d3_interpolateRotate(a.rotate, b.rotate, s, q);
    d3_interpolateSkew(a.skew, b.skew, s, q);
    d3_interpolateScale(a.scale, b.scale, s, q);
    a = b = null;
    return function(t) {
      var i = -1, n = q.length, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  }
  function d3_uninterpolateNumber(a, b) {
    b = (b -= a = +a) || 1 / b;
    return function(x) {
      return (x - a) / b;
    };
  }
  function d3_uninterpolateClamp(a, b) {
    b = (b -= a = +a) || 1 / b;
    return function(x) {
      return Math.max(0, Math.min(1, (x - a) / b));
    };
  }
  d3.layout = {};
  d3.layout.bundle = function() {
    return function(links) {
      var paths = [], i = -1, n = links.length;
      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
      return paths;
    };
  };
  function d3_layout_bundlePath(link) {
    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
    while (start !== lca) {
      start = start.parent;
      points.push(start);
    }
    var k = points.length;
    while (end !== lca) {
      points.splice(k, 0, end);
      end = end.parent;
    }
    return points;
  }
  function d3_layout_bundleAncestors(node) {
    var ancestors = [], parent = node.parent;
    while (parent != null) {
      ancestors.push(node);
      node = parent;
      parent = parent.parent;
    }
    ancestors.push(node);
    return ancestors;
  }
  function d3_layout_bundleLeastCommonAncestor(a, b) {
    if (a === b) return a;
    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
    while (aNode === bNode) {
      sharedNode = aNode;
      aNode = aNodes.pop();
      bNode = bNodes.pop();
    }
    return sharedNode;
  }
  d3.layout.chord = function() {
    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
    function relayout() {
      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
      chords = [];
      groups = [];
      k = 0, i = -1;
      while (++i < n) {
        x = 0, j = -1;
        while (++j < n) {
          x += matrix[i][j];
        }
        groupSums.push(x);
        subgroupIndex.push(d3.range(n));
        k += x;
      }
      if (sortGroups) {
        groupIndex.sort(function(a, b) {
          return sortGroups(groupSums[a], groupSums[b]);
        });
      }
      if (sortSubgroups) {
        subgroupIndex.forEach(function(d, i) {
          d.sort(function(a, b) {
            return sortSubgroups(matrix[i][a], matrix[i][b]);
          });
        });
      }
      k = (τ - padding * n) / k;
      x = 0, i = -1;
      while (++i < n) {
        x0 = x, j = -1;
        while (++j < n) {
          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
          subgroups[di + "-" + dj] = {
            index: di,
            subindex: dj,
            startAngle: a0,
            endAngle: a1,
            value: v
          };
        }
        groups[di] = {
          index: di,
          startAngle: x0,
          endAngle: x,
          value: groupSums[di]
        };
        x += padding;
      }
      i = -1;
      while (++i < n) {
        j = i - 1;
        while (++j < n) {
          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
          if (source.value || target.value) {
            chords.push(source.value < target.value ? {
              source: target,
              target: source
            } : {
              source: source,
              target: target
            });
          }
        }
      }
      if (sortChords) resort();
    }
    function resort() {
      chords.sort(function(a, b) {
        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
      });
    }
    chord.matrix = function(x) {
      if (!arguments.length) return matrix;
      n = (matrix = x) && matrix.length;
      chords = groups = null;
      return chord;
    };
    chord.padding = function(x) {
      if (!arguments.length) return padding;
      padding = x;
      chords = groups = null;
      return chord;
    };
    chord.sortGroups = function(x) {
      if (!arguments.length) return sortGroups;
      sortGroups = x;
      chords = groups = null;
      return chord;
    };
    chord.sortSubgroups = function(x) {
      if (!arguments.length) return sortSubgroups;
      sortSubgroups = x;
      chords = null;
      return chord;
    };
    chord.sortChords = function(x) {
      if (!arguments.length) return sortChords;
      sortChords = x;
      if (chords) resort();
      return chord;
    };
    chord.chords = function() {
      if (!chords) relayout();
      return chords;
    };
    chord.groups = function() {
      if (!groups) relayout();
      return groups;
    };
    return chord;
  };
  d3.layout.force = function() {
    var force = {}, event = d3.dispatch("start", "tick", "end"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
    function repulse(node) {
      return function(quad, x1, _, x2) {
        if (quad.point !== node) {
          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
          if (dw * dw / theta2 < dn) {
            if (dn < chargeDistance2) {
              var k = quad.charge / dn;
              node.px -= dx * k;
              node.py -= dy * k;
            }
            return true;
          }
          if (quad.point && dn && dn < chargeDistance2) {
            var k = quad.pointCharge / dn;
            node.px -= dx * k;
            node.py -= dy * k;
          }
        }
        return !quad.charge;
      };
    }
    force.tick = function() {
      if ((alpha *= .99) < .005) {
        timer = null;
        event.end({
          type: "end",
          alpha: alpha = 0
        });
        return true;
      }
      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
      for (i = 0; i < m; ++i) {
        o = links[i];
        s = o.source;
        t = o.target;
        x = t.x - s.x;
        y = t.y - s.y;
        if (l = x * x + y * y) {
          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
          x *= l;
          y *= l;
          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);
          t.y -= y * k;
          s.x += x * (k = 1 - k);
          s.y += y * k;
        }
      }
      if (k = alpha * gravity) {
        x = size[0] / 2;
        y = size[1] / 2;
        i = -1;
        if (k) while (++i < n) {
          o = nodes[i];
          o.x += (x - o.x) * k;
          o.y += (y - o.y) * k;
        }
      }
      if (charge) {
        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
        i = -1;
        while (++i < n) {
          if (!(o = nodes[i]).fixed) {
            q.visit(repulse(o));
          }
        }
      }
      i = -1;
      while (++i < n) {
        o = nodes[i];
        if (o.fixed) {
          o.x = o.px;
          o.y = o.py;
        } else {
          o.x -= (o.px - (o.px = o.x)) * friction;
          o.y -= (o.py - (o.py = o.y)) * friction;
        }
      }
      event.tick({
        type: "tick",
        alpha: alpha
      });
    };
    force.nodes = function(x) {
      if (!arguments.length) return nodes;
      nodes = x;
      return force;
    };
    force.links = function(x) {
      if (!arguments.length) return links;
      links = x;
      return force;
    };
    force.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return force;
    };
    force.linkDistance = function(x) {
      if (!arguments.length) return linkDistance;
      linkDistance = typeof x === "function" ? x : +x;
      return force;
    };
    force.distance = force.linkDistance;
    force.linkStrength = function(x) {
      if (!arguments.length) return linkStrength;
      linkStrength = typeof x === "function" ? x : +x;
      return force;
    };
    force.friction = function(x) {
      if (!arguments.length) return friction;
      friction = +x;
      return force;
    };
    force.charge = function(x) {
      if (!arguments.length) return charge;
      charge = typeof x === "function" ? x : +x;
      return force;
    };
    force.chargeDistance = function(x) {
      if (!arguments.length) return Math.sqrt(chargeDistance2);
      chargeDistance2 = x * x;
      return force;
    };
    force.gravity = function(x) {
      if (!arguments.length) return gravity;
      gravity = +x;
      return force;
    };
    force.theta = function(x) {
      if (!arguments.length) return Math.sqrt(theta2);
      theta2 = x * x;
      return force;
    };
    force.alpha = function(x) {
      if (!arguments.length) return alpha;
      x = +x;
      if (alpha) {
        if (x > 0) {
          alpha = x;
        } else {
          timer.c = null, timer.t = NaN, timer = null;
          event.end({
            type: "end",
            alpha: alpha = 0
          });
        }
      } else if (x > 0) {
        event.start({
          type: "start",
          alpha: alpha = x
        });
        timer = d3_timer(force.tick);
      }
      return force;
    };
    force.start = function() {
      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
      for (i = 0; i < n; ++i) {
        (o = nodes[i]).index = i;
        o.weight = 0;
      }
      for (i = 0; i < m; ++i) {
        o = links[i];
        if (typeof o.source == "number") o.source = nodes[o.source];
        if (typeof o.target == "number") o.target = nodes[o.target];
        ++o.source.weight;
        ++o.target.weight;
      }
      for (i = 0; i < n; ++i) {
        o = nodes[i];
        if (isNaN(o.x)) o.x = position("x", w);
        if (isNaN(o.y)) o.y = position("y", h);
        if (isNaN(o.px)) o.px = o.x;
        if (isNaN(o.py)) o.py = o.y;
      }
      distances = [];
      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
      strengths = [];
      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
      charges = [];
      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
      function position(dimension, size) {
        if (!neighbors) {
          neighbors = new Array(n);
          for (j = 0; j < n; ++j) {
            neighbors[j] = [];
          }
          for (j = 0; j < m; ++j) {
            var o = links[j];
            neighbors[o.source.index].push(o.target);
            neighbors[o.target.index].push(o.source);
          }
        }
        var candidates = neighbors[i], j = -1, l = candidates.length, x;
        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;
        return Math.random() * size;
      }
      return force.resume();
    };
    force.resume = function() {
      return force.alpha(.1);
    };
    force.stop = function() {
      return force.alpha(0);
    };
    force.drag = function() {
      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
      if (!arguments.length) return drag;
      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
    };
    function dragmove(d) {
      d.px = d3.event.x, d.py = d3.event.y;
      force.resume();
    }
    return d3.rebind(force, event, "on");
  };
  function d3_layout_forceDragstart(d) {
    d.fixed |= 2;
  }
  function d3_layout_forceDragend(d) {
    d.fixed &= ~6;
  }
  function d3_layout_forceMouseover(d) {
    d.fixed |= 4;
    d.px = d.x, d.py = d.y;
  }
  function d3_layout_forceMouseout(d) {
    d.fixed &= ~4;
  }
  function d3_layout_forceAccumulate(quad, alpha, charges) {
    var cx = 0, cy = 0;
    quad.charge = 0;
    if (!quad.leaf) {
      var nodes = quad.nodes, n = nodes.length, i = -1, c;
      while (++i < n) {
        c = nodes[i];
        if (c == null) continue;
        d3_layout_forceAccumulate(c, alpha, charges);
        quad.charge += c.charge;
        cx += c.charge * c.cx;
        cy += c.charge * c.cy;
      }
    }
    if (quad.point) {
      if (!quad.leaf) {
        quad.point.x += Math.random() - .5;
        quad.point.y += Math.random() - .5;
      }
      var k = alpha * charges[quad.point.index];
      quad.charge += quad.pointCharge = k;
      cx += k * quad.point.x;
      cy += k * quad.point.y;
    }
    quad.cx = cx / quad.charge;
    quad.cy = cy / quad.charge;
  }
  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
  d3.layout.hierarchy = function() {
    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
    function hierarchy(root) {
      var stack = [ root ], nodes = [], node;
      root.depth = 0;
      while ((node = stack.pop()) != null) {
        nodes.push(node);
        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
          var n, childs, child;
          while (--n >= 0) {
            stack.push(child = childs[n]);
            child.parent = node;
            child.depth = node.depth + 1;
          }
          if (value) node.value = 0;
          node.children = childs;
        } else {
          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
          delete node.children;
        }
      }
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var childs, parent;
        if (sort && (childs = node.children)) childs.sort(sort);
        if (value && (parent = node.parent)) parent.value += node.value;
      });
      return nodes;
    }
    hierarchy.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return hierarchy;
    };
    hierarchy.children = function(x) {
      if (!arguments.length) return children;
      children = x;
      return hierarchy;
    };
    hierarchy.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return hierarchy;
    };
    hierarchy.revalue = function(root) {
      if (value) {
        d3_layout_hierarchyVisitBefore(root, function(node) {
          if (node.children) node.value = 0;
        });
        d3_layout_hierarchyVisitAfter(root, function(node) {
          var parent;
          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
          if (parent = node.parent) parent.value += node.value;
        });
      }
      return root;
    };
    return hierarchy;
  };
  function d3_layout_hierarchyRebind(object, hierarchy) {
    d3.rebind(object, hierarchy, "sort", "children", "value");
    object.nodes = object;
    object.links = d3_layout_hierarchyLinks;
    return object;
  }
  function d3_layout_hierarchyVisitBefore(node, callback) {
    var nodes = [ node ];
    while ((node = nodes.pop()) != null) {
      callback(node);
      if ((children = node.children) && (n = children.length)) {
        var n, children;
        while (--n >= 0) nodes.push(children[n]);
      }
    }
  }
  function d3_layout_hierarchyVisitAfter(node, callback) {
    var nodes = [ node ], nodes2 = [];
    while ((node = nodes.pop()) != null) {
      nodes2.push(node);
      if ((children = node.children) && (n = children.length)) {
        var i = -1, n, children;
        while (++i < n) nodes.push(children[i]);
      }
    }
    while ((node = nodes2.pop()) != null) {
      callback(node);
    }
  }
  function d3_layout_hierarchyChildren(d) {
    return d.children;
  }
  function d3_layout_hierarchyValue(d) {
    return d.value;
  }
  function d3_layout_hierarchySort(a, b) {
    return b.value - a.value;
  }
  function d3_layout_hierarchyLinks(nodes) {
    return d3.merge(nodes.map(function(parent) {
      return (parent.children || []).map(function(child) {
        return {
          source: parent,
          target: child
        };
      });
    }));
  }
  d3.layout.partition = function() {
    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
    function position(node, x, dx, dy) {
      var children = node.children;
      node.x = x;
      node.y = node.depth * dy;
      node.dx = dx;
      node.dy = dy;
      if (children && (n = children.length)) {
        var i = -1, n, c, d;
        dx = node.value ? dx / node.value : 0;
        while (++i < n) {
          position(c = children[i], x, d = c.value * dx, dy);
          x += d;
        }
      }
    }
    function depth(node) {
      var children = node.children, d = 0;
      if (children && (n = children.length)) {
        var i = -1, n;
        while (++i < n) d = Math.max(d, depth(children[i]));
      }
      return 1 + d;
    }
    function partition(d, i) {
      var nodes = hierarchy.call(this, d, i);
      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
      return nodes;
    }
    partition.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return partition;
    };
    return d3_layout_hierarchyRebind(partition, hierarchy);
  };
  d3.layout.pie = function() {
    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;
    function pie(data) {
      var n = data.length, values = data.map(function(d, i) {
        return +value.call(pie, d, i);
      }), a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === "function" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;
      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
        return values[j] - values[i];
      } : function(i, j) {
        return sort(data[i], data[j]);
      });
      index.forEach(function(i) {
        arcs[i] = {
          data: data[i],
          value: v = values[i],
          startAngle: a,
          endAngle: a += v * k + pa,
          padAngle: p
        };
      });
      return arcs;
    }
    pie.value = function(_) {
      if (!arguments.length) return value;
      value = _;
      return pie;
    };
    pie.sort = function(_) {
      if (!arguments.length) return sort;
      sort = _;
      return pie;
    };
    pie.startAngle = function(_) {
      if (!arguments.length) return startAngle;
      startAngle = _;
      return pie;
    };
    pie.endAngle = function(_) {
      if (!arguments.length) return endAngle;
      endAngle = _;
      return pie;
    };
    pie.padAngle = function(_) {
      if (!arguments.length) return padAngle;
      padAngle = _;
      return pie;
    };
    return pie;
  };
  var d3_layout_pieSortByValue = {};
  d3.layout.stack = function() {
    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
    function stack(data, index) {
      if (!(n = data.length)) return data;
      var series = data.map(function(d, i) {
        return values.call(stack, d, i);
      });
      var points = series.map(function(d) {
        return d.map(function(v, i) {
          return [ x.call(stack, v, i), y.call(stack, v, i) ];
        });
      });
      var orders = order.call(stack, points, index);
      series = d3.permute(series, orders);
      points = d3.permute(points, orders);
      var offsets = offset.call(stack, points, index);
      var m = series[0].length, n, i, j, o;
      for (j = 0; j < m; ++j) {
        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
        for (i = 1; i < n; ++i) {
          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
        }
      }
      return data;
    }
    stack.values = function(x) {
      if (!arguments.length) return values;
      values = x;
      return stack;
    };
    stack.order = function(x) {
      if (!arguments.length) return order;
      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
      return stack;
    };
    stack.offset = function(x) {
      if (!arguments.length) return offset;
      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
      return stack;
    };
    stack.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      return stack;
    };
    stack.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      return stack;
    };
    stack.out = function(z) {
      if (!arguments.length) return out;
      out = z;
      return stack;
    };
    return stack;
  };
  function d3_layout_stackX(d) {
    return d.x;
  }
  function d3_layout_stackY(d) {
    return d.y;
  }
  function d3_layout_stackOut(d, y0, y) {
    d.y0 = y0;
    d.y = y;
  }
  var d3_layout_stackOrders = d3.map({
    "inside-out": function(data) {
      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
        return max[a] - max[b];
      }), top = 0, bottom = 0, tops = [], bottoms = [];
      for (i = 0; i < n; ++i) {
        j = index[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }
      return bottoms.reverse().concat(tops);
    },
    reverse: function(data) {
      return d3.range(data.length).reverse();
    },
    "default": d3_layout_stackOrderDefault
  });
  var d3_layout_stackOffsets = d3.map({
    silhouette: function(data) {
      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o > max) max = o;
        sums.push(o);
      }
      for (j = 0; j < m; ++j) {
        y0[j] = (max - sums[j]) / 2;
      }
      return y0;
    },
    wiggle: function(data) {
      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
      y0[0] = o = o0 = 0;
      for (j = 1; j < m; ++j) {
        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
          }
          s2 += s3 * data[i][j][1];
        }
        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
        if (o < o0) o0 = o;
      }
      for (j = 0; j < m; ++j) y0[j] -= o0;
      return y0;
    },
    expand: function(data) {
      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
      }
      for (j = 0; j < m; ++j) y0[j] = 0;
      return y0;
    },
    zero: d3_layout_stackOffsetZero
  });
  function d3_layout_stackOrderDefault(data) {
    return d3.range(data.length);
  }
  function d3_layout_stackOffsetZero(data) {
    var j = -1, m = data[0].length, y0 = [];
    while (++j < m) y0[j] = 0;
    return y0;
  }
  function d3_layout_stackMaxIndex(array) {
    var i = 1, j = 0, v = array[0][1], k, n = array.length;
    for (;i < n; ++i) {
      if ((k = array[i][1]) > v) {
        j = i;
        v = k;
      }
    }
    return j;
  }
  function d3_layout_stackReduceSum(d) {
    return d.reduce(d3_layout_stackSum, 0);
  }
  function d3_layout_stackSum(p, d) {
    return p + d[1];
  }
  d3.layout.histogram = function() {
    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
    function histogram(data, i) {
      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
      while (++i < m) {
        bin = bins[i] = [];
        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
        bin.y = 0;
      }
      if (m > 0) {
        i = -1;
        while (++i < n) {
          x = values[i];
          if (x >= range[0] && x <= range[1]) {
            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
            bin.y += k;
            bin.push(data[i]);
          }
        }
      }
      return bins;
    }
    histogram.value = function(x) {
      if (!arguments.length) return valuer;
      valuer = x;
      return histogram;
    };
    histogram.range = function(x) {
      if (!arguments.length) return ranger;
      ranger = d3_functor(x);
      return histogram;
    };
    histogram.bins = function(x) {
      if (!arguments.length) return binner;
      binner = typeof x === "number" ? function(range) {
        return d3_layout_histogramBinFixed(range, x);
      } : d3_functor(x);
      return histogram;
    };
    histogram.frequency = function(x) {
      if (!arguments.length) return frequency;
      frequency = !!x;
      return histogram;
    };
    return histogram;
  };
  function d3_layout_histogramBinSturges(range, values) {
    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
  }
  function d3_layout_histogramBinFixed(range, n) {
    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
    while (++x <= n) f[x] = m * x + b;
    return f;
  }
  function d3_layout_histogramRange(values) {
    return [ d3.min(values), d3.max(values) ];
  }
  d3.layout.pack = function() {
    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
    function pack(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
        return radius;
      };
      root.x = root.y = 0;
      d3_layout_hierarchyVisitAfter(root, function(d) {
        d.r = +r(d.value);
      });
      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
      if (padding) {
        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r += dr;
        });
        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r -= dr;
        });
      }
      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
      return nodes;
    }
    pack.size = function(_) {
      if (!arguments.length) return size;
      size = _;
      return pack;
    };
    pack.radius = function(_) {
      if (!arguments.length) return radius;
      radius = _ == null || typeof _ === "function" ? _ : +_;
      return pack;
    };
    pack.padding = function(_) {
      if (!arguments.length) return padding;
      padding = +_;
      return pack;
    };
    return d3_layout_hierarchyRebind(pack, hierarchy);
  };
  function d3_layout_packSort(a, b) {
    return a.value - b.value;
  }
  function d3_layout_packInsert(a, b) {
    var c = a._pack_next;
    a._pack_next = b;
    b._pack_prev = a;
    b._pack_next = c;
    c._pack_prev = b;
  }
  function d3_layout_packSplice(a, b) {
    a._pack_next = b;
    b._pack_prev = a;
  }
  function d3_layout_packIntersects(a, b) {
    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
    return .999 * dr * dr > dx * dx + dy * dy;
  }
  function d3_layout_packSiblings(node) {
    if (!(nodes = node.children) || !(n = nodes.length)) return;
    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
    function bound(node) {
      xMin = Math.min(node.x - node.r, xMin);
      xMax = Math.max(node.x + node.r, xMax);
      yMin = Math.min(node.y - node.r, yMin);
      yMax = Math.max(node.y + node.r, yMax);
    }
    nodes.forEach(d3_layout_packLink);
    a = nodes[0];
    a.x = -a.r;
    a.y = 0;
    bound(a);
    if (n > 1) {
      b = nodes[1];
      b.x = b.r;
      b.y = 0;
      bound(b);
      if (n > 2) {
        c = nodes[2];
        d3_layout_packPlace(a, b, c);
        bound(c);
        d3_layout_packInsert(a, c);
        a._pack_prev = c;
        d3_layout_packInsert(c, b);
        b = a._pack_next;
        for (i = 3; i < n; i++) {
          d3_layout_packPlace(a, b, c = nodes[i]);
          var isect = 0, s1 = 1, s2 = 1;
          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
            if (d3_layout_packIntersects(j, c)) {
              isect = 1;
              break;
            }
          }
          if (isect == 1) {
            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
              if (d3_layout_packIntersects(k, c)) {
                break;
              }
            }
          }
          if (isect) {
            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
            i--;
          } else {
            d3_layout_packInsert(a, c);
            b = c;
            bound(c);
          }
        }
      }
    }
    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
    for (i = 0; i < n; i++) {
      c = nodes[i];
      c.x -= cx;
      c.y -= cy;
      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
    }
    node.r = cr;
    nodes.forEach(d3_layout_packUnlink);
  }
  function d3_layout_packLink(node) {
    node._pack_next = node._pack_prev = node;
  }
  function d3_layout_packUnlink(node) {
    delete node._pack_next;
    delete node._pack_prev;
  }
  function d3_layout_packTransform(node, x, y, k) {
    var children = node.children;
    node.x = x += k * node.x;
    node.y = y += k * node.y;
    node.r *= k;
    if (children) {
      var i = -1, n = children.length;
      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
    }
  }
  function d3_layout_packPlace(a, b, c) {
    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
    if (db && (dx || dy)) {
      var da = b.r + c.r, dc = dx * dx + dy * dy;
      da *= da;
      db *= db;
      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
      c.x = a.x + x * dx + y * dy;
      c.y = a.y + x * dy - y * dx;
    } else {
      c.x = a.x + db;
      c.y = a.y;
    }
  }
  d3.layout.tree = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
    function tree(d, i) {
      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
      d3_layout_hierarchyVisitBefore(root1, secondWalk);
      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
        var left = root0, right = root0, bottom = root0;
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
      return nodes;
    }
    function wrapTree(root0) {
      var root1 = {
        A: null,
        children: [ root0 ]
      }, queue = [ root1 ], node1;
      while ((node1 = queue.pop()) != null) {
        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
          queue.push((children[i] = child = {
            _: children[i],
            parent: node1,
            children: (child = children[i].children) && child.slice() || [],
            A: null,
            a: null,
            z: 0,
            m: 0,
            c: 0,
            s: 0,
            t: null,
            i: i
          }).a = child);
        }
      }
      return root1.children[0];
    }
    function firstWalk(v) {
      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
      if (children.length) {
        d3_layout_treeShift(v);
        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
        if (w) {
          v.z = w.z + separation(v._, w._);
          v.m = v.z - midpoint;
        } else {
          v.z = midpoint;
        }
      } else if (w) {
        v.z = w.z + separation(v._, w._);
      }
      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
    }
    function secondWalk(v) {
      v._.x = v.z + v.parent.m;
      v.m += v.parent.m;
    }
    function apportion(v, w, ancestor) {
      if (w) {
        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
          vom = d3_layout_treeLeft(vom);
          vop = d3_layout_treeRight(vop);
          vop.a = v;
          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
          if (shift > 0) {
            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
            sip += shift;
            sop += shift;
          }
          sim += vim.m;
          sip += vip.m;
          som += vom.m;
          sop += vop.m;
        }
        if (vim && !d3_layout_treeRight(vop)) {
          vop.t = vim;
          vop.m += sim - sop;
        }
        if (vip && !d3_layout_treeLeft(vom)) {
          vom.t = vip;
          vom.m += sip - som;
          ancestor = v;
        }
      }
      return ancestor;
    }
    function sizeNode(node) {
      node.x *= size[0];
      node.y = node.depth * size[1];
    }
    tree.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return tree;
    };
    tree.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null ? sizeNode : null;
      return tree;
    };
    tree.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) == null ? null : sizeNode;
      return tree;
    };
    return d3_layout_hierarchyRebind(tree, hierarchy);
  };
  function d3_layout_treeSeparation(a, b) {
    return a.parent == b.parent ? 1 : 2;
  }
  function d3_layout_treeLeft(v) {
    var children = v.children;
    return children.length ? children[0] : v.t;
  }
  function d3_layout_treeRight(v) {
    var children = v.children, n;
    return (n = children.length) ? children[n - 1] : v.t;
  }
  function d3_layout_treeMove(wm, wp, shift) {
    var change = shift / (wp.i - wm.i);
    wp.c -= change;
    wp.s += shift;
    wm.c += change;
    wp.z += shift;
    wp.m += shift;
  }
  function d3_layout_treeShift(v) {
    var shift = 0, change = 0, children = v.children, i = children.length, w;
    while (--i >= 0) {
      w = children[i];
      w.z += shift;
      w.m += shift;
      shift += w.s + (change += w.c);
    }
  }
  function d3_layout_treeAncestor(vim, v, ancestor) {
    return vim.a.parent === v.parent ? vim.a : ancestor;
  }
  d3.layout.cluster = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
    function cluster(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var children = node.children;
        if (children && children.length) {
          node.x = d3_layout_clusterX(children);
          node.y = d3_layout_clusterY(children);
        } else {
          node.x = previousNode ? x += separation(node, previousNode) : 0;
          node.y = 0;
          previousNode = node;
        }
      });
      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
        node.x = (node.x - root.x) * size[0];
        node.y = (root.y - node.y) * size[1];
      } : function(node) {
        node.x = (node.x - x0) / (x1 - x0) * size[0];
        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
      });
      return nodes;
    }
    cluster.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return cluster;
    };
    cluster.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null;
      return cluster;
    };
    cluster.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) != null;
      return cluster;
    };
    return d3_layout_hierarchyRebind(cluster, hierarchy);
  };
  function d3_layout_clusterY(children) {
    return 1 + d3.max(children, function(child) {
      return child.y;
    });
  }
  function d3_layout_clusterX(children) {
    return children.reduce(function(x, child) {
      return x + child.x;
    }, 0) / children.length;
  }
  function d3_layout_clusterLeft(node) {
    var children = node.children;
    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
  }
  function d3_layout_clusterRight(node) {
    var children = node.children, n;
    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
  }
  d3.layout.treemap = function() {
    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
    function scale(children, k) {
      var i = -1, n = children.length, child, area;
      while (++i < n) {
        area = (child = children[i]).value * (k < 0 ? 0 : k);
        child.area = isNaN(area) || area <= 0 ? 0 : area;
      }
    }
    function squarify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while ((n = remaining.length) > 0) {
          row.push(child = remaining[n - 1]);
          row.area += child.area;
          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
            remaining.pop();
            best = score;
          } else {
            row.area -= row.pop().area;
            position(row, u, rect, false);
            u = Math.min(rect.dx, rect.dy);
            row.length = row.area = 0;
            best = Infinity;
          }
        }
        if (row.length) {
          position(row, u, rect, true);
          row.length = row.area = 0;
        }
        children.forEach(squarify);
      }
    }
    function stickify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), remaining = children.slice(), child, row = [];
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while (child = remaining.pop()) {
          row.push(child);
          row.area += child.area;
          if (child.z != null) {
            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
            row.length = row.area = 0;
          }
        }
        children.forEach(stickify);
      }
    }
    function worst(row, u) {
      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
      while (++i < n) {
        if (!(r = row[i].area)) continue;
        if (r < rmin) rmin = r;
        if (r > rmax) rmax = r;
      }
      s *= s;
      u *= u;
      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
    }
    function position(row, u, rect, flush) {
      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
      if (u == rect.dx) {
        if (flush || v > rect.dy) v = rect.dy;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dy = v;
          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
        }
        o.z = true;
        o.dx += rect.x + rect.dx - x;
        rect.y += v;
        rect.dy -= v;
      } else {
        if (flush || v > rect.dx) v = rect.dx;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dx = v;
          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
        }
        o.z = false;
        o.dy += rect.y + rect.dy - y;
        rect.x += v;
        rect.dx -= v;
      }
    }
    function treemap(d) {
      var nodes = stickies || hierarchy(d), root = nodes[0];
      root.x = root.y = 0;
      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;
      if (stickies) hierarchy.revalue(root);
      scale([ root ], root.dx * root.dy / root.value);
      (stickies ? stickify : squarify)(root);
      if (sticky) stickies = nodes;
      return nodes;
    }
    treemap.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return treemap;
    };
    treemap.padding = function(x) {
      if (!arguments.length) return padding;
      function padFunction(node) {
        var p = x.call(treemap, node, node.depth);
        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
      }
      function padConstant(node) {
        return d3_layout_treemapPad(node, x);
      }
      var type;
      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
      padConstant) : padConstant;
      return treemap;
    };
    treemap.round = function(x) {
      if (!arguments.length) return round != Number;
      round = x ? Math.round : Number;
      return treemap;
    };
    treemap.sticky = function(x) {
      if (!arguments.length) return sticky;
      sticky = x;
      stickies = null;
      return treemap;
    };
    treemap.ratio = function(x) {
      if (!arguments.length) return ratio;
      ratio = x;
      return treemap;
    };
    treemap.mode = function(x) {
      if (!arguments.length) return mode;
      mode = x + "";
      return treemap;
    };
    return d3_layout_hierarchyRebind(treemap, hierarchy);
  };
  function d3_layout_treemapPadNull(node) {
    return {
      x: node.x,
      y: node.y,
      dx: node.dx,
      dy: node.dy
    };
  }
  function d3_layout_treemapPad(node, padding) {
    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
    if (dx < 0) {
      x += dx / 2;
      dx = 0;
    }
    if (dy < 0) {
      y += dy / 2;
      dy = 0;
    }
    return {
      x: x,
      y: y,
      dx: dx,
      dy: dy
    };
  }
  d3.random = {
    normal: function(µ, σ) {
      var n = arguments.length;
      if (n < 2) σ = 1;
      if (n < 1) µ = 0;
      return function() {
        var x, y, r;
        do {
          x = Math.random() * 2 - 1;
          y = Math.random() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
      };
    },
    logNormal: function() {
      var random = d3.random.normal.apply(d3, arguments);
      return function() {
        return Math.exp(random());
      };
    },
    bates: function(m) {
      var random = d3.random.irwinHall(m);
      return function() {
        return random() / m;
      };
    },
    irwinHall: function(m) {
      return function() {
        for (var s = 0, j = 0; j < m; j++) s += Math.random();
        return s;
      };
    }
  };
  d3.scale = {};
  function d3_scaleExtent(domain) {
    var start = domain[0], stop = domain[domain.length - 1];
    return start < stop ? [ start, stop ] : [ stop, start ];
  }
  function d3_scaleRange(scale) {
    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
  }
  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
    return function(x) {
      return i(u(x));
    };
  }
  function d3_scale_nice(domain, nice) {
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
    if (x1 < x0) {
      dx = i0, i0 = i1, i1 = dx;
      dx = x0, x0 = x1, x1 = dx;
    }
    domain[i0] = nice.floor(x0);
    domain[i1] = nice.ceil(x1);
    return domain;
  }
  function d3_scale_niceStep(step) {
    return step ? {
      floor: function(x) {
        return Math.floor(x / step) * step;
      },
      ceil: function(x) {
        return Math.ceil(x / step) * step;
      }
    } : d3_scale_niceIdentity;
  }
  var d3_scale_niceIdentity = {
    floor: d3_identity,
    ceil: d3_identity
  };
  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
    if (domain[k] < domain[0]) {
      domain = domain.slice().reverse();
      range = range.slice().reverse();
    }
    while (++j <= k) {
      u.push(uninterpolate(domain[j - 1], domain[j]));
      i.push(interpolate(range[j - 1], range[j]));
    }
    return function(x) {
      var j = d3.bisect(domain, x, 1, k) - 1;
      return i[j](u[j](x));
    };
  }
  d3.scale.linear = function() {
    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
  };
  function d3_scale_linear(domain, range, interpolate, clamp) {
    var output, input;
    function rescale() {
      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
      output = linear(domain, range, uninterpolate, interpolate);
      input = linear(range, domain, uninterpolate, d3_interpolate);
      return scale;
    }
    function scale(x) {
      return output(x);
    }
    scale.invert = function(y) {
      return input(y);
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(Number);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.rangeRound = function(x) {
      return scale.range(x).interpolate(d3_interpolateRound);
    };
    scale.clamp = function(x) {
      if (!arguments.length) return clamp;
      clamp = x;
      return rescale();
    };
    scale.interpolate = function(x) {
      if (!arguments.length) return interpolate;
      interpolate = x;
      return rescale();
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      d3_scale_linearNice(domain, m);
      return rescale();
    };
    scale.copy = function() {
      return d3_scale_linear(domain, range, interpolate, clamp);
    };
    return rescale();
  }
  function d3_scale_linearRebind(scale, linear) {
    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
  }
  function d3_scale_linearNice(domain, m) {
    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
    return domain;
  }
  function d3_scale_linearTickRange(domain, m) {
    if (m == null) m = 10;
    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
    extent[0] = Math.ceil(extent[0] / step) * step;
    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
    extent[2] = step;
    return extent;
  }
  function d3_scale_linearTicks(domain, m) {
    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
  }
  function d3_scale_linearTickFormat(domain, m, format) {
    var range = d3_scale_linearTickRange(domain, m);
    if (format) {
      var match = d3_format_re.exec(format);
      match.shift();
      if (match[8] === "s") {
        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
        match[8] = "f";
        format = d3.format(match.join(""));
        return function(d) {
          return format(prefix.scale(d)) + prefix.symbol;
        };
      }
      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
      format = match.join("");
    } else {
      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
    }
    return d3.format(format);
  }
  var d3_scale_linearFormatSignificant = {
    s: 1,
    g: 1,
    p: 1,
    r: 1,
    e: 1
  };
  function d3_scale_linearPrecision(value) {
    return -Math.floor(Math.log(value) / Math.LN10 + .01);
  }
  function d3_scale_linearFormatPrecision(type, range) {
    var p = d3_scale_linearPrecision(range[2]);
    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
  }
  d3.scale.log = function() {
    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
  };
  function d3_scale_log(linear, base, positive, domain) {
    function log(x) {
      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
    }
    function pow(x) {
      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
    }
    function scale(x) {
      return linear(log(x));
    }
    scale.invert = function(x) {
      return pow(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      positive = x[0] >= 0;
      linear.domain((domain = x.map(Number)).map(log));
      return scale;
    };
    scale.base = function(_) {
      if (!arguments.length) return base;
      base = +_;
      linear.domain(domain.map(log));
      return scale;
    };
    scale.nice = function() {
      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
      linear.domain(niced);
      domain = niced.map(pow);
      return scale;
    };
    scale.ticks = function() {
      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
      if (isFinite(j - i)) {
        if (positive) {
          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
          ticks.push(pow(i));
        } else {
          ticks.push(pow(i));
          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
        }
        for (i = 0; ticks[i] < u; i++) {}
        for (j = ticks.length; ticks[j - 1] > v; j--) {}
        ticks = ticks.slice(i, j);
      }
      return ticks;
    };
    scale.tickFormat = function(n, format) {
      if (!arguments.length) return d3_scale_logFormat;
      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
      var k = Math.max(1, base * n / scale.ticks().length);
      return function(d) {
        var i = d / pow(Math.round(log(d)));
        if (i * base < base - .5) i *= base;
        return i <= k ? format(d) : "";
      };
    };
    scale.copy = function() {
      return d3_scale_log(linear.copy(), base, positive, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
    floor: function(x) {
      return -Math.ceil(-x);
    },
    ceil: function(x) {
      return -Math.floor(-x);
    }
  };
  d3.scale.pow = function() {
    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
  };
  function d3_scale_pow(linear, exponent, domain) {
    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
    function scale(x) {
      return linear(powp(x));
    }
    scale.invert = function(x) {
      return powb(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      linear.domain((domain = x.map(Number)).map(powp));
      return scale;
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      return scale.domain(d3_scale_linearNice(domain, m));
    };
    scale.exponent = function(x) {
      if (!arguments.length) return exponent;
      powp = d3_scale_powPow(exponent = x);
      powb = d3_scale_powPow(1 / exponent);
      linear.domain(domain.map(powp));
      return scale;
    };
    scale.copy = function() {
      return d3_scale_pow(linear.copy(), exponent, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_scale_powPow(e) {
    return function(x) {
      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
    };
  }
  d3.scale.sqrt = function() {
    return d3.scale.pow().exponent(.5);
  };
  d3.scale.ordinal = function() {
    return d3_scale_ordinal([], {
      t: "range",
      a: [ [] ]
    });
  };
  function d3_scale_ordinal(domain, ranger) {
    var index, range, rangeBand;
    function scale(x) {
      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
    }
    function steps(start, step) {
      return d3.range(domain.length).map(function(i) {
        return start + step * i;
      });
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = [];
      index = new d3_Map();
      var i = -1, n = x.length, xi;
      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
      return scale[ranger.t].apply(scale, ranger.a);
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      rangeBand = 0;
      ranger = {
        t: "range",
        a: arguments
      };
      return scale;
    };
    scale.rangePoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, 
      0) : (stop - start) / (domain.length - 1 + padding);
      range = steps(start + step * padding / 2, step);
      rangeBand = 0;
      ranger = {
        t: "rangePoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundPoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), 
      0) : (stop - start) / (domain.length - 1 + padding) | 0;
      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);
      rangeBand = 0;
      ranger = {
        t: "rangeRoundPoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
      range = steps(start + step * outerPadding, step);
      if (reverse) range.reverse();
      rangeBand = step * (1 - padding);
      ranger = {
        t: "rangeBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));
      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);
      if (reverse) range.reverse();
      rangeBand = Math.round(step * (1 - padding));
      ranger = {
        t: "rangeRoundBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeBand = function() {
      return rangeBand;
    };
    scale.rangeExtent = function() {
      return d3_scaleExtent(ranger.a[0]);
    };
    scale.copy = function() {
      return d3_scale_ordinal(domain, ranger);
    };
    return scale.domain(domain);
  }
  d3.scale.category10 = function() {
    return d3.scale.ordinal().range(d3_category10);
  };
  d3.scale.category20 = function() {
    return d3.scale.ordinal().range(d3_category20);
  };
  d3.scale.category20b = function() {
    return d3.scale.ordinal().range(d3_category20b);
  };
  d3.scale.category20c = function() {
    return d3.scale.ordinal().range(d3_category20c);
  };
  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
  d3.scale.quantile = function() {
    return d3_scale_quantile([], []);
  };
  function d3_scale_quantile(domain, range) {
    var thresholds;
    function rescale() {
      var k = 0, q = range.length;
      thresholds = [];
      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
      return scale;
    }
    function scale(x) {
      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.quantiles = function() {
      return thresholds;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
    };
    scale.copy = function() {
      return d3_scale_quantile(domain, range);
    };
    return rescale();
  }
  d3.scale.quantize = function() {
    return d3_scale_quantize(0, 1, [ 0, 1 ]);
  };
  function d3_scale_quantize(x0, x1, range) {
    var kx, i;
    function scale(x) {
      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
    }
    function rescale() {
      kx = range.length / (x1 - x0);
      i = range.length - 1;
      return scale;
    }
    scale.domain = function(x) {
      if (!arguments.length) return [ x0, x1 ];
      x0 = +x[0];
      x1 = +x[x.length - 1];
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      y = y < 0 ? NaN : y / kx + x0;
      return [ y, y + 1 / kx ];
    };
    scale.copy = function() {
      return d3_scale_quantize(x0, x1, range);
    };
    return rescale();
  }
  d3.scale.threshold = function() {
    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
  };
  function d3_scale_threshold(domain, range) {
    function scale(x) {
      if (x <= x) return range[d3.bisect(domain, x)];
    }
    scale.domain = function(_) {
      if (!arguments.length) return domain;
      domain = _;
      return scale;
    };
    scale.range = function(_) {
      if (!arguments.length) return range;
      range = _;
      return scale;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return [ domain[y - 1], domain[y] ];
    };
    scale.copy = function() {
      return d3_scale_threshold(domain, range);
    };
    return scale;
  }
  d3.scale.identity = function() {
    return d3_scale_identity([ 0, 1 ]);
  };
  function d3_scale_identity(domain) {
    function identity(x) {
      return +x;
    }
    identity.invert = identity;
    identity.domain = identity.range = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(identity);
      return identity;
    };
    identity.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    identity.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    identity.copy = function() {
      return d3_scale_identity(domain);
    };
    return identity;
  }
  d3.svg = {};
  function d3_zero() {
    return 0;
  }
  d3.svg.arc = function() {
    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;
    function arc() {
      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;
      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;
      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : "") + "Z";
      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];
      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {
        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);
        if (!cw) p1 *= -1;
        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));
        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));
      }
      if (r1) {
        x0 = r1 * Math.cos(a0 + p1);
        y0 = r1 * Math.sin(a0 + p1);
        x1 = r1 * Math.cos(a1 - p1);
        y1 = r1 * Math.sin(a1 - p1);
        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;
        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {
          var h1 = (a0 + a1) / 2;
          x0 = r1 * Math.cos(h1);
          y0 = r1 * Math.sin(h1);
          x1 = y1 = null;
        }
      } else {
        x0 = y0 = 0;
      }
      if (r0) {
        x2 = r0 * Math.cos(a1 - p0);
        y2 = r0 * Math.sin(a1 - p0);
        x3 = r0 * Math.cos(a0 + p0);
        y3 = r0 * Math.sin(a0 + p0);
        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;
        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {
          var h0 = (a0 + a1) / 2;
          x2 = r0 * Math.cos(h0);
          y2 = r0 * Math.sin(h0);
          x3 = y3 = null;
        }
      } else {
        x2 = y2 = 0;
      }
      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {
        cr = r0 < r1 ^ cw ? 0 : 1;
        var rc1 = rc, rc0 = rc;
        if (da < π) {
          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
        }
        if (x1 != null) {
          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);
          if (rc === rc1) {
            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 0,", cr, " ", t30[1], "A", r1, ",", r1, " 0 ", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), ",", cw, " ", t12[1], "A", rc1, ",", rc1, " 0 0,", cr, " ", t12[0]);
          } else {
            path.push("M", t30[0], "A", rc1, ",", rc1, " 0 1,", cr, " ", t12[0]);
          }
        } else {
          path.push("M", x0, ",", y0);
        }
        if (x3 != null) {
          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);
          if (rc === rc0) {
            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t21[1], "A", r0, ",", r0, " 0 ", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), ",", 1 - cw, " ", t03[1], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
          } else {
            path.push("L", t21[0], "A", rc0, ",", rc0, " 0 0,", cr, " ", t03[0]);
          }
        } else {
          path.push("L", x2, ",", y2);
        }
      } else {
        path.push("M", x0, ",", y0);
        if (x1 != null) path.push("A", r1, ",", r1, " 0 ", l1, ",", cw, " ", x1, ",", y1);
        path.push("L", x2, ",", y2);
        if (x3 != null) path.push("A", r0, ",", r0, " 0 ", l0, ",", 1 - cw, " ", x3, ",", y3);
      }
      path.push("Z");
      return path.join("");
    }
    function circleSegment(r1, cw) {
      return "M0," + r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + -r1 + "A" + r1 + "," + r1 + " 0 1," + cw + " 0," + r1;
    }
    arc.innerRadius = function(v) {
      if (!arguments.length) return innerRadius;
      innerRadius = d3_functor(v);
      return arc;
    };
    arc.outerRadius = function(v) {
      if (!arguments.length) return outerRadius;
      outerRadius = d3_functor(v);
      return arc;
    };
    arc.cornerRadius = function(v) {
      if (!arguments.length) return cornerRadius;
      cornerRadius = d3_functor(v);
      return arc;
    };
    arc.padRadius = function(v) {
      if (!arguments.length) return padRadius;
      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);
      return arc;
    };
    arc.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return arc;
    };
    arc.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return arc;
    };
    arc.padAngle = function(v) {
      if (!arguments.length) return padAngle;
      padAngle = d3_functor(v);
      return arc;
    };
    arc.centroid = function() {
      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;
      return [ Math.cos(a) * r, Math.sin(a) * r ];
    };
    return arc;
  };
  var d3_svg_arcAuto = "auto";
  function d3_svg_arcInnerRadius(d) {
    return d.innerRadius;
  }
  function d3_svg_arcOuterRadius(d) {
    return d.outerRadius;
  }
  function d3_svg_arcStartAngle(d) {
    return d.startAngle;
  }
  function d3_svg_arcEndAngle(d) {
    return d.endAngle;
  }
  function d3_svg_arcPadAngle(d) {
    return d && d.padAngle;
  }
  function d3_svg_arcSweep(x0, y0, x1, y1) {
    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;
  }
  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {
    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;
    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];
  }
  function d3_svg_line(projection) {
    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
    function line(data) {
      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
      function segment() {
        segments.push("M", interpolate(projection(points), tension));
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
        } else if (points.length) {
          segment();
          points = [];
        }
      }
      if (points.length) segment();
      return segments.length ? segments.join("") : null;
    }
    line.x = function(_) {
      if (!arguments.length) return x;
      x = _;
      return line;
    };
    line.y = function(_) {
      if (!arguments.length) return y;
      y = _;
      return line;
    };
    line.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return line;
    };
    line.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      return line;
    };
    line.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return line;
    };
    return line;
  }
  d3.svg.line = function() {
    return d3_svg_line(d3_identity);
  };
  var d3_svg_lineInterpolators = d3.map({
    linear: d3_svg_lineLinear,
    "linear-closed": d3_svg_lineLinearClosed,
    step: d3_svg_lineStep,
    "step-before": d3_svg_lineStepBefore,
    "step-after": d3_svg_lineStepAfter,
    basis: d3_svg_lineBasis,
    "basis-open": d3_svg_lineBasisOpen,
    "basis-closed": d3_svg_lineBasisClosed,
    bundle: d3_svg_lineBundle,
    cardinal: d3_svg_lineCardinal,
    "cardinal-open": d3_svg_lineCardinalOpen,
    "cardinal-closed": d3_svg_lineCardinalClosed,
    monotone: d3_svg_lineMonotone
  });
  d3_svg_lineInterpolators.forEach(function(key, value) {
    value.key = key;
    value.closed = /-closed$/.test(key);
  });
  function d3_svg_lineLinear(points) {
    return points.length > 1 ? points.join("L") : points + "Z";
  }
  function d3_svg_lineLinearClosed(points) {
    return points.join("L") + "Z";
  }
  function d3_svg_lineStep(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
    if (n > 1) path.push("H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepBefore(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepAfter(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
    return path.join("");
  }
  function d3_svg_lineCardinalOpen(points, tension) {
    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineCardinalClosed(points, tension) {
    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
  }
  function d3_svg_lineCardinal(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineHermite(points, tangents) {
    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
      return d3_svg_lineLinear(points);
    }
    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
    if (quad) {
      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
      p0 = points[1];
      pi = 2;
    }
    if (tangents.length > 1) {
      t = tangents[1];
      p = points[pi];
      pi++;
      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      for (var i = 2; i < tangents.length; i++, pi++) {
        p = points[pi];
        t = tangents[i];
        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      }
    }
    if (quad) {
      var lp = points[pi];
      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
    }
    return path;
  }
  function d3_svg_lineCardinalTangents(points, tension) {
    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
    while (++i < n) {
      p0 = p1;
      p1 = p2;
      p2 = points[i];
      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
    }
    return tangents;
  }
  function d3_svg_lineBasis(points) {
    if (points.length < 3) return d3_svg_lineLinear(points);
    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    points.push(points[n - 1]);
    while (++i <= n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    points.pop();
    path.push("L", pi);
    return path.join("");
  }
  function d3_svg_lineBasisOpen(points) {
    if (points.length < 4) return d3_svg_lineLinear(points);
    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
    while (++i < 3) {
      pi = points[i];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
    --i;
    while (++i < n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBasisClosed(points) {
    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
    while (++i < 4) {
      pi = points[i % n];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    --i;
    while (++i < m) {
      pi = points[i % n];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBundle(points, tension) {
    var n = points.length - 1;
    if (n) {
      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
      while (++i <= n) {
        p = points[i];
        t = i / n;
        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
      }
    }
    return d3_svg_lineBasis(points);
  }
  function d3_svg_lineDot4(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
  }
  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
  function d3_svg_lineBasisBezier(path, x, y) {
    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
  }
  function d3_svg_lineSlope(p0, p1) {
    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
  }
  function d3_svg_lineFiniteDifferences(points) {
    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
    while (++i < j) {
      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
    }
    m[i] = d;
    return m;
  }
  function d3_svg_lineMonotoneTangents(points) {
    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
    while (++i < j) {
      d = d3_svg_lineSlope(points[i], points[i + 1]);
      if (abs(d) < ε) {
        m[i] = m[i + 1] = 0;
      } else {
        a = m[i] / d;
        b = m[i + 1] / d;
        s = a * a + b * b;
        if (s > 9) {
          s = d * 3 / Math.sqrt(s);
          m[i] = s * a;
          m[i + 1] = s * b;
        }
      }
    }
    i = -1;
    while (++i <= j) {
      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
      tangents.push([ s || 0, m[i] * s || 0 ]);
    }
    return tangents;
  }
  function d3_svg_lineMonotone(points) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
  }
  d3.svg.line.radial = function() {
    var line = d3_svg_line(d3_svg_lineRadial);
    line.radius = line.x, delete line.x;
    line.angle = line.y, delete line.y;
    return line;
  };
  function d3_svg_lineRadial(points) {
    var point, i = -1, n = points.length, r, a;
    while (++i < n) {
      point = points[i];
      r = point[0];
      a = point[1] - halfπ;
      point[0] = r * Math.cos(a);
      point[1] = r * Math.sin(a);
    }
    return points;
  }
  function d3_svg_area(projection) {
    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
    function area(data) {
      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
        return x;
      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
        return y;
      } : d3_functor(y1), x, y;
      function segment() {
        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
        } else if (points0.length) {
          segment();
          points0 = [];
          points1 = [];
        }
      }
      if (points0.length) segment();
      return segments.length ? segments.join("") : null;
    }
    area.x = function(_) {
      if (!arguments.length) return x1;
      x0 = x1 = _;
      return area;
    };
    area.x0 = function(_) {
      if (!arguments.length) return x0;
      x0 = _;
      return area;
    };
    area.x1 = function(_) {
      if (!arguments.length) return x1;
      x1 = _;
      return area;
    };
    area.y = function(_) {
      if (!arguments.length) return y1;
      y0 = y1 = _;
      return area;
    };
    area.y0 = function(_) {
      if (!arguments.length) return y0;
      y0 = _;
      return area;
    };
    area.y1 = function(_) {
      if (!arguments.length) return y1;
      y1 = _;
      return area;
    };
    area.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return area;
    };
    area.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      interpolateReverse = interpolate.reverse || interpolate;
      L = interpolate.closed ? "M" : "L";
      return area;
    };
    area.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return area;
    };
    return area;
  }
  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
  d3.svg.area = function() {
    return d3_svg_area(d3_identity);
  };
  d3.svg.area.radial = function() {
    var area = d3_svg_area(d3_svg_lineRadial);
    area.radius = area.x, delete area.x;
    area.innerRadius = area.x0, delete area.x0;
    area.outerRadius = area.x1, delete area.x1;
    area.angle = area.y, delete area.y;
    area.startAngle = area.y0, delete area.y0;
    area.endAngle = area.y1, delete area.y1;
    return area;
  };
  d3.svg.chord = function() {
    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function chord(d, i) {
      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
    }
    function subgroup(self, f, d, i) {
      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;
      return {
        r: r,
        a0: a0,
        a1: a1,
        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
      };
    }
    function equals(a, b) {
      return a.a0 == b.a0 && a.a1 == b.a1;
    }
    function arc(r, p, a) {
      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
    }
    function curve(r0, p0, r1, p1) {
      return "Q 0,0 " + p1;
    }
    chord.radius = function(v) {
      if (!arguments.length) return radius;
      radius = d3_functor(v);
      return chord;
    };
    chord.source = function(v) {
      if (!arguments.length) return source;
      source = d3_functor(v);
      return chord;
    };
    chord.target = function(v) {
      if (!arguments.length) return target;
      target = d3_functor(v);
      return chord;
    };
    chord.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return chord;
    };
    chord.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return chord;
    };
    return chord;
  };
  function d3_svg_chordRadius(d) {
    return d.radius;
  }
  d3.svg.diagonal = function() {
    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
    function diagonal(d, i) {
      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
        x: p0.x,
        y: m
      }, {
        x: p3.x,
        y: m
      }, p3 ];
      p = p.map(projection);
      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
    }
    diagonal.source = function(x) {
      if (!arguments.length) return source;
      source = d3_functor(x);
      return diagonal;
    };
    diagonal.target = function(x) {
      if (!arguments.length) return target;
      target = d3_functor(x);
      return diagonal;
    };
    diagonal.projection = function(x) {
      if (!arguments.length) return projection;
      projection = x;
      return diagonal;
    };
    return diagonal;
  };
  function d3_svg_diagonalProjection(d) {
    return [ d.x, d.y ];
  }
  d3.svg.diagonal.radial = function() {
    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
    diagonal.projection = function(x) {
      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
    };
    return diagonal;
  };
  function d3_svg_diagonalRadialProjection(projection) {
    return function() {
      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;
      return [ r * Math.cos(a), r * Math.sin(a) ];
    };
  }
  d3.svg.symbol = function() {
    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
    function symbol(d, i) {
      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
    }
    symbol.type = function(x) {
      if (!arguments.length) return type;
      type = d3_functor(x);
      return symbol;
    };
    symbol.size = function(x) {
      if (!arguments.length) return size;
      size = d3_functor(x);
      return symbol;
    };
    return symbol;
  };
  function d3_svg_symbolSize() {
    return 64;
  }
  function d3_svg_symbolType() {
    return "circle";
  }
  function d3_svg_symbolCircle(size) {
    var r = Math.sqrt(size / π);
    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
  }
  var d3_svg_symbols = d3.map({
    circle: d3_svg_symbolCircle,
    cross: function(size) {
      var r = Math.sqrt(size / 5) / 2;
      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
    },
    diamond: function(size) {
      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
    },
    square: function(size) {
      var r = Math.sqrt(size) / 2;
      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
    },
    "triangle-down": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
    },
    "triangle-up": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
    }
  });
  d3.svg.symbolTypes = d3_svg_symbols.keys();
  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
  d3_selectionPrototype.transition = function(name) {
    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {
      time: Date.now(),
      ease: d3_ease_cubicInOut,
      delay: 0,
      duration: 250
    };
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_selectionPrototype.interrupt = function(name) {
    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));
  };
  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());
  function d3_selection_interruptNS(ns) {
    return function() {
      var lock, activeId, active;
      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {
        active.timer.c = null;
        active.timer.t = NaN;
        if (--lock.count) delete lock[activeId]; else delete this[ns];
        lock.active += .5;
        active.event && active.event.interrupt.call(this, this.__data__, active.index);
      }
    };
  }
  function d3_transition(groups, ns, id) {
    d3_subclass(groups, d3_transitionPrototype);
    groups.namespace = ns;
    groups.id = id;
    return groups;
  }
  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
  d3_transitionPrototype.call = d3_selectionPrototype.call;
  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
  d3_transitionPrototype.node = d3_selectionPrototype.node;
  d3_transitionPrototype.size = d3_selectionPrototype.size;
  d3.transition = function(selection, name) {
    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);
  };
  d3.transition.prototype = d3_transitionPrototype;
  d3_transitionPrototype.select = function(selector) {
    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          d3_transitionNode(subnode, i, ns, id, node[ns][id]);
          subgroup.push(subnode);
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_transitionPrototype.selectAll = function(selector) {
    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          transition = node[ns][id];
          subnodes = selector.call(node, node.__data__, i, j);
          subgroups.push(subgroup = []);
          for (var k = -1, o = subnodes.length; ++k < o; ) {
            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);
            subgroup.push(subnode);
          }
        }
      }
    }
    return d3_transition(subgroups, ns, id);
  };
  d3_transitionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_transition(subgroups, this.namespace, this.id);
  };
  d3_transitionPrototype.tween = function(name, tween) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);
    return d3_selection_each(this, tween == null ? function(node) {
      node[ns][id].tween.remove(name);
    } : function(node) {
      node[ns][id].tween.set(name, tween);
    });
  };
  function d3_transition_tween(groups, name, value, tween) {
    var id = groups.id, ns = groups.namespace;
    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
    } : (value = tween(value), function(node) {
      node[ns][id].tween.set(name, value);
    }));
  }
  d3_transitionPrototype.attr = function(nameNS, value) {
    if (arguments.length < 2) {
      for (value in nameNS) this.attr(value, nameNS[value]);
      return this;
    }
    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrTween(b) {
      return b == null ? attrNull : (b += "", function() {
        var a = this.getAttribute(name), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttribute(name, i(t));
        });
      });
    }
    function attrTweenNS(b) {
      return b == null ? attrNullNS : (b += "", function() {
        var a = this.getAttributeNS(name.space, name.local), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttributeNS(name.space, name.local, i(t));
        });
      });
    }
    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.attrTween = function(nameNS, tween) {
    var name = d3.ns.qualify(nameNS);
    function attrTween(d, i) {
      var f = tween.call(this, d, i, this.getAttribute(name));
      return f && function(t) {
        this.setAttribute(name, f(t));
      };
    }
    function attrTweenNS(d, i) {
      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
      return f && function(t) {
        this.setAttributeNS(name.space, name.local, f(t));
      };
    }
    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.style(priority, name[priority], value);
        return this;
      }
      priority = "";
    }
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleString(b) {
      return b == null ? styleNull : (b += "", function() {
        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;
        return a !== b && (i = d3_interpolate(a, b), function(t) {
          this.style.setProperty(name, i(t), priority);
        });
      });
    }
    return d3_transition_tween(this, "style." + name, value, styleString);
  };
  d3_transitionPrototype.styleTween = function(name, tween, priority) {
    if (arguments.length < 3) priority = "";
    function styleTween(d, i) {
      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));
      return f && function(t) {
        this.style.setProperty(name, f(t), priority);
      };
    }
    return this.tween("style." + name, styleTween);
  };
  d3_transitionPrototype.text = function(value) {
    return d3_transition_tween(this, "text", value, d3_transition_text);
  };
  function d3_transition_text(b) {
    if (b == null) b = "";
    return function() {
      this.textContent = b;
    };
  }
  d3_transitionPrototype.remove = function() {
    var ns = this.namespace;
    return this.each("end.transition", function() {
      var p;
      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);
    });
  };
  d3_transitionPrototype.ease = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].ease;
    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
    return d3_selection_each(this, function(node) {
      node[ns][id].ease = value;
    });
  };
  d3_transitionPrototype.delay = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].delay;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node[ns][id].delay = +value.call(node, node.__data__, i, j);
    } : (value = +value, function(node) {
      node[ns][id].delay = value;
    }));
  };
  d3_transitionPrototype.duration = function(value) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 1) return this.node()[ns][id].duration;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));
    } : (value = Math.max(1, value), function(node) {
      node[ns][id].duration = value;
    }));
  };
  d3_transitionPrototype.each = function(type, listener) {
    var id = this.id, ns = this.namespace;
    if (arguments.length < 2) {
      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
      try {
        d3_transitionInheritId = id;
        d3_selection_each(this, function(node, i, j) {
          d3_transitionInherit = node[ns][id];
          type.call(node, node.__data__, i, j);
        });
      } finally {
        d3_transitionInherit = inherit;
        d3_transitionInheritId = inheritId;
      }
    } else {
      d3_selection_each(this, function(node) {
        var transition = node[ns][id];
        (transition.event || (transition.event = d3.dispatch("start", "end", "interrupt"))).on(type, listener);
      });
    }
    return this;
  };
  d3_transitionPrototype.transition = function() {
    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if (node = group[i]) {
          transition = node[ns][id0];
          d3_transitionNode(node, i, ns, id1, {
            time: transition.time,
            ease: transition.ease,
            delay: transition.delay + transition.duration,
            duration: transition.duration
          });
        }
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, ns, id1);
  };
  function d3_transitionNamespace(name) {
    return name == null ? "__transition__" : "__transition_" + name + "__";
  }
  function d3_transitionNode(node, i, ns, id, inherit) {
    var lock = node[ns] || (node[ns] = {
      active: 0,
      count: 0
    }), transition = lock[id], time, timer, duration, ease, tweens;
    function schedule(elapsed) {
      var delay = transition.delay;
      timer.t = delay + time;
      if (delay <= elapsed) return start(elapsed - delay);
      timer.c = start;
    }
    function start(elapsed) {
      var activeId = lock.active, active = lock[activeId];
      if (active) {
        active.timer.c = null;
        active.timer.t = NaN;
        --lock.count;
        delete lock[activeId];
        active.event && active.event.interrupt.call(node, node.__data__, active.index);
      }
      for (var cancelId in lock) {
        if (+cancelId < id) {
          var cancel = lock[cancelId];
          cancel.timer.c = null;
          cancel.timer.t = NaN;
          --lock.count;
          delete lock[cancelId];
        }
      }
      timer.c = tick;
      d3_timer(function() {
        if (timer.c && tick(elapsed || 1)) {
          timer.c = null;
          timer.t = NaN;
        }
        return 1;
      }, 0, time);
      lock.active = id;
      transition.event && transition.event.start.call(node, node.__data__, i);
      tweens = [];
      transition.tween.forEach(function(key, value) {
        if (value = value.call(node, node.__data__, i)) {
          tweens.push(value);
        }
      });
      ease = transition.ease;
      duration = transition.duration;
    }
    function tick(elapsed) {
      var t = elapsed / duration, e = ease(t), n = tweens.length;
      while (n > 0) {
        tweens[--n].call(node, e);
      }
      if (t >= 1) {
        transition.event && transition.event.end.call(node, node.__data__, i);
        if (--lock.count) delete lock[id]; else delete node[ns];
        return 1;
      }
    }
    if (!transition) {
      time = inherit.time;
      timer = d3_timer(schedule, 0, time);
      transition = lock[id] = {
        tween: new d3_Map(),
        time: time,
        timer: timer,
        delay: inherit.delay,
        duration: inherit.duration,
        ease: inherit.ease,
        index: i
      };
      inherit = null;
      ++lock.count;
    }
  }
  d3.svg.axis = function() {
    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
    function axis(g) {
      g.each(function() {
        var g = d3.select(this);
        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;
        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
        d3.transition(path));
        tickEnter.append("line");
        tickEnter.append("text");
        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text"), sign = orient === "top" || orient === "left" ? -1 : 1, x1, x2, y1, y2;
        if (orient === "bottom" || orient === "top") {
          tickTransform = d3_svg_axisX, x1 = "x", y1 = "y", x2 = "x2", y2 = "y2";
          text.attr("dy", sign < 0 ? "0em" : ".71em").style("text-anchor", "middle");
          pathUpdate.attr("d", "M" + range[0] + "," + sign * outerTickSize + "V0H" + range[1] + "V" + sign * outerTickSize);
        } else {
          tickTransform = d3_svg_axisY, x1 = "y", y1 = "x", x2 = "y2", y2 = "x2";
          text.attr("dy", ".32em").style("text-anchor", sign < 0 ? "end" : "start");
          pathUpdate.attr("d", "M" + sign * outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + sign * outerTickSize);
        }
        lineEnter.attr(y2, sign * innerTickSize);
        textEnter.attr(y1, sign * tickSpacing);
        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);
        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);
        if (scale1.rangeBand) {
          var x = scale1, dx = x.rangeBand() / 2;
          scale0 = scale1 = function(d) {
            return x(d) + dx;
          };
        } else if (scale0.rangeBand) {
          scale0 = scale1;
        } else {
          tickExit.call(tickTransform, scale1, scale0);
        }
        tickEnter.call(tickTransform, scale0, scale1);
        tickUpdate.call(tickTransform, scale1, scale1);
      });
    }
    axis.scale = function(x) {
      if (!arguments.length) return scale;
      scale = x;
      return axis;
    };
    axis.orient = function(x) {
      if (!arguments.length) return orient;
      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
      return axis;
    };
    axis.ticks = function() {
      if (!arguments.length) return tickArguments_;
      tickArguments_ = d3_array(arguments);
      return axis;
    };
    axis.tickValues = function(x) {
      if (!arguments.length) return tickValues;
      tickValues = x;
      return axis;
    };
    axis.tickFormat = function(x) {
      if (!arguments.length) return tickFormat_;
      tickFormat_ = x;
      return axis;
    };
    axis.tickSize = function(x) {
      var n = arguments.length;
      if (!n) return innerTickSize;
      innerTickSize = +x;
      outerTickSize = +arguments[n - 1];
      return axis;
    };
    axis.innerTickSize = function(x) {
      if (!arguments.length) return innerTickSize;
      innerTickSize = +x;
      return axis;
    };
    axis.outerTickSize = function(x) {
      if (!arguments.length) return outerTickSize;
      outerTickSize = +x;
      return axis;
    };
    axis.tickPadding = function(x) {
      if (!arguments.length) return tickPadding;
      tickPadding = +x;
      return axis;
    };
    axis.tickSubdivide = function() {
      return arguments.length && axis;
    };
    return axis;
  };
  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  };
  function d3_svg_axisX(selection, x0, x1) {
    selection.attr("transform", function(d) {
      var v0 = x0(d);
      return "translate(" + (isFinite(v0) ? v0 : x1(d)) + ",0)";
    });
  }
  function d3_svg_axisY(selection, y0, y1) {
    selection.attr("transform", function(d) {
      var v0 = y0(d);
      return "translate(0," + (isFinite(v0) ? v0 : y1(d)) + ")";
    });
  }
  d3.svg.brush = function() {
    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
    function brush(g) {
      g.each(function() {
        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
        var background = g.selectAll(".background").data([ 0 ]);
        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
        var resize = g.selectAll(".resize").data(resizes, d3_identity);
        resize.exit().remove();
        resize.enter().append("g").attr("class", function(d) {
          return "resize " + d;
        }).style("cursor", function(d) {
          return d3_svg_brushCursor[d];
        }).append("rect").attr("x", function(d) {
          return /[ew]$/.test(d) ? -3 : null;
        }).attr("y", function(d) {
          return /^[ns]/.test(d) ? -3 : null;
        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
        resize.style("display", brush.empty() ? "none" : null);
        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
        if (x) {
          range = d3_scaleRange(x);
          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
          redrawX(gUpdate);
        }
        if (y) {
          range = d3_scaleRange(y);
          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
          redrawY(gUpdate);
        }
        redraw(gUpdate);
      });
    }
    brush.event = function(g) {
      g.each(function() {
        var event_ = event.of(this, arguments), extent1 = {
          x: xExtent,
          y: yExtent,
          i: xExtentDomain,
          j: yExtentDomain
        }, extent0 = this.__chart__ || extent1;
        this.__chart__ = extent1;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.brush", function() {
            xExtentDomain = extent0.i;
            yExtentDomain = extent0.j;
            xExtent = extent0.x;
            yExtent = extent0.y;
            event_({
              type: "brushstart"
            });
          }).tween("brush:brush", function() {
            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
            xExtentDomain = yExtentDomain = null;
            return function(t) {
              xExtent = extent1.x = xi(t);
              yExtent = extent1.y = yi(t);
              event_({
                type: "brush",
                mode: "resize"
              });
            };
          }).each("end.brush", function() {
            xExtentDomain = extent1.i;
            yExtentDomain = extent1.j;
            event_({
              type: "brush",
              mode: "resize"
            });
            event_({
              type: "brushend"
            });
          });
        } else {
          event_({
            type: "brushstart"
          });
          event_({
            type: "brush",
            mode: "resize"
          });
          event_({
            type: "brushend"
          });
        }
      });
    };
    function redraw(g) {
      g.selectAll(".resize").attr("transform", function(d) {
        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
      });
    }
    function redrawX(g) {
      g.select(".extent").attr("x", xExtent[0]);
      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
    }
    function redrawY(g) {
      g.select(".extent").attr("y", yExtent[0]);
      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
    }
    function brushstart() {
      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;
      var w = d3.select(d3_window(target)).on("keydown.brush", keydown).on("keyup.brush", keyup);
      if (d3.event.changedTouches) {
        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
      } else {
        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
      }
      g.interrupt().selectAll("*").interrupt();
      if (dragging) {
        origin[0] = xExtent[0] - origin[0];
        origin[1] = yExtent[0] - origin[1];
      } else if (resizing) {
        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
        origin[0] = xExtent[ex];
        origin[1] = yExtent[ey];
      } else if (d3.event.altKey) center = origin.slice();
      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
      d3.select("body").style("cursor", eventTarget.style("cursor"));
      event_({
        type: "brushstart"
      });
      brushmove();
      function keydown() {
        if (d3.event.keyCode == 32) {
          if (!dragging) {
            center = null;
            origin[0] -= xExtent[1];
            origin[1] -= yExtent[1];
            dragging = 2;
          }
          d3_eventPreventDefault();
        }
      }
      function keyup() {
        if (d3.event.keyCode == 32 && dragging == 2) {
          origin[0] += xExtent[1];
          origin[1] += yExtent[1];
          dragging = 0;
          d3_eventPreventDefault();
        }
      }
      function brushmove() {
        var point = d3.mouse(target), moved = false;
        if (offset) {
          point[0] += offset[0];
          point[1] += offset[1];
        }
        if (!dragging) {
          if (d3.event.altKey) {
            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
            origin[0] = xExtent[+(point[0] < center[0])];
            origin[1] = yExtent[+(point[1] < center[1])];
          } else center = null;
        }
        if (resizingX && move1(point, x, 0)) {
          redrawX(g);
          moved = true;
        }
        if (resizingY && move1(point, y, 1)) {
          redrawY(g);
          moved = true;
        }
        if (moved) {
          redraw(g);
          event_({
            type: "brush",
            mode: dragging ? "move" : "resize"
          });
        }
      }
      function move1(point, scale, i) {
        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
        if (dragging) {
          r0 -= position;
          r1 -= size + position;
        }
        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
        if (dragging) {
          max = (min += position) + size;
        } else {
          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
          if (position < min) {
            max = min;
            min = position;
          } else {
            max = position;
          }
        }
        if (extent[0] != min || extent[1] != max) {
          if (i) yExtentDomain = null; else xExtentDomain = null;
          extent[0] = min;
          extent[1] = max;
          return true;
        }
      }
      function brushend() {
        brushmove();
        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
        d3.select("body").style("cursor", null);
        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
        dragRestore();
        event_({
          type: "brushend"
        });
      }
    }
    brush.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.clamp = function(z) {
      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
      return brush;
    };
    brush.extent = function(z) {
      var x0, x1, y0, y1, t;
      if (!arguments.length) {
        if (x) {
          if (xExtentDomain) {
            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
          } else {
            x0 = xExtent[0], x1 = xExtent[1];
            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
            if (x1 < x0) t = x0, x0 = x1, x1 = t;
          }
        }
        if (y) {
          if (yExtentDomain) {
            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
          } else {
            y0 = yExtent[0], y1 = yExtent[1];
            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
            if (y1 < y0) t = y0, y0 = y1, y1 = t;
          }
        }
        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
      }
      if (x) {
        x0 = z[0], x1 = z[1];
        if (y) x0 = x0[0], x1 = x1[0];
        xExtentDomain = [ x0, x1 ];
        if (x.invert) x0 = x(x0), x1 = x(x1);
        if (x1 < x0) t = x0, x0 = x1, x1 = t;
        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
      }
      if (y) {
        y0 = z[0], y1 = z[1];
        if (x) y0 = y0[1], y1 = y1[1];
        yExtentDomain = [ y0, y1 ];
        if (y.invert) y0 = y(y0), y1 = y(y1);
        if (y1 < y0) t = y0, y0 = y1, y1 = t;
        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
      }
      return brush;
    };
    brush.clear = function() {
      if (!brush.empty()) {
        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
        xExtentDomain = yExtentDomain = null;
      }
      return brush;
    };
    brush.empty = function() {
      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
    };
    return d3.rebind(brush, event, "on");
  };
  var d3_svg_brushCursor = {
    n: "ns-resize",
    e: "ew-resize",
    s: "ns-resize",
    w: "ew-resize",
    nw: "nwse-resize",
    ne: "nesw-resize",
    se: "nwse-resize",
    sw: "nesw-resize"
  };
  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
  var d3_time_formatUtc = d3_time_format.utc;
  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
  function d3_time_formatIsoNative(date) {
    return date.toISOString();
  }
  d3_time_formatIsoNative.parse = function(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
  };
  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
  d3_time.second = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 1e3) * 1e3);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
  }, function(date) {
    return date.getSeconds();
  });
  d3_time.seconds = d3_time.second.range;
  d3_time.seconds.utc = d3_time.second.utc.range;
  d3_time.minute = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 6e4) * 6e4);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
  }, function(date) {
    return date.getMinutes();
  });
  d3_time.minutes = d3_time.minute.range;
  d3_time.minutes.utc = d3_time.minute.utc.range;
  d3_time.hour = d3_time_interval(function(date) {
    var timezone = date.getTimezoneOffset() / 60;
    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
  }, function(date) {
    return date.getHours();
  });
  d3_time.hours = d3_time.hour.range;
  d3_time.hours.utc = d3_time.hour.utc.range;
  d3_time.month = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setDate(1);
    return date;
  }, function(date, offset) {
    date.setMonth(date.getMonth() + offset);
  }, function(date) {
    return date.getMonth();
  });
  d3_time.months = d3_time.month.range;
  d3_time.months.utc = d3_time.month.utc.range;
  function d3_time_scale(linear, methods, format) {
    function scale(x) {
      return linear(x);
    }
    scale.invert = function(x) {
      return d3_time_scaleDate(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
      linear.domain(x);
      return scale;
    };
    function tickMethod(extent, count) {
      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
        return d / 31536e6;
      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
    }
    scale.nice = function(interval, skip) {
      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
      if (method) interval = method[0], skip = method[1];
      function skipped(date) {
        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
      }
      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
        floor: function(date) {
          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
          return date;
        },
        ceil: function(date) {
          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
          return date;
        }
      } : interval));
    };
    scale.ticks = function(interval, skip) {
      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
        range: interval
      }, skip ];
      if (method) interval = method[0], skip = method[1];
      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
    };
    scale.tickFormat = function() {
      return format;
    };
    scale.copy = function() {
      return d3_time_scale(linear.copy(), methods, format);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_time_scaleDate(t) {
    return new Date(t);
  }
  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
    return d.getMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getMinutes();
  } ], [ "%I %p", function(d) {
    return d.getHours();
  } ], [ "%a %d", function(d) {
    return d.getDay() && d.getDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getDate() != 1;
  } ], [ "%B", function(d) {
    return d.getMonth();
  } ], [ "%Y", d3_true ] ]);
  var d3_time_scaleMilliseconds = {
    range: function(start, stop, step) {
      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
    },
    floor: d3_identity,
    ceil: d3_identity
  };
  d3_time_scaleLocalMethods.year = d3_time.year;
  d3_time.scale = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
  };
  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
    return [ m[0].utc, m[1] ];
  });
  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
    return d.getUTCMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getUTCSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getUTCMinutes();
  } ], [ "%I %p", function(d) {
    return d.getUTCHours();
  } ], [ "%a %d", function(d) {
    return d.getUTCDay() && d.getUTCDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getUTCDate() != 1;
  } ], [ "%B", function(d) {
    return d.getUTCMonth();
  } ], [ "%Y", d3_true ] ]);
  d3_time_scaleUtcMethods.year = d3_time.year.utc;
  d3_time.scale.utc = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
  };
  d3.text = d3_xhrType(function(request) {
    return request.responseText;
  });
  d3.json = function(url, callback) {
    return d3_xhr(url, "application/json", d3_json, callback);
  };
  function d3_json(request) {
    return JSON.parse(request.responseText);
  }
  d3.html = function(url, callback) {
    return d3_xhr(url, "text/html", d3_html, callback);
  };
  function d3_html(request) {
    var range = d3_document.createRange();
    range.selectNode(d3_document.body);
    return range.createContextualFragment(request.responseText);
  }
  d3.xml = d3_xhrType(function(request) {
    return request.responseXML;
  });
  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else {}
}();

/***/ }),

/***/ "./node_modules/topojson/index.js":
/*!****************************************!*\
  !*** ./node_modules/topojson/index.js ***!
  \****************************************/
/*! exports provided: bbox, feature, mesh, meshArcs, merge, mergeArcs, neighbors, quantize, transform, untransform, topology, filter, filterAttached, filterAttachedWeight, filterWeight, planarRingArea, planarTriangleArea, presimplify, quantile, simplify, sphericalRingArea, sphericalTriangleArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var topojson_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! topojson-client */ "./node_modules/topojson/node_modules/topojson-client/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bbox", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["bbox"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "feature", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["feature"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mesh", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["mesh"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meshArcs", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["meshArcs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["merge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeArcs", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["mergeArcs"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neighbors", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["neighbors"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["quantize"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["transform"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "untransform", function() { return topojson_client__WEBPACK_IMPORTED_MODULE_0__["untransform"]; });

/* harmony import */ var topojson_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! topojson-server */ "./node_modules/topojson/node_modules/topojson-server/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "topology", function() { return topojson_server__WEBPACK_IMPORTED_MODULE_1__["topology"]; });

/* harmony import */ var topojson_simplify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! topojson-simplify */ "./node_modules/topojson/node_modules/topojson-simplify/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["filter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterAttached", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["filterAttached"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterAttachedWeight", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["filterAttachedWeight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterWeight", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["filterWeight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planarRingArea", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["planarRingArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planarTriangleArea", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["planarTriangleArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "presimplify", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["presimplify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["quantile"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "simplify", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["simplify"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sphericalRingArea", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["sphericalRingArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sphericalTriangleArea", function() { return topojson_simplify__WEBPACK_IMPORTED_MODULE_2__["sphericalTriangleArea"]; });






/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/index.js ***!
  \*********************************************************************/
/*! exports provided: bbox, feature, mesh, meshArcs, merge, mergeArcs, neighbors, quantize, transform, untransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_bbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/bbox */ "./node_modules/topojson/node_modules/topojson-client/src/bbox.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bbox", function() { return _src_bbox__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_feature__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/feature */ "./node_modules/topojson/node_modules/topojson-client/src/feature.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "feature", function() { return _src_feature__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_mesh__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/mesh */ "./node_modules/topojson/node_modules/topojson-client/src/mesh.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mesh", function() { return _src_mesh__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "meshArcs", function() { return _src_mesh__WEBPACK_IMPORTED_MODULE_2__["meshArcs"]; });

/* harmony import */ var _src_merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/merge */ "./node_modules/topojson/node_modules/topojson-client/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mergeArcs", function() { return _src_merge__WEBPACK_IMPORTED_MODULE_3__["mergeArcs"]; });

/* harmony import */ var _src_neighbors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/neighbors */ "./node_modules/topojson/node_modules/topojson-client/src/neighbors.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "neighbors", function() { return _src_neighbors__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _src_quantize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/quantize */ "./node_modules/topojson/node_modules/topojson-client/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantize", function() { return _src_quantize__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_transform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/transform */ "./node_modules/topojson/node_modules/topojson-client/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transform", function() { return _src_transform__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_untransform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/untransform */ "./node_modules/topojson/node_modules/topojson-client/src/untransform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "untransform", function() { return _src_untransform__WEBPACK_IMPORTED_MODULE_7__["default"]; });











/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/bbox.js":
/*!************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/bbox.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transform */ "./node_modules/topojson/node_modules/topojson-client/src/transform.js");


/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  var t = Object(_transform__WEBPACK_IMPORTED_MODULE_0__["default"])(topology.transform), key,
      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;

  function bboxPoint(p) {
    p = t(p);
    if (p[0] < x0) x0 = p[0];
    if (p[0] > x1) x1 = p[0];
    if (p[1] < y0) y0 = p[1];
    if (p[1] > y1) y1 = p[1];
  }

  function bboxGeometry(o) {
    switch (o.type) {
      case "GeometryCollection": o.geometries.forEach(bboxGeometry); break;
      case "Point": bboxPoint(o.coordinates); break;
      case "MultiPoint": o.coordinates.forEach(bboxPoint); break;
    }
  }

  topology.arcs.forEach(function(arc) {
    var i = -1, n = arc.length, p;
    while (++i < n) {
      p = t(arc[i], i);
      if (p[0] < x0) x0 = p[0];
      if (p[0] > x1) x1 = p[0];
      if (p[1] < y0) y0 = p[1];
      if (p[1] > y1) y1 = p[1];
    }
  });

  for (key in topology.objects) {
    bboxGeometry(topology.objects[key]);
  }

  return [x0, y0, x1, y1];
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/bisect.js":
/*!**************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/bisect.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, x) {
  var lo = 0, hi = a.length;
  while (lo < hi) {
    var mid = lo + hi >>> 1;
    if (a[mid] < x) lo = mid + 1;
    else hi = mid;
  }
  return lo;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/feature.js":
/*!***************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/feature.js ***!
  \***************************************************************************/
/*! exports provided: default, feature, object */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feature", function() { return feature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "object", function() { return object; });
/* harmony import */ var _reverse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reverse */ "./node_modules/topojson/node_modules/topojson-client/src/reverse.js");
/* harmony import */ var _transform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transform */ "./node_modules/topojson/node_modules/topojson-client/src/transform.js");



/* harmony default export */ __webpack_exports__["default"] = (function(topology, o) {
  return o.type === "GeometryCollection"
      ? {type: "FeatureCollection", features: o.geometries.map(function(o) { return feature(topology, o); })}
      : feature(topology, o);
});

function feature(topology, o) {
  var id = o.id,
      bbox = o.bbox,
      properties = o.properties == null ? {} : o.properties,
      geometry = object(topology, o);
  return id == null && bbox == null ? {type: "Feature", properties: properties, geometry: geometry}
      : bbox == null ? {type: "Feature", id: id, properties: properties, geometry: geometry}
      : {type: "Feature", id: id, bbox: bbox, properties: properties, geometry: geometry};
}

function object(topology, o) {
  var transformPoint = Object(_transform__WEBPACK_IMPORTED_MODULE_1__["default"])(topology.transform),
      arcs = topology.arcs;

  function arc(i, points) {
    if (points.length) points.pop();
    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {
      points.push(transformPoint(a[k], k));
    }
    if (i < 0) Object(_reverse__WEBPACK_IMPORTED_MODULE_0__["default"])(points, n);
  }

  function point(p) {
    return transformPoint(p);
  }

  function line(arcs) {
    var points = [];
    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);
    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.
    return points;
  }

  function ring(arcs) {
    var points = line(arcs);
    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.
    return points;
  }

  function polygon(arcs) {
    return arcs.map(ring);
  }

  function geometry(o) {
    var type = o.type, coordinates;
    switch (type) {
      case "GeometryCollection": return {type: type, geometries: o.geometries.map(geometry)};
      case "Point": coordinates = point(o.coordinates); break;
      case "MultiPoint": coordinates = o.coordinates.map(point); break;
      case "LineString": coordinates = line(o.arcs); break;
      case "MultiLineString": coordinates = o.arcs.map(line); break;
      case "Polygon": coordinates = polygon(o.arcs); break;
      case "MultiPolygon": coordinates = o.arcs.map(polygon); break;
      default: return null;
    }
    return {type: type, coordinates: coordinates};
  }

  return geometry(o);
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/identity.js":
/*!****************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/identity.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/merge.js":
/*!*************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/merge.js ***!
  \*************************************************************************/
/*! exports provided: default, mergeArcs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mergeArcs", function() { return mergeArcs; });
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature */ "./node_modules/topojson/node_modules/topojson-client/src/feature.js");
/* harmony import */ var _stitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stitch */ "./node_modules/topojson/node_modules/topojson-client/src/stitch.js");



function planarRingArea(ring) {
  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;
  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];
  return Math.abs(area); // Note: doubled area!
}

/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  return Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, mergeArcs.apply(this, arguments));
});

function mergeArcs(topology, objects) {
  var polygonsByArc = {},
      polygons = [],
      groups = [];

  objects.forEach(geometry);

  function geometry(o) {
    switch (o.type) {
      case "GeometryCollection": o.geometries.forEach(geometry); break;
      case "Polygon": extract(o.arcs); break;
      case "MultiPolygon": o.arcs.forEach(extract); break;
    }
  }

  function extract(polygon) {
    polygon.forEach(function(ring) {
      ring.forEach(function(arc) {
        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);
      });
    });
    polygons.push(polygon);
  }

  function area(ring) {
    return planarRingArea(Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, {type: "Polygon", arcs: [ring]}).coordinates[0]);
  }

  polygons.forEach(function(polygon) {
    if (!polygon._) {
      var group = [],
          neighbors = [polygon];
      polygon._ = 1;
      groups.push(group);
      while (polygon = neighbors.pop()) {
        group.push(polygon);
        polygon.forEach(function(ring) {
          ring.forEach(function(arc) {
            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {
              if (!polygon._) {
                polygon._ = 1;
                neighbors.push(polygon);
              }
            });
          });
        });
      }
    }
  });

  polygons.forEach(function(polygon) {
    delete polygon._;
  });

  return {
    type: "MultiPolygon",
    arcs: groups.map(function(polygons) {
      var arcs = [], n;

      // Extract the exterior (unique) arcs.
      polygons.forEach(function(polygon) {
        polygon.forEach(function(ring) {
          ring.forEach(function(arc) {
            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {
              arcs.push(arc);
            }
          });
        });
      });

      // Stitch the arcs into one or more rings.
      arcs = Object(_stitch__WEBPACK_IMPORTED_MODULE_1__["default"])(topology, arcs);

      // If more than one ring is returned,
      // at most one of these rings can be the exterior;
      // choose the one with the greatest absolute area.
      if ((n = arcs.length) > 1) {
        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {
          if ((ki = area(arcs[i])) > k) {
            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;
          }
        }
      }

      return arcs;
    })
  };
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/mesh.js":
/*!************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/mesh.js ***!
  \************************************************************************/
/*! exports provided: default, meshArcs */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "meshArcs", function() { return meshArcs; });
/* harmony import */ var _feature__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature */ "./node_modules/topojson/node_modules/topojson-client/src/feature.js");
/* harmony import */ var _stitch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stitch */ "./node_modules/topojson/node_modules/topojson-client/src/stitch.js");



/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  return Object(_feature__WEBPACK_IMPORTED_MODULE_0__["object"])(topology, meshArcs.apply(this, arguments));
});

function meshArcs(topology, object, filter) {
  var arcs, i, n;
  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);
  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;
  return {type: "MultiLineString", arcs: Object(_stitch__WEBPACK_IMPORTED_MODULE_1__["default"])(topology, arcs)};
}

function extractArcs(topology, object, filter) {
  var arcs = [],
      geomsByArc = [],
      geom;

  function extract0(i) {
    var j = i < 0 ? ~i : i;
    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});
  }

  function extract1(arcs) {
    arcs.forEach(extract0);
  }

  function extract2(arcs) {
    arcs.forEach(extract1);
  }

  function extract3(arcs) {
    arcs.forEach(extract2);
  }

  function geometry(o) {
    switch (geom = o, o.type) {
      case "GeometryCollection": o.geometries.forEach(geometry); break;
      case "LineString": extract1(o.arcs); break;
      case "MultiLineString": case "Polygon": extract2(o.arcs); break;
      case "MultiPolygon": extract3(o.arcs); break;
    }
  }

  geometry(object);

  geomsByArc.forEach(filter == null
      ? function(geoms) { arcs.push(geoms[0].i); }
      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });

  return arcs;
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/neighbors.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/neighbors.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect */ "./node_modules/topojson/node_modules/topojson-client/src/bisect.js");


/* harmony default export */ __webpack_exports__["default"] = (function(objects) {
  var indexesByArc = {}, // arc index -> array of object indexes
      neighbors = objects.map(function() { return []; });

  function line(arcs, i) {
    arcs.forEach(function(a) {
      if (a < 0) a = ~a;
      var o = indexesByArc[a];
      if (o) o.push(i);
      else indexesByArc[a] = [i];
    });
  }

  function polygon(arcs, i) {
    arcs.forEach(function(arc) { line(arc, i); });
  }

  function geometry(o, i) {
    if (o.type === "GeometryCollection") o.geometries.forEach(function(o) { geometry(o, i); });
    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);
  }

  var geometryType = {
    LineString: line,
    MultiLineString: polygon,
    Polygon: polygon,
    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }
  };

  objects.forEach(geometry);

  for (var i in indexesByArc) {
    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {
      for (var k = j + 1; k < m; ++k) {
        var ij = indexes[j], ik = indexes[k], n;
        if ((n = neighbors[ij])[i = Object(_bisect__WEBPACK_IMPORTED_MODULE_0__["default"])(n, ik)] !== ik) n.splice(i, 0, ik);
        if ((n = neighbors[ik])[i = Object(_bisect__WEBPACK_IMPORTED_MODULE_0__["default"])(n, ij)] !== ij) n.splice(i, 0, ij);
      }
    }
  }

  return neighbors;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/quantize.js":
/*!****************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/quantize.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bbox */ "./node_modules/topojson/node_modules/topojson-client/src/bbox.js");
/* harmony import */ var _untransform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./untransform */ "./node_modules/topojson/node_modules/topojson-client/src/untransform.js");



/* harmony default export */ __webpack_exports__["default"] = (function(topology, transform) {
  if (topology.transform) throw new Error("already quantized");

  if (!transform || !transform.scale) {
    if (!((n = Math.floor(transform)) >= 2)) throw new Error("n must be ≥2");
    box = topology.bbox || Object(_bbox__WEBPACK_IMPORTED_MODULE_0__["default"])(topology);
    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;
    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};
  } else {
    box = topology.bbox;
  }

  var t = Object(_untransform__WEBPACK_IMPORTED_MODULE_1__["default"])(transform), box, key, inputs = topology.objects, outputs = {};

  function quantizePoint(point) {
    return t(point);
  }

  function quantizeGeometry(input) {
    var output;
    switch (input.type) {
      case "GeometryCollection": output = {type: "GeometryCollection", geometries: input.geometries.map(quantizeGeometry)}; break;
      case "Point": output = {type: "Point", coordinates: quantizePoint(input.coordinates)}; break;
      case "MultiPoint": output = {type: "MultiPoint", coordinates: input.coordinates.map(quantizePoint)}; break;
      default: return input;
    }
    if (input.id != null) output.id = input.id;
    if (input.bbox != null) output.bbox = input.bbox;
    if (input.properties != null) output.properties = input.properties;
    return output;
  }

  function quantizeArc(input) {
    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic
    output[0] = t(input[0], 0);
    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points
    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points
    output.length = j;
    return output;
  }

  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);

  return {
    type: "Topology",
    bbox: box,
    transform: transform,
    objects: outputs,
    arcs: topology.arcs.map(quantizeArc)
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/reverse.js":
/*!***************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/reverse.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(array, n) {
  var t, j = array.length, i = j - n;
  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/stitch.js":
/*!**************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/stitch.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(topology, arcs) {
  var stitchedArcs = {},
      fragmentByStart = {},
      fragmentByEnd = {},
      fragments = [],
      emptyIndex = -1;

  // Stitch empty arcs first, since they may be subsumed by other arcs.
  arcs.forEach(function(i, j) {
    var arc = topology.arcs[i < 0 ? ~i : i], t;
    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {
      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;
    }
  });

  arcs.forEach(function(i) {
    var e = ends(i),
        start = e[0],
        end = e[1],
        f, g;

    if (f = fragmentByEnd[start]) {
      delete fragmentByEnd[f.end];
      f.push(i);
      f.end = end;
      if (g = fragmentByStart[end]) {
        delete fragmentByStart[g.start];
        var fg = g === f ? f : f.concat(g);
        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;
      } else {
        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
      }
    } else if (f = fragmentByStart[end]) {
      delete fragmentByStart[f.start];
      f.unshift(i);
      f.start = start;
      if (g = fragmentByEnd[start]) {
        delete fragmentByEnd[g.end];
        var gf = g === f ? f : g.concat(f);
        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;
      } else {
        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;
      }
    } else {
      f = [i];
      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;
    }
  });

  function ends(i) {
    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;
    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });
    else p1 = arc[arc.length - 1];
    return i < 0 ? [p1, p0] : [p0, p1];
  }

  function flush(fragmentByEnd, fragmentByStart) {
    for (var k in fragmentByEnd) {
      var f = fragmentByEnd[k];
      delete fragmentByStart[f.start];
      delete f.start;
      delete f.end;
      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });
      fragments.push(f);
    }
  }

  flush(fragmentByEnd, fragmentByStart);
  flush(fragmentByStart, fragmentByEnd);
  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });

  return fragments;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/transform.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/transform.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "./node_modules/topojson/node_modules/topojson-client/src/identity.js");


/* harmony default export */ __webpack_exports__["default"] = (function(transform) {
  if (transform == null) return _identity__WEBPACK_IMPORTED_MODULE_0__["default"];
  var x0,
      y0,
      kx = transform.scale[0],
      ky = transform.scale[1],
      dx = transform.translate[0],
      dy = transform.translate[1];
  return function(input, i) {
    if (!i) x0 = y0 = 0;
    var j = 2, n = input.length, output = new Array(n);
    output[0] = (x0 += input[0]) * kx + dx;
    output[1] = (y0 += input[1]) * ky + dy;
    while (j < n) output[j] = input[j], ++j;
    return output;
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-client/src/untransform.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-client/src/untransform.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./identity */ "./node_modules/topojson/node_modules/topojson-client/src/identity.js");


/* harmony default export */ __webpack_exports__["default"] = (function(transform) {
  if (transform == null) return _identity__WEBPACK_IMPORTED_MODULE_0__["default"];
  var x0,
      y0,
      kx = transform.scale[0],
      ky = transform.scale[1],
      dx = transform.translate[0],
      dy = transform.translate[1];
  return function(input, i) {
    if (!i) x0 = y0 = 0;
    var j = 2,
        n = input.length,
        output = new Array(n),
        x1 = Math.round((input[0] - dx) / kx),
        y1 = Math.round((input[1] - dy) / ky);
    output[0] = x1 - x0, x0 = x1;
    output[1] = y1 - y0, y0 = y1;
    while (j < n) output[j] = input[j], ++j;
    return output;
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/index.js ***!
  \*********************************************************************/
/*! exports provided: topology */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_topology__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/topology */ "./node_modules/topojson/node_modules/topojson-server/src/topology.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "topology", function() { return _src_topology__WEBPACK_IMPORTED_MODULE_0__["default"]; });




/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/bounds.js":
/*!**************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/bounds.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Computes the bounding box of the specified hash of GeoJSON objects.
/* harmony default export */ __webpack_exports__["default"] = (function(objects) {
  var x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity;

  function boundGeometry(geometry) {
    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);
  }

  var boundGeometryType = {
    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },
    Point: function(o) { boundPoint(o.coordinates); },
    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },
    LineString: function(o) { boundLine(o.arcs); },
    MultiLineString: function(o) { o.arcs.forEach(boundLine); },
    Polygon: function(o) { o.arcs.forEach(boundLine); },
    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }
  };

  function boundPoint(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  }

  function boundLine(coordinates) {
    coordinates.forEach(boundPoint);
  }

  function boundMultiLine(coordinates) {
    coordinates.forEach(boundLine);
  }

  for (var key in objects) {
    boundGeometry(objects[key]);
  }

  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/cut.js":
/*!***********************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/cut.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _join__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./join */ "./node_modules/topojson/node_modules/topojson-server/src/join.js");


// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared
// point sequences are identified. The topology can then be subsequently deduped
// to remove exact duplicate arcs.
/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  var junctions = Object(_join__WEBPACK_IMPORTED_MODULE_0__["default"])(topology),
      coordinates = topology.coordinates,
      lines = topology.lines,
      rings = topology.rings,
      next,
      i, n;

  for (i = 0, n = lines.length; i < n; ++i) {
    var line = lines[i],
        lineMid = line[0],
        lineEnd = line[1];
    while (++lineMid < lineEnd) {
      if (junctions.has(coordinates[lineMid])) {
        next = {0: lineMid, 1: line[1]};
        line[1] = lineMid;
        line = line.next = next;
      }
    }
  }

  for (i = 0, n = rings.length; i < n; ++i) {
    var ring = rings[i],
        ringStart = ring[0],
        ringMid = ringStart,
        ringEnd = ring[1],
        ringFixed = junctions.has(coordinates[ringStart]);
    while (++ringMid < ringEnd) {
      if (junctions.has(coordinates[ringMid])) {
        if (ringFixed) {
          next = {0: ringMid, 1: ring[1]};
          ring[1] = ringMid;
          ring = ring.next = next;
        } else { // For the first junction, we can rotate rather than cut.
          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);
          coordinates[ringEnd] = coordinates[ringStart];
          ringFixed = true;
          ringMid = ringStart; // restart; we may have skipped junctions
        }
      }
    }
  }

  return topology;
});

function rotateArray(array, start, end, offset) {
  reverse(array, start, end);
  reverse(array, start, start + offset);
  reverse(array, start + offset, end);
}

function reverse(array, start, end) {
  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {
    t = array[start], array[start] = array[end], array[end] = t;
  }
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/dedup.js":
/*!*************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/dedup.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hash_hashmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hash/hashmap */ "./node_modules/topojson/node_modules/topojson-server/src/hash/hashmap.js");
/* harmony import */ var _hash_point_equal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hash/point-equal */ "./node_modules/topojson/node_modules/topojson-server/src/hash/point-equal.js");
/* harmony import */ var _hash_point_hash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hash/point-hash */ "./node_modules/topojson/node_modules/topojson-server/src/hash/point-hash.js");




// Given a cut topology, combines duplicate arcs.
/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  var coordinates = topology.coordinates,
      lines = topology.lines, line,
      rings = topology.rings, ring,
      arcCount = lines.length + rings.length,
      i, n;

  delete topology.lines;
  delete topology.rings;

  // Count the number of (non-unique) arcs to initialize the hashmap safely.
  for (i = 0, n = lines.length; i < n; ++i) {
    line = lines[i]; while (line = line.next) ++arcCount;
  }
  for (i = 0, n = rings.length; i < n; ++i) {
    ring = rings[i]; while (ring = ring.next) ++arcCount;
  }

  var arcsByEnd = Object(_hash_hashmap__WEBPACK_IMPORTED_MODULE_0__["default"])(arcCount * 2 * 1.4, _hash_point_hash__WEBPACK_IMPORTED_MODULE_2__["default"], _hash_point_equal__WEBPACK_IMPORTED_MODULE_1__["default"]),
      arcs = topology.arcs = [];

  for (i = 0, n = lines.length; i < n; ++i) {
    line = lines[i];
    do {
      dedupLine(line);
    } while (line = line.next);
  }

  for (i = 0, n = rings.length; i < n; ++i) {
    ring = rings[i];
    if (ring.next) { // arc is no longer closed
      do {
        dedupLine(ring);
      } while (ring = ring.next);
    } else {
      dedupRing(ring);
    }
  }

  function dedupLine(arc) {
    var startPoint,
        endPoint,
        startArcs, startArc,
        endArcs, endArc,
        i, n;

    // Does this arc match an existing arc in order?
    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {
      for (i = 0, n = startArcs.length; i < n; ++i) {
        startArc = startArcs[i];
        if (equalLine(startArc, arc)) {
          arc[0] = startArc[0];
          arc[1] = startArc[1];
          return;
        }
      }
    }

    // Does this arc match an existing arc in reverse order?
    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {
      for (i = 0, n = endArcs.length; i < n; ++i) {
        endArc = endArcs[i];
        if (reverseEqualLine(endArc, arc)) {
          arc[1] = endArc[0];
          arc[0] = endArc[1];
          return;
        }
      }
    }

    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);
    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);
    arcs.push(arc);
  }

  function dedupRing(arc) {
    var endPoint,
        endArcs,
        endArc,
        i, n;

    // Does this arc match an existing line in order, or reverse order?
    // Rings are closed, so their start point and end point is the same.
    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {
      for (i = 0, n = endArcs.length; i < n; ++i) {
        endArc = endArcs[i];
        if (equalRing(endArc, arc)) {
          arc[0] = endArc[0];
          arc[1] = endArc[1];
          return;
        }
        if (reverseEqualRing(endArc, arc)) {
          arc[0] = endArc[1];
          arc[1] = endArc[0];
          return;
        }
      }
    }

    // Otherwise, does this arc match an existing ring in order, or reverse order?
    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {
      for (i = 0, n = endArcs.length; i < n; ++i) {
        endArc = endArcs[i];
        if (equalRing(endArc, arc)) {
          arc[0] = endArc[0];
          arc[1] = endArc[1];
          return;
        }
        if (reverseEqualRing(endArc, arc)) {
          arc[0] = endArc[1];
          arc[1] = endArc[0];
          return;
        }
      }
    }

    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);
    arcs.push(arc);
  }

  function equalLine(arcA, arcB) {
    var ia = arcA[0], ib = arcB[0],
        ja = arcA[1], jb = arcB[1];
    if (ia - ja !== ib - jb) return false;
    for (; ia <= ja; ++ia, ++ib) if (!Object(_hash_point_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[ia], coordinates[ib])) return false;
    return true;
  }

  function reverseEqualLine(arcA, arcB) {
    var ia = arcA[0], ib = arcB[0],
        ja = arcA[1], jb = arcB[1];
    if (ia - ja !== ib - jb) return false;
    for (; ia <= ja; ++ia, --jb) if (!Object(_hash_point_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[ia], coordinates[jb])) return false;
    return true;
  }

  function equalRing(arcA, arcB) {
    var ia = arcA[0], ib = arcB[0],
        ja = arcA[1], jb = arcB[1],
        n = ja - ia;
    if (n !== jb - ib) return false;
    var ka = findMinimumOffset(arcA),
        kb = findMinimumOffset(arcB);
    for (var i = 0; i < n; ++i) {
      if (!Object(_hash_point_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;
    }
    return true;
  }

  function reverseEqualRing(arcA, arcB) {
    var ia = arcA[0], ib = arcB[0],
        ja = arcA[1], jb = arcB[1],
        n = ja - ia;
    if (n !== jb - ib) return false;
    var ka = findMinimumOffset(arcA),
        kb = n - findMinimumOffset(arcB);
    for (var i = 0; i < n; ++i) {
      if (!Object(_hash_point_equal__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;
    }
    return true;
  }

  // Rings are rotated to a consistent, but arbitrary, start point.
  // This is necessary to detect when a ring and a rotated copy are dupes.
  function findMinimumOffset(arc) {
    var start = arc[0],
        end = arc[1],
        mid = start,
        minimum = mid,
        minimumPoint = coordinates[mid];
    while (++mid < end) {
      var point = coordinates[mid];
      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {
        minimum = mid;
        minimumPoint = point;
      }
    }
    return minimum - start;
  }

  return topology;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/delta.js":
/*!*************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/delta.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Given an array of arcs in absolute (but already quantized!) coordinates,
// converts to fixed-point delta encoding.
// This is a destructive operation that modifies the given arcs!
/* harmony default export */ __webpack_exports__["default"] = (function(arcs) {
  var i = -1,
      n = arcs.length;

  while (++i < n) {
    var arc = arcs[i],
        j = 0,
        k = 1,
        m = arc.length,
        point = arc[0],
        x0 = point[0],
        y0 = point[1],
        x1,
        y1;

    while (++j < m) {
      point = arc[j], x1 = point[0], y1 = point[1];
      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;
    }

    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.

    arc.length = k;
  }

  return arcs;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/extract.js":
/*!***************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/extract.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Extracts the lines and rings from the specified hash of geometry objects.
//
// Returns an object with three properties:
//
// * coordinates - shared buffer of [x, y] coordinates
// * lines - lines extracted from the hash, of the form [start, end]
// * rings - rings extracted from the hash, of the form [start, end]
//
// For each ring or line, start and end represent inclusive indexes into the
// coordinates buffer. For rings (and closed lines), coordinates[start] equals
// coordinates[end].
//
// For each line or polygon geometry in the input hash, including nested
// geometries as in geometry collections, the `coordinates` array is replaced
// with an equivalent `arcs` array that, for each line (for line string
// geometries) or ring (for polygon geometries), points to one of the above
// lines or rings.
/* harmony default export */ __webpack_exports__["default"] = (function(objects) {
  var index = -1,
      lines = [],
      rings = [],
      coordinates = [];

  function extractGeometry(geometry) {
    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);
  }

  var extractGeometryType = {
    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },
    LineString: function(o) { o.arcs = extractLine(o.arcs); },
    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },
    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },
    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }
  };

  function extractLine(line) {
    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];
    var arc = {0: index - n + 1, 1: index};
    lines.push(arc);
    return arc;
  }

  function extractRing(ring) {
    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];
    var arc = {0: index - n + 1, 1: index};
    rings.push(arc);
    return arc;
  }

  function extractMultiRing(rings) {
    return rings.map(extractRing);
  }

  for (var key in objects) {
    extractGeometry(objects[key]);
  }

  return {
    type: "Topology",
    coordinates: coordinates,
    lines: lines,
    rings: rings,
    objects: objects
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/geometry.js":
/*!****************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/geometry.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.
// Any null input geometry objects are represented as {type: null} in the output.
// Any feature.{id,properties,bbox} are transferred to the output geometry object.
// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!
/* harmony default export */ __webpack_exports__["default"] = (function(inputs) {
  var outputs = {}, key;
  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);
  return outputs;
});

function geomifyObject(input) {
  return input == null ? {type: null}
      : (input.type === "FeatureCollection" ? geomifyFeatureCollection
      : input.type === "Feature" ? geomifyFeature
      : geomifyGeometry)(input);
}

function geomifyFeatureCollection(input) {
  var output = {type: "GeometryCollection", geometries: input.features.map(geomifyFeature)};
  if (input.bbox != null) output.bbox = input.bbox;
  return output;
}

function geomifyFeature(input) {
  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars
  if (input.id != null) output.id = input.id;
  if (input.bbox != null) output.bbox = input.bbox;
  for (key in input.properties) { output.properties = input.properties; break; }
  return output;
}

function geomifyGeometry(input) {
  if (input == null) return {type: null};
  var output = input.type === "GeometryCollection" ? {type: "GeometryCollection", geometries: input.geometries.map(geomifyGeometry)}
      : input.type === "Point" || input.type === "MultiPoint" ? {type: input.type, coordinates: input.coordinates}
      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?
  if (input.bbox != null) output.bbox = input.bbox;
  return output;
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/hash/hashmap.js":
/*!********************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/hash/hashmap.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(size, hash, equal, keyType, keyEmpty, valueType) {
  if (arguments.length === 3) {
    keyType = valueType = Array;
    keyEmpty = null;
  }

  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),
      valstore = new valueType(size),
      mask = size - 1;

  for (var i = 0; i < size; ++i) {
    keystore[i] = keyEmpty;
  }

  function set(key, value) {
    var index = hash(key) & mask,
        matchKey = keystore[index],
        collisions = 0;
    while (matchKey != keyEmpty) {
      if (equal(matchKey, key)) return valstore[index] = value;
      if (++collisions >= size) throw new Error("full hashmap");
      matchKey = keystore[index = (index + 1) & mask];
    }
    keystore[index] = key;
    valstore[index] = value;
    return value;
  }

  function maybeSet(key, value) {
    var index = hash(key) & mask,
        matchKey = keystore[index],
        collisions = 0;
    while (matchKey != keyEmpty) {
      if (equal(matchKey, key)) return valstore[index];
      if (++collisions >= size) throw new Error("full hashmap");
      matchKey = keystore[index = (index + 1) & mask];
    }
    keystore[index] = key;
    valstore[index] = value;
    return value;
  }

  function get(key, missingValue) {
    var index = hash(key) & mask,
        matchKey = keystore[index],
        collisions = 0;
    while (matchKey != keyEmpty) {
      if (equal(matchKey, key)) return valstore[index];
      if (++collisions >= size) break;
      matchKey = keystore[index = (index + 1) & mask];
    }
    return missingValue;
  }

  function keys() {
    var keys = [];
    for (var i = 0, n = keystore.length; i < n; ++i) {
      var matchKey = keystore[i];
      if (matchKey != keyEmpty) keys.push(matchKey);
    }
    return keys;
  }

  return {
    set: set,
    maybeSet: maybeSet, // set if unset
    get: get,
    keys: keys
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/hash/hashset.js":
/*!********************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/hash/hashset.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(size, hash, equal, type, empty) {
  if (arguments.length === 3) {
    type = Array;
    empty = null;
  }

  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),
      mask = size - 1;

  for (var i = 0; i < size; ++i) {
    store[i] = empty;
  }

  function add(value) {
    var index = hash(value) & mask,
        match = store[index],
        collisions = 0;
    while (match != empty) {
      if (equal(match, value)) return true;
      if (++collisions >= size) throw new Error("full hashset");
      match = store[index = (index + 1) & mask];
    }
    store[index] = value;
    return true;
  }

  function has(value) {
    var index = hash(value) & mask,
        match = store[index],
        collisions = 0;
    while (match != empty) {
      if (equal(match, value)) return true;
      if (++collisions >= size) break;
      match = store[index = (index + 1) & mask];
    }
    return false;
  }

  function values() {
    var values = [];
    for (var i = 0, n = store.length; i < n; ++i) {
      var match = store[i];
      if (match != empty) values.push(match);
    }
    return values;
  }

  return {
    add: add,
    has: has,
    values: values
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/hash/point-equal.js":
/*!************************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/hash/point-equal.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(pointA, pointB) {
  return pointA[0] === pointB[0] && pointA[1] === pointB[1];
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/hash/point-hash.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/hash/point-hash.js ***!
  \***********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// TODO if quantized, use simpler Int32 hashing?

var buffer = new ArrayBuffer(16),
    floats = new Float64Array(buffer),
    uints = new Uint32Array(buffer);

/* harmony default export */ __webpack_exports__["default"] = (function(point) {
  floats[0] = point[0];
  floats[1] = point[1];
  var hash = uints[0] ^ uints[1];
  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];
  return hash & 0x7fffffff;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/join.js":
/*!************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/join.js ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hash_hashset__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hash/hashset */ "./node_modules/topojson/node_modules/topojson-server/src/hash/hashset.js");
/* harmony import */ var _hash_hashmap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hash/hashmap */ "./node_modules/topojson/node_modules/topojson-server/src/hash/hashmap.js");
/* harmony import */ var _hash_point_equal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hash/point-equal */ "./node_modules/topojson/node_modules/topojson-server/src/hash/point-equal.js");
/* harmony import */ var _hash_point_hash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./hash/point-hash */ "./node_modules/topojson/node_modules/topojson-server/src/hash/point-hash.js");





// Given an extracted (pre-)topology, identifies all of the junctions. These are
// the points at which arcs (lines or rings) will need to be cut so that each
// arc is represented uniquely.
//
// A junction is a point where at least one arc deviates from another arc going
// through the same point. For example, consider the point B. If there is a arc
// through ABC and another arc through CBA, then B is not a junction because in
// both cases the adjacent point pairs are {A,C}. However, if there is an
// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.
//
// For a closed ring ABCA, the first point A’s adjacent points are the second
// and last point {B,C}. For a line, the first and last point are always
// considered junctions, even if the line is closed; this ensures that a closed
// line is never rotated.
/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  var coordinates = topology.coordinates,
      lines = topology.lines,
      rings = topology.rings,
      indexes = index(),
      visitedByIndex = new Int32Array(coordinates.length),
      leftByIndex = new Int32Array(coordinates.length),
      rightByIndex = new Int32Array(coordinates.length),
      junctionByIndex = new Int8Array(coordinates.length),
      junctionCount = 0, // upper bound on number of junctions
      i, n,
      previousIndex,
      currentIndex,
      nextIndex;

  for (i = 0, n = coordinates.length; i < n; ++i) {
    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;
  }

  for (i = 0, n = lines.length; i < n; ++i) {
    var line = lines[i],
        lineStart = line[0],
        lineEnd = line[1];
    currentIndex = indexes[lineStart];
    nextIndex = indexes[++lineStart];
    ++junctionCount, junctionByIndex[currentIndex] = 1; // start
    while (++lineStart <= lineEnd) {
      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);
    }
    ++junctionCount, junctionByIndex[nextIndex] = 1; // end
  }

  for (i = 0, n = coordinates.length; i < n; ++i) {
    visitedByIndex[i] = -1;
  }

  for (i = 0, n = rings.length; i < n; ++i) {
    var ring = rings[i],
        ringStart = ring[0] + 1,
        ringEnd = ring[1];
    previousIndex = indexes[ringEnd - 1];
    currentIndex = indexes[ringStart - 1];
    nextIndex = indexes[ringStart];
    sequence(i, previousIndex, currentIndex, nextIndex);
    while (++ringStart <= ringEnd) {
      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);
    }
  }

  function sequence(i, previousIndex, currentIndex, nextIndex) {
    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection
    visitedByIndex[currentIndex] = i;
    var leftIndex = leftByIndex[currentIndex];
    if (leftIndex >= 0) {
      var rightIndex = rightByIndex[currentIndex];
      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)
        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {
        ++junctionCount, junctionByIndex[currentIndex] = 1;
      }
    } else {
      leftByIndex[currentIndex] = previousIndex;
      rightByIndex[currentIndex] = nextIndex;
    }
  }

  function index() {
    var indexByPoint = Object(_hash_hashmap__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),
        indexes = new Int32Array(coordinates.length);

    for (var i = 0, n = coordinates.length; i < n; ++i) {
      indexes[i] = indexByPoint.maybeSet(i, i);
    }

    return indexes;
  }

  function hashIndex(i) {
    return Object(_hash_point_hash__WEBPACK_IMPORTED_MODULE_3__["default"])(coordinates[i]);
  }

  function equalIndex(i, j) {
    return Object(_hash_point_equal__WEBPACK_IMPORTED_MODULE_2__["default"])(coordinates[i], coordinates[j]);
  }

  visitedByIndex = leftByIndex = rightByIndex = null;

  var junctionByPoint = Object(_hash_hashset__WEBPACK_IMPORTED_MODULE_0__["default"])(junctionCount * 1.4, _hash_point_hash__WEBPACK_IMPORTED_MODULE_3__["default"], _hash_point_equal__WEBPACK_IMPORTED_MODULE_2__["default"]), j;

  // Convert back to a standard hashset by point for caller convenience.
  for (i = 0, n = coordinates.length; i < n; ++i) {
    if (junctionByIndex[j = indexes[i]]) {
      junctionByPoint.add(coordinates[j]);
    }
  }

  return junctionByPoint;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/prequantize.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/prequantize.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(objects, bbox, n) {
  var x0 = bbox[0],
      y0 = bbox[1],
      x1 = bbox[2],
      y1 = bbox[3],
      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,
      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;

  function quantizePoint(input) {
    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];
  }

  function quantizePoints(input, m) {
    var i = -1,
        j = 0,
        n = input.length,
        output = new Array(n), // pessimistic
        pi,
        px,
        py,
        x,
        y;

    while (++i < n) {
      pi = input[i];
      x = Math.round((pi[0] - x0) * kx);
      y = Math.round((pi[1] - y0) * ky);
      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points
    }

    output.length = j;
    while (j < m) j = output.push([output[0][0], output[0][1]]);
    return output;
  }

  function quantizeLine(input) {
    return quantizePoints(input, 2);
  }

  function quantizeRing(input) {
    return quantizePoints(input, 4);
  }

  function quantizePolygon(input) {
    return input.map(quantizeRing);
  }

  function quantizeGeometry(o) {
    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);
  }

  var quantizeGeometryType = {
    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },
    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },
    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },
    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },
    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },
    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },
    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }
  };

  for (var key in objects) {
    quantizeGeometry(objects[key]);
  }

  return {
    scale: [1 / kx, 1 / ky],
    translate: [x0, y0]
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-server/src/topology.js":
/*!****************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-server/src/topology.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bounds__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bounds */ "./node_modules/topojson/node_modules/topojson-server/src/bounds.js");
/* harmony import */ var _cut__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cut */ "./node_modules/topojson/node_modules/topojson-server/src/cut.js");
/* harmony import */ var _dedup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dedup */ "./node_modules/topojson/node_modules/topojson-server/src/dedup.js");
/* harmony import */ var _delta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./delta */ "./node_modules/topojson/node_modules/topojson-server/src/delta.js");
/* harmony import */ var _extract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./extract */ "./node_modules/topojson/node_modules/topojson-server/src/extract.js");
/* harmony import */ var _geometry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./geometry */ "./node_modules/topojson/node_modules/topojson-server/src/geometry.js");
/* harmony import */ var _hash_hashmap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hash/hashmap */ "./node_modules/topojson/node_modules/topojson-server/src/hash/hashmap.js");
/* harmony import */ var _prequantize__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./prequantize */ "./node_modules/topojson/node_modules/topojson-server/src/prequantize.js");









// Constructs the TopoJSON Topology for the specified hash of features.
// Each object in the specified hash must be a GeoJSON object,
// meaning FeatureCollection, a Feature or a geometry object.
/* harmony default export */ __webpack_exports__["default"] = (function(objects, quantization) {
  var bbox = Object(_bounds__WEBPACK_IMPORTED_MODULE_0__["default"])(objects = Object(_geometry__WEBPACK_IMPORTED_MODULE_5__["default"])(objects)),
      transform = quantization > 0 && bbox && Object(_prequantize__WEBPACK_IMPORTED_MODULE_7__["default"])(objects, bbox, quantization),
      topology = Object(_dedup__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_cut__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_extract__WEBPACK_IMPORTED_MODULE_4__["default"])(objects))),
      coordinates = topology.coordinates,
      indexByArc = Object(_hash_hashmap__WEBPACK_IMPORTED_MODULE_6__["default"])(topology.arcs.length * 1.4, hashArc, equalArc);

  objects = topology.objects; // for garbage collection
  topology.bbox = bbox;
  topology.arcs = topology.arcs.map(function(arc, i) {
    indexByArc.set(arc, i);
    return coordinates.slice(arc[0], arc[1] + 1);
  });

  delete topology.coordinates;
  coordinates = null;

  function indexGeometry(geometry) {
    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);
  }

  var indexGeometryType = {
    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },
    LineString: function(o) { o.arcs = indexArcs(o.arcs); },
    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },
    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },
    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }
  };

  function indexArcs(arc) {
    var indexes = [];
    do {
      var index = indexByArc.get(arc);
      indexes.push(arc[0] < arc[1] ? index : ~index);
    } while (arc = arc.next);
    return indexes;
  }

  function indexMultiArcs(arcs) {
    return arcs.map(indexArcs);
  }

  for (var key in objects) {
    indexGeometry(objects[key]);
  }

  if (transform) {
    topology.transform = transform;
    topology.arcs = Object(_delta__WEBPACK_IMPORTED_MODULE_3__["default"])(topology.arcs);
  }

  return topology;
});

function hashArc(arc) {
  var i = arc[0], j = arc[1], t;
  if (j < i) t = i, i = j, j = t;
  return i + 31 * j;
}

function equalArc(arcA, arcB) {
  var ia = arcA[0], ja = arcA[1],
      ib = arcB[0], jb = arcB[1], t;
  if (ja < ia) t = ia, ia = ja, ja = t;
  if (jb < ib) t = ib, ib = jb, jb = t;
  return ia === ib && ja === jb;
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/index.js ***!
  \***********************************************************************/
/*! exports provided: filter, filterAttached, filterAttachedWeight, filterWeight, planarRingArea, planarTriangleArea, presimplify, quantile, simplify, sphericalRingArea, sphericalTriangleArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _src_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/filter */ "./node_modules/topojson/node_modules/topojson-simplify/src/filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _src_filter__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _src_filterAttached__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/filterAttached */ "./node_modules/topojson/node_modules/topojson-simplify/src/filterAttached.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterAttached", function() { return _src_filterAttached__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _src_filterAttachedWeight__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/filterAttachedWeight */ "./node_modules/topojson/node_modules/topojson-simplify/src/filterAttachedWeight.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterAttachedWeight", function() { return _src_filterAttachedWeight__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _src_filterWeight__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/filterWeight */ "./node_modules/topojson/node_modules/topojson-simplify/src/filterWeight.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filterWeight", function() { return _src_filterWeight__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _src_planar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src/planar */ "./node_modules/topojson/node_modules/topojson-simplify/src/planar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planarRingArea", function() { return _src_planar__WEBPACK_IMPORTED_MODULE_4__["planarRingArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "planarTriangleArea", function() { return _src_planar__WEBPACK_IMPORTED_MODULE_4__["planarTriangleArea"]; });

/* harmony import */ var _src_presimplify__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./src/presimplify */ "./node_modules/topojson/node_modules/topojson-simplify/src/presimplify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "presimplify", function() { return _src_presimplify__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _src_quantile__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./src/quantile */ "./node_modules/topojson/node_modules/topojson-simplify/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return _src_quantile__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _src_simplify__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./src/simplify */ "./node_modules/topojson/node_modules/topojson-simplify/src/simplify.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "simplify", function() { return _src_simplify__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _src_spherical__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./src/spherical */ "./node_modules/topojson/node_modules/topojson-simplify/src/spherical.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sphericalRingArea", function() { return _src_spherical__WEBPACK_IMPORTED_MODULE_8__["sphericalRingArea"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sphericalTriangleArea", function() { return _src_spherical__WEBPACK_IMPORTED_MODULE_8__["sphericalTriangleArea"]; });












/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/filter.js":
/*!****************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/filter.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _prune__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prune */ "./node_modules/topojson/node_modules/topojson-simplify/src/prune.js");


/* harmony default export */ __webpack_exports__["default"] = (function(topology, filter) {
  var oldObjects = topology.objects,
      newObjects = {},
      key;

  if (filter == null) filter = filterTrue;

  function filterGeometry(input) {
    var output, arcs;
    switch (input.type) {
      case "Polygon": {
        arcs = filterRings(input.arcs);
        output = arcs ? {type: "Polygon", arcs: arcs} : {type: null};
        break;
      }
      case "MultiPolygon": {
        arcs = input.arcs.map(filterRings).filter(filterIdentity);
        output = arcs.length ? {type: "MultiPolygon", arcs: arcs} : {type: null};
        break;
      }
      case "GeometryCollection": {
        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);
        output = arcs.length ? {type: "GeometryCollection", geometries: arcs} : {type: null};
        break;
      }
      default: return input;
    }
    if (input.id != null) output.id = input.id;
    if (input.bbox != null) output.bbox = input.bbox;
    if (input.properties != null) output.properties = input.properties;
    return output;
  }

  function filterRings(arcs) {
    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes
        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))
        : null;
  }

  function filterExteriorRing(ring) {
    return filter(ring, false);
  }

  function filterInteriorRing(ring) {
    return filter(ring, true);
  }

  for (key in oldObjects) {
    newObjects[key] = filterGeometry(oldObjects[key]);
  }

  return Object(_prune__WEBPACK_IMPORTED_MODULE_0__["default"])({
    type: "Topology",
    bbox: topology.bbox,
    transform: topology.transform,
    objects: newObjects,
    arcs: topology.arcs
  });
});

function filterTrue() {
  return true;
}

function filterIdentity(x) {
  return x;
}

function filterNotNull(geometry) {
  return geometry.type != null;
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/filterAttached.js":
/*!************************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/filterAttached.js ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings
      ownerIndex = 0,
      key;

  function testGeometry(o) {
    switch (o.type) {
      case "GeometryCollection": o.geometries.forEach(testGeometry); break;
      case "Polygon": testArcs(o.arcs); break;
      case "MultiPolygon": o.arcs.forEach(testArcs); break;
    }
  }

  function testArcs(arcs) {
    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {
      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {
        var arc = ring[j];
        if (arc < 0) arc = ~arc;
        var owner = ownerByArc[arc];
        if (owner == null) ownerByArc[arc] = ownerIndex;
        else if (owner !== ownerIndex) ownerByArc[arc] = -1;
      }
    }
  }

  for (key in topology.objects) {
    testGeometry(topology.objects[key]);
  }

  return function(ring) {
    for (var j = 0, m = ring.length, arc; j < m; ++j) {
      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {
        return true;
      }
    }
    return false;
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/filterAttachedWeight.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/filterAttachedWeight.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _filterAttached__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filterAttached */ "./node_modules/topojson/node_modules/topojson-simplify/src/filterAttached.js");
/* harmony import */ var _filterWeight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filterWeight */ "./node_modules/topojson/node_modules/topojson-simplify/src/filterWeight.js");



/* harmony default export */ __webpack_exports__["default"] = (function(topology, minWeight, weight) {
  var a = Object(_filterAttached__WEBPACK_IMPORTED_MODULE_0__["default"])(topology),
      w = Object(_filterWeight__WEBPACK_IMPORTED_MODULE_1__["default"])(topology, minWeight, weight);
  return function(ring, interior) {
    return a(ring, interior) || w(ring, interior);
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/filterWeight.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/filterWeight.js ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var topojson_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! topojson-client */ "./node_modules/topojson/node_modules/topojson-client/index.js");
/* harmony import */ var _planar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./planar */ "./node_modules/topojson/node_modules/topojson-simplify/src/planar.js");



/* harmony default export */ __webpack_exports__["default"] = (function(topology, minWeight, weight) {
  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;

  if (weight == null) weight = _planar__WEBPACK_IMPORTED_MODULE_1__["planarRingArea"];

  return function(ring, interior) {
    return weight(Object(topojson_client__WEBPACK_IMPORTED_MODULE_0__["feature"])(topology, {type: "Polygon", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/heap.js":
/*!**************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/heap.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function compare(a, b) {
  return a[1][2] - b[1][2];
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var heap = {},
      array = [],
      size = 0;

  heap.push = function(object) {
    up(array[object._ = size] = object, size++);
    return size;
  };

  heap.pop = function() {
    if (size <= 0) return;
    var removed = array[0], object;
    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);
    return removed;
  };

  heap.remove = function(removed) {
    var i = removed._, object;
    if (array[i] !== removed) return; // invalid request
    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);
    return i;
  };

  function up(object, i) {
    while (i > 0) {
      var j = ((i + 1) >> 1) - 1,
          parent = array[j];
      if (compare(object, parent) >= 0) break;
      array[parent._ = i] = parent;
      array[object._ = i = j] = object;
    }
  }

  function down(object, i) {
    while (true) {
      var r = (i + 1) << 1,
          l = r - 1,
          j = i,
          child = array[j];
      if (l < size && compare(array[l], child) < 0) child = array[j = l];
      if (r < size && compare(array[r], child) < 0) child = array[j = r];
      if (j === i) break;
      array[child._ = i] = child;
      array[object._ = i = j] = object;
    }
  }

  return heap;
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/planar.js":
/*!****************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/planar.js ***!
  \****************************************************************************/
/*! exports provided: planarTriangleArea, planarRingArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planarTriangleArea", function() { return planarTriangleArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "planarRingArea", function() { return planarRingArea; });
function planarTriangleArea(triangle) {
  var a = triangle[0], b = triangle[1], c = triangle[2];
  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;
}

function planarRingArea(ring) {
  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;
  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];
  return Math.abs(area) / 2;
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/presimplify.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/presimplify.js ***!
  \*********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var topojson_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! topojson-client */ "./node_modules/topojson/node_modules/topojson-client/index.js");
/* harmony import */ var _heap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./heap */ "./node_modules/topojson/node_modules/topojson-simplify/src/heap.js");
/* harmony import */ var _planar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./planar */ "./node_modules/topojson/node_modules/topojson-simplify/src/planar.js");




function copy(point) {
  return [point[0], point[1], 0];
}

/* harmony default export */ __webpack_exports__["default"] = (function(topology, weight) {
  var point = topology.transform ? Object(topojson_client__WEBPACK_IMPORTED_MODULE_0__["transform"])(topology.transform) : copy,
      heap = Object(_heap__WEBPACK_IMPORTED_MODULE_1__["default"])();

  if (weight == null) weight = _planar__WEBPACK_IMPORTED_MODULE_2__["planarTriangleArea"];

  var arcs = topology.arcs.map(function(arc) {
    var triangles = [],
        maxWeight = 0,
        triangle,
        i,
        n;

    arc = arc.map(point);

    for (i = 1, n = arc.length - 1; i < n; ++i) {
      triangle = [arc[i - 1], arc[i], arc[i + 1]];
      triangle[1][2] = weight(triangle);
      triangles.push(triangle);
      heap.push(triangle);
    }

    // Always keep the arc endpoints!
    arc[0][2] = arc[n][2] = Infinity;

    for (i = 0, n = triangles.length; i < n; ++i) {
      triangle = triangles[i];
      triangle.previous = triangles[i - 1];
      triangle.next = triangles[i + 1];
    }

    while (triangle = heap.pop()) {
      var previous = triangle.previous,
          next = triangle.next;

      // If the weight of the current point is less than that of the previous
      // point to be eliminated, use the latter’s weight instead. This ensures
      // that the current point cannot be eliminated without eliminating
      // previously- eliminated points.
      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;
      else maxWeight = triangle[1][2];

      if (previous) {
        previous.next = next;
        previous[2] = triangle[2];
        update(previous);
      }

      if (next) {
        next.previous = previous;
        next[0] = triangle[0];
        update(next);
      }
    }

    return arc;
  });

  function update(triangle) {
    heap.remove(triangle);
    triangle[1][2] = weight(triangle);
    heap.push(triangle);
  }

  return {
    type: "Topology",
    bbox: topology.bbox,
    objects: topology.objects,
    arcs: arcs
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/prune.js":
/*!***************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/prune.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(topology) {
  var oldObjects = topology.objects,
      newObjects = {},
      oldArcs = topology.arcs,
      oldArcsLength = oldArcs.length,
      oldIndex = -1,
      newIndexByOldIndex = new Array(oldArcsLength),
      newArcsLength = 0,
      newArcs,
      newIndex = -1,
      key;

  function scanGeometry(input) {
    switch (input.type) {
      case "GeometryCollection": input.geometries.forEach(scanGeometry); break;
      case "LineString": scanArcs(input.arcs); break;
      case "MultiLineString": input.arcs.forEach(scanArcs); break;
      case "Polygon": input.arcs.forEach(scanArcs); break;
      case "MultiPolygon": input.arcs.forEach(scanMultiArcs); break;
    }
  }

  function scanArc(index) {
    if (index < 0) index = ~index;
    if (!newIndexByOldIndex[index]) newIndexByOldIndex[index] = 1, ++newArcsLength;
  }

  function scanArcs(arcs) {
    arcs.forEach(scanArc);
  }

  function scanMultiArcs(arcs) {
    arcs.forEach(scanArcs);
  }

  function reindexGeometry(input) {
    var output;
    switch (input.type) {
      case "GeometryCollection": output = {type: "GeometryCollection", geometries: input.geometries.map(reindexGeometry)}; break;
      case "LineString": output = {type: "LineString", arcs: reindexArcs(input.arcs)}; break;
      case "MultiLineString": output = {type: "MultiLineString", arcs: input.arcs.map(reindexArcs)}; break;
      case "Polygon": output = {type: "Polygon", arcs: input.arcs.map(reindexArcs)}; break;
      case "MultiPolygon": output = {type: "MultiPolygon", arcs: input.arcs.map(reindexMultiArcs)}; break;
      default: return input;
    }
    if (input.id != null) output.id = input.id;
    if (input.bbox != null) output.bbox = input.bbox;
    if (input.properties != null) output.properties = input.properties;
    return output;
  }

  function reindexArc(oldIndex) {
    return oldIndex < 0 ? ~newIndexByOldIndex[~oldIndex] : newIndexByOldIndex[oldIndex];
  }

  function reindexArcs(arcs) {
    return arcs.map(reindexArc);
  }

  function reindexMultiArcs(arcs) {
    return arcs.map(reindexArcs);
  }

  for (key in oldObjects) {
    scanGeometry(oldObjects[key]);
  }

  newArcs = new Array(newArcsLength);

  while (++oldIndex < oldArcsLength) {
    if (newIndexByOldIndex[oldIndex]) {
      newIndexByOldIndex[oldIndex] = ++newIndex;
      newArcs[newIndex] = oldArcs[oldIndex];
    }
  }

  for (key in oldObjects) {
    newObjects[key] = reindexGeometry(oldObjects[key]);
  }

  return {
    type: "Topology",
    bbox: topology.bbox,
    transform: topology.transform,
    objects: newObjects,
    arcs: newArcs
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/quantile.js":
/*!******************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/quantile.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(topology, p) {
  var array = [];

  topology.arcs.forEach(function(arc) {
    arc.forEach(function(point) {
      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.
        array.push(point[2]);
      }
    });
  });

  return array.length && quantile(array.sort(descending), p);
});

function quantile(array, p) {
  if (!(n = array.length)) return;
  if ((p = +p) <= 0 || n < 2) return array[0];
  if (p >= 1) return array[n - 1];
  var n,
      h = (n - 1) * p,
      i = Math.floor(h),
      a = array[i],
      b = array[i + 1];
  return a + (b - a) * (h - i);
}

function descending(a, b) {
  return b - a;
}


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/simplify.js":
/*!******************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/simplify.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(topology, minWeight) {
  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;

  // Remove points whose weight is less than the minimum weight.
  var arcs = topology.arcs.map(function(input) {
    var i = -1,
        j = 0,
        n = input.length,
        output = new Array(n), // pessimistic
        point;

    while (++i < n) {
      if ((point = input[i])[2] >= minWeight) {
        output[j++] = [point[0], point[1]];
      }
    }

    output.length = j;
    return output;
  });

  return {
    type: "Topology",
    transform: topology.transform,
    bbox: topology.bbox,
    objects: topology.objects,
    arcs: arcs
  };
});


/***/ }),

/***/ "./node_modules/topojson/node_modules/topojson-simplify/src/spherical.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/topojson/node_modules/topojson-simplify/src/spherical.js ***!
  \*******************************************************************************/
/*! exports provided: sphericalRingArea, sphericalTriangleArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sphericalRingArea", function() { return sphericalRingArea; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sphericalTriangleArea", function() { return sphericalTriangleArea; });
var pi = Math.PI,
    tau = 2 * pi,
    quarterPi = pi / 4,
    radians = pi / 180,
    abs = Math.abs,
    atan2 = Math.atan2,
    cos = Math.cos,
    sin = Math.sin;

function halfArea(ring, closed) {
  var i = 0,
      n = ring.length,
      sum = 0,
      point = ring[closed ? i++ : n - 1],
      lambda0, lambda1 = point[0] * radians,
      phi1 = (point[1] * radians) / 2 + quarterPi,
      cosPhi0, cosPhi1 = cos(phi1),
      sinPhi0, sinPhi1 = sin(phi1);

  for (; i < n; ++i) {
    point = ring[i];
    lambda0 = lambda1, lambda1 = point[0] * radians;
    phi1 = (point[1] * radians) / 2 + quarterPi;
    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);
    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);

    // Spherical excess E for a spherical triangle with vertices: south pole,
    // previous point, current point.  Uses a formula derived from Cagnoli’s
    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea
    var dLambda = lambda1 - lambda0,
        sdLambda = dLambda >= 0 ? 1 : -1,
        adLambda = sdLambda * dLambda,
        k = sinPhi0 * sinPhi1,
        u = cosPhi0 * cosPhi1 + k * cos(adLambda),
        v = k * sdLambda * sin(adLambda);
    sum += atan2(v, u);
  }

  return sum;
}

function sphericalRingArea(ring, interior) {
  var sum = halfArea(ring, true);
  if (interior) sum *= -1;
  return (sum < 0 ? tau + sum : sum) * 2;
}

function sphericalTriangleArea(t) {
  return abs(halfArea(t, false)) * 2;
}


/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,